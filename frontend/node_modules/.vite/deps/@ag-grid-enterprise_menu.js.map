{
  "version": 3,
  "sources": ["../../@ag-grid-enterprise/side-bar/dist/package/main.esm.mjs", "../../@ag-grid-enterprise/column-tool-panel/dist/package/main.esm.mjs", "../../@ag-grid-enterprise/menu/dist/package/main.esm.mjs"],
  "sourcesContent": ["var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n// enterprise-modules/side-bar/src/sideBarModule.ts\nimport { ModuleNames as ModuleNames2 } from \"@ag-grid-community/core\";\nimport { EnterpriseCoreModule } from \"@ag-grid-enterprise/core\";\n\n// enterprise-modules/side-bar/src/sideBar/horizontalResizeComp.ts\nimport {\n  Autowired,\n  Component,\n  PostConstruct,\n  Events\n} from \"@ag-grid-community/core\";\nvar HorizontalResizeComp = class extends Component {\n  constructor() {\n    super(\n      /* html */\n      `<div class=\"ag-tool-panel-horizontal-resize\"></div>`\n    );\n    this.minWidth = 100;\n    this.maxWidth = null;\n  }\n  setElementToResize(elementToResize) {\n    this.elementToResize = elementToResize;\n  }\n  postConstruct() {\n    const finishedWithResizeFunc = this.horizontalResizeService.addResizeBar({\n      eResizeBar: this.getGui(),\n      dragStartPixels: 1,\n      onResizeStart: this.onResizeStart.bind(this),\n      onResizing: this.onResizing.bind(this),\n      onResizeEnd: this.onResizeEnd.bind(this)\n    });\n    this.addDestroyFunc(finishedWithResizeFunc);\n    this.setInverted(this.gos.get(\"enableRtl\"));\n  }\n  dispatchResizeEvent(start, end, width) {\n    const event = {\n      type: Events.EVENT_TOOL_PANEL_SIZE_CHANGED,\n      width,\n      started: start,\n      ended: end\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  onResizeStart() {\n    this.startingWidth = this.elementToResize.offsetWidth;\n    this.dispatchResizeEvent(true, false, this.startingWidth);\n  }\n  onResizeEnd(delta) {\n    return this.onResizing(delta, true);\n  }\n  onResizing(delta, isEnd = false) {\n    const direction = this.inverted ? -1 : 1;\n    let newWidth = Math.max(this.minWidth, Math.floor(this.startingWidth - delta * direction));\n    if (this.maxWidth != null) {\n      newWidth = Math.min(this.maxWidth, newWidth);\n    }\n    this.elementToResize.style.width = `${newWidth}px`;\n    this.dispatchResizeEvent(false, isEnd, newWidth);\n  }\n  setInverted(inverted) {\n    this.inverted = inverted;\n  }\n  setMaxWidth(value) {\n    this.maxWidth = value;\n  }\n  setMinWidth(value) {\n    if (value != null) {\n      this.minWidth = value;\n    } else {\n      this.minWidth = 100;\n    }\n  }\n};\n__decorateClass([\n  Autowired(\"horizontalResizeService\")\n], HorizontalResizeComp.prototype, \"horizontalResizeService\", 2);\n__decorateClass([\n  PostConstruct\n], HorizontalResizeComp.prototype, \"postConstruct\", 1);\n\n// enterprise-modules/side-bar/src/sideBar/sideBarComp.ts\nimport {\n  _ as _3,\n  Component as Component5,\n  Events as Events2,\n  ModuleNames,\n  ModuleRegistry,\n  PostConstruct as PostConstruct5,\n  RefSelector as RefSelector2,\n  Autowired as Autowired4,\n  ManagedFocusFeature,\n  KeyCode as KeyCode2\n} from \"@ag-grid-community/core\";\n\n// enterprise-modules/side-bar/src/sideBar/sideBarButtonsComp.ts\nimport {\n  Autowired as Autowired2,\n  Component as Component3,\n  PostConstruct as PostConstruct3,\n  PreDestroy,\n  _ as _2,\n  KeyCode\n} from \"@ag-grid-community/core\";\n\n// enterprise-modules/side-bar/src/sideBar/sideBarButtonComp.ts\nimport {\n  Component as Component2,\n  PostConstruct as PostConstruct2,\n  RefSelector,\n  _\n} from \"@ag-grid-community/core\";\nvar _SideBarButtonComp = class _SideBarButtonComp extends Component2 {\n  constructor(toolPanelDef) {\n    super();\n    this.toolPanelDef = toolPanelDef;\n  }\n  getToolPanelId() {\n    return this.toolPanelDef.id;\n  }\n  postConstruct() {\n    const template = this.createTemplate();\n    this.setTemplate(template);\n    this.setLabel();\n    this.setIcon();\n    this.addManagedListener(this.eToggleButton, \"click\", this.onButtonPressed.bind(this));\n    this.eToggleButton.setAttribute(\"id\", `ag-${this.getCompId()}-button`);\n  }\n  createTemplate() {\n    const res = (\n      /* html */\n      `<div class=\"ag-side-button\" role=\"presentation\">\n                <button type=\"button\" ref=\"eToggleButton\" tabindex=\"-1\" role=\"tab\" aria-expanded=\"false\" class=\"ag-button ag-side-button-button\">\n                    <div ref=\"eIconWrapper\" class=\"ag-side-button-icon-wrapper\" aria-hidden=\"true\"></div>\n                    <span ref =\"eLabel\" class=\"ag-side-button-label\"></span>\n                </button>\n            </div>`\n    );\n    return res;\n  }\n  setLabel() {\n    const translate = this.localeService.getLocaleTextFunc();\n    const def = this.toolPanelDef;\n    const label = translate(def.labelKey, def.labelDefault);\n    this.eLabel.innerText = label;\n  }\n  setIcon() {\n    this.eIconWrapper.insertAdjacentElement(\"afterbegin\", _.createIconNoSpan(this.toolPanelDef.iconKey, this.gos));\n  }\n  onButtonPressed() {\n    this.dispatchEvent({ type: _SideBarButtonComp.EVENT_TOGGLE_BUTTON_CLICKED });\n  }\n  setSelected(selected) {\n    this.addOrRemoveCssClass(\"ag-selected\", selected);\n    _.setAriaExpanded(this.eToggleButton, selected);\n  }\n  getButtonElement() {\n    return this.eToggleButton;\n  }\n};\n_SideBarButtonComp.EVENT_TOGGLE_BUTTON_CLICKED = \"toggleButtonClicked\";\n__decorateClass([\n  RefSelector(\"eToggleButton\")\n], _SideBarButtonComp.prototype, \"eToggleButton\", 2);\n__decorateClass([\n  RefSelector(\"eIconWrapper\")\n], _SideBarButtonComp.prototype, \"eIconWrapper\", 2);\n__decorateClass([\n  RefSelector(\"eLabel\")\n], _SideBarButtonComp.prototype, \"eLabel\", 2);\n__decorateClass([\n  PostConstruct2\n], _SideBarButtonComp.prototype, \"postConstruct\", 1);\nvar SideBarButtonComp = _SideBarButtonComp;\n\n// enterprise-modules/side-bar/src/sideBar/sideBarButtonsComp.ts\nvar _SideBarButtonsComp = class _SideBarButtonsComp extends Component3 {\n  constructor() {\n    super(_SideBarButtonsComp.TEMPLATE);\n    this.buttonComps = [];\n  }\n  postConstruct() {\n    this.addManagedListener(this.getFocusableElement(), \"keydown\", this.handleKeyDown.bind(this));\n  }\n  handleKeyDown(e) {\n    if (e.key !== KeyCode.TAB || !e.shiftKey) {\n      return;\n    }\n    const lastColumn = _2.last(this.columnModel.getAllDisplayedColumns());\n    if (this.focusService.focusGridView(lastColumn, true)) {\n      e.preventDefault();\n    }\n  }\n  setActiveButton(id) {\n    this.buttonComps.forEach((comp) => {\n      comp.setSelected(id === comp.getToolPanelId());\n    });\n  }\n  addButtonComp(def) {\n    const buttonComp = this.createBean(new SideBarButtonComp(def));\n    this.buttonComps.push(buttonComp);\n    this.appendChild(buttonComp);\n    buttonComp.addEventListener(SideBarButtonComp.EVENT_TOGGLE_BUTTON_CLICKED, () => {\n      this.dispatchEvent({\n        type: _SideBarButtonsComp.EVENT_SIDE_BAR_BUTTON_CLICKED,\n        toolPanelId: def.id\n      });\n    });\n    return buttonComp;\n  }\n  clearButtons() {\n    this.buttonComps = this.destroyBeans(this.buttonComps);\n    _2.clearElement(this.getGui());\n  }\n};\n_SideBarButtonsComp.EVENT_SIDE_BAR_BUTTON_CLICKED = \"sideBarButtonClicked\";\n_SideBarButtonsComp.TEMPLATE = /* html */\n`<div class=\"ag-side-buttons\" role=\"tablist\"></div>`;\n__decorateClass([\n  Autowired2(\"focusService\")\n], _SideBarButtonsComp.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired2(\"columnModel\")\n], _SideBarButtonsComp.prototype, \"columnModel\", 2);\n__decorateClass([\n  PostConstruct3\n], _SideBarButtonsComp.prototype, \"postConstruct\", 1);\n__decorateClass([\n  PreDestroy\n], _SideBarButtonsComp.prototype, \"clearButtons\", 1);\nvar SideBarButtonsComp = _SideBarButtonsComp;\n\n// enterprise-modules/side-bar/src/sideBar/sideBarDefParser.ts\nvar _SideBarDefParser = class _SideBarDefParser {\n  static parse(toParse) {\n    if (!toParse) {\n      return void 0;\n    }\n    if (toParse === true) {\n      return {\n        toolPanels: [\n          _SideBarDefParser.DEFAULT_COLUMN_COMP,\n          _SideBarDefParser.DEFAULT_FILTER_COMP\n        ],\n        defaultToolPanel: \"columns\"\n      };\n    }\n    if (typeof toParse === \"string\") {\n      return _SideBarDefParser.parse([toParse]);\n    }\n    if (Array.isArray(toParse)) {\n      const comps = [];\n      toParse.forEach((key) => {\n        const lookupResult = _SideBarDefParser.DEFAULT_BY_KEY[key];\n        if (!lookupResult) {\n          console.warn(`AG Grid: the key ${key} is not a valid key for specifying a tool panel, valid keys are: ${Object.keys(_SideBarDefParser.DEFAULT_BY_KEY).join(\",\")}`);\n          return;\n        }\n        comps.push(lookupResult);\n      });\n      if (comps.length === 0) {\n        return void 0;\n      }\n      return {\n        toolPanels: comps,\n        defaultToolPanel: comps[0].id\n      };\n    }\n    const result = {\n      toolPanels: _SideBarDefParser.parseComponents(toParse.toolPanels),\n      defaultToolPanel: toParse.defaultToolPanel,\n      hiddenByDefault: toParse.hiddenByDefault,\n      position: toParse.position\n    };\n    return result;\n  }\n  static parseComponents(from) {\n    const result = [];\n    if (!from) {\n      return result;\n    }\n    from.forEach((it) => {\n      let toAdd = null;\n      if (typeof it === \"string\") {\n        const lookupResult = _SideBarDefParser.DEFAULT_BY_KEY[it];\n        if (!lookupResult) {\n          console.warn(`AG Grid: the key ${it} is not a valid key for specifying a tool panel, valid keys are: ${Object.keys(_SideBarDefParser.DEFAULT_BY_KEY).join(\",\")}`);\n          return;\n        }\n        toAdd = lookupResult;\n      } else {\n        toAdd = it;\n      }\n      result.push(toAdd);\n    });\n    return result;\n  }\n};\n_SideBarDefParser.DEFAULT_COLUMN_COMP = {\n  id: \"columns\",\n  labelDefault: \"Columns\",\n  labelKey: \"columns\",\n  iconKey: \"columns\",\n  toolPanel: \"agColumnsToolPanel\"\n};\n_SideBarDefParser.DEFAULT_FILTER_COMP = {\n  id: \"filters\",\n  labelDefault: \"Filters\",\n  labelKey: \"filters\",\n  iconKey: \"filter\",\n  toolPanel: \"agFiltersToolPanel\"\n};\n_SideBarDefParser.DEFAULT_BY_KEY = {\n  columns: _SideBarDefParser.DEFAULT_COLUMN_COMP,\n  filters: _SideBarDefParser.DEFAULT_FILTER_COMP\n};\nvar SideBarDefParser = _SideBarDefParser;\n\n// enterprise-modules/side-bar/src/sideBar/toolPanelWrapper.ts\nimport {\n  Autowired as Autowired3,\n  Component as Component4,\n  PostConstruct as PostConstruct4\n} from \"@ag-grid-community/core\";\nvar _ToolPanelWrapper = class _ToolPanelWrapper extends Component4 {\n  constructor() {\n    super(_ToolPanelWrapper.TEMPLATE);\n  }\n  setupResize() {\n    const eGui = this.getGui();\n    const resizeBar = this.resizeBar = this.createManagedBean(new HorizontalResizeComp());\n    eGui.setAttribute(\"id\", `ag-${this.getCompId()}`);\n    resizeBar.setElementToResize(eGui);\n    this.appendChild(resizeBar);\n  }\n  getToolPanelId() {\n    return this.toolPanelId;\n  }\n  setToolPanelDef(toolPanelDef, params) {\n    const { id, minWidth, maxWidth, width } = toolPanelDef;\n    this.toolPanelId = id;\n    this.width = width;\n    const compDetails = this.userComponentFactory.getToolPanelCompDetails(toolPanelDef, params);\n    const componentPromise = compDetails.newAgStackInstance();\n    this.params = compDetails.params;\n    if (componentPromise == null) {\n      console.warn(`AG Grid: error processing tool panel component ${id}. You need to specify 'toolPanel'`);\n      return;\n    }\n    componentPromise.then(this.setToolPanelComponent.bind(this));\n    if (minWidth != null) {\n      this.resizeBar.setMinWidth(minWidth);\n    }\n    if (maxWidth != null) {\n      this.resizeBar.setMaxWidth(maxWidth);\n    }\n  }\n  setToolPanelComponent(compInstance) {\n    this.toolPanelCompInstance = compInstance;\n    this.appendChild(compInstance.getGui());\n    this.addDestroyFunc(() => {\n      this.destroyBean(compInstance);\n    });\n    if (this.width) {\n      this.getGui().style.width = `${this.width}px`;\n    }\n  }\n  getToolPanelInstance() {\n    return this.toolPanelCompInstance;\n  }\n  setResizerSizerSide(side) {\n    const isRtl = this.gos.get(\"enableRtl\");\n    const isLeft = side === \"left\";\n    const inverted = isRtl ? isLeft : !isLeft;\n    this.resizeBar.setInverted(inverted);\n  }\n  refresh() {\n    this.toolPanelCompInstance.refresh(this.params);\n  }\n};\n_ToolPanelWrapper.TEMPLATE = /* html */\n`<div class=\"ag-tool-panel-wrapper\" role=\"tabpanel\"/>`;\n__decorateClass([\n  Autowired3(\"userComponentFactory\")\n], _ToolPanelWrapper.prototype, \"userComponentFactory\", 2);\n__decorateClass([\n  PostConstruct4\n], _ToolPanelWrapper.prototype, \"setupResize\", 1);\nvar ToolPanelWrapper = _ToolPanelWrapper;\n\n// enterprise-modules/side-bar/src/sideBar/sideBarComp.ts\nvar _SideBarComp = class _SideBarComp extends Component5 {\n  constructor() {\n    super(_SideBarComp.TEMPLATE);\n    this.toolPanelWrappers = [];\n  }\n  postConstruct() {\n    var _a;\n    this.sideBarButtonsComp.addEventListener(SideBarButtonsComp.EVENT_SIDE_BAR_BUTTON_CLICKED, this.onToolPanelButtonClicked.bind(this));\n    const { sideBar: sideBarState } = (_a = this.gos.get(\"initialState\")) != null ? _a : {};\n    this.setSideBarDef({\n      sideBarDef: SideBarDefParser.parse(this.gos.get(\"sideBar\")),\n      sideBarState\n    });\n    this.addManagedPropertyListener(\"sideBar\", this.onSideBarUpdated.bind(this));\n    this.sideBarService.registerSideBarComp(this);\n    this.createManagedBean(new ManagedFocusFeature(\n      this.getFocusableElement(),\n      {\n        onTabKeyDown: this.onTabKeyDown.bind(this),\n        handleKeyDown: this.handleKeyDown.bind(this)\n      }\n    ));\n  }\n  onTabKeyDown(e) {\n    if (e.defaultPrevented) {\n      return;\n    }\n    const { focusService, sideBarButtonsComp } = this;\n    const eGui = this.getGui();\n    const sideBarGui = sideBarButtonsComp.getGui();\n    const activeElement = this.gos.getActiveDomElement();\n    const openPanel = eGui.querySelector(\".ag-tool-panel-wrapper:not(.ag-hidden)\");\n    const target = e.target;\n    if (!openPanel) {\n      return;\n    }\n    if (sideBarGui.contains(activeElement)) {\n      if (focusService.focusInto(openPanel, e.shiftKey)) {\n        e.preventDefault();\n      }\n      return;\n    }\n    if (!e.shiftKey) {\n      return;\n    }\n    let nextEl = null;\n    if (openPanel.contains(activeElement)) {\n      nextEl = this.focusService.findNextFocusableElement(openPanel, void 0, true);\n    } else if (focusService.isTargetUnderManagedComponent(openPanel, target) && e.shiftKey) {\n      nextEl = this.focusService.findFocusableElementBeforeTabGuard(openPanel, target);\n    }\n    if (!nextEl) {\n      nextEl = sideBarGui.querySelector(\".ag-selected button\");\n    }\n    if (nextEl && nextEl !== e.target) {\n      e.preventDefault();\n      nextEl.focus();\n    }\n  }\n  handleKeyDown(e) {\n    const currentButton = this.gos.getActiveDomElement();\n    if (!this.sideBarButtonsComp.getGui().contains(currentButton)) {\n      return;\n    }\n    const sideBarGui = this.sideBarButtonsComp.getGui();\n    const buttons = Array.prototype.slice.call(sideBarGui.querySelectorAll(\".ag-side-button\"));\n    const currentPos = buttons.findIndex((button) => button.contains(currentButton));\n    let nextPos = null;\n    switch (e.key) {\n      case KeyCode2.LEFT:\n      case KeyCode2.UP:\n        nextPos = Math.max(0, currentPos - 1);\n        break;\n      case KeyCode2.RIGHT:\n      case KeyCode2.DOWN:\n        nextPos = Math.min(currentPos + 1, buttons.length - 1);\n        break;\n    }\n    if (nextPos === null) {\n      return;\n    }\n    const innerButton = buttons[nextPos].querySelector(\"button\");\n    if (innerButton) {\n      innerButton.focus();\n      e.preventDefault();\n    }\n  }\n  onToolPanelButtonClicked(event) {\n    const id = event.toolPanelId;\n    const openedItem = this.openedItem();\n    if (openedItem === id) {\n      this.openToolPanel(void 0, \"sideBarButtonClicked\");\n    } else {\n      this.openToolPanel(id, \"sideBarButtonClicked\");\n    }\n  }\n  clearDownUi() {\n    this.sideBarButtonsComp.clearButtons();\n    this.destroyToolPanelWrappers();\n  }\n  setSideBarDef({\n    sideBarDef,\n    sideBarState,\n    existingToolPanelWrappers\n  }) {\n    this.setDisplayed(false);\n    this.sideBar = sideBarDef;\n    if (!!this.sideBar && !!this.sideBar.toolPanels) {\n      const toolPanelDefs = this.sideBar.toolPanels;\n      this.createToolPanelsAndSideButtons(toolPanelDefs, sideBarState, existingToolPanelWrappers);\n      if (!this.toolPanelWrappers.length) {\n        return;\n      }\n      const shouldDisplaySideBar = sideBarState ? sideBarState.visible : !this.sideBar.hiddenByDefault;\n      this.setDisplayed(shouldDisplaySideBar);\n      this.setSideBarPosition(sideBarState ? sideBarState.position : this.sideBar.position);\n      if (shouldDisplaySideBar) {\n        if (sideBarState) {\n          const { openToolPanel } = sideBarState;\n          if (openToolPanel) {\n            this.openToolPanel(openToolPanel, \"sideBarInitializing\");\n          }\n        } else {\n          this.openToolPanel(this.sideBar.defaultToolPanel, \"sideBarInitializing\");\n        }\n      }\n    }\n  }\n  getDef() {\n    return this.sideBar;\n  }\n  setSideBarPosition(position) {\n    if (!position) {\n      position = \"right\";\n    }\n    this.position = position;\n    const isLeft = position === \"left\";\n    const resizerSide = isLeft ? \"right\" : \"left\";\n    this.addOrRemoveCssClass(\"ag-side-bar-left\", isLeft);\n    this.addOrRemoveCssClass(\"ag-side-bar-right\", !isLeft);\n    this.toolPanelWrappers.forEach((wrapper) => {\n      wrapper.setResizerSizerSide(resizerSide);\n    });\n    this.eventService.dispatchEvent({ type: Events2.EVENT_SIDE_BAR_UPDATED });\n    return this;\n  }\n  setDisplayed(displayed, options) {\n    super.setDisplayed(displayed, options);\n    this.eventService.dispatchEvent({ type: Events2.EVENT_SIDE_BAR_UPDATED });\n  }\n  getState() {\n    const toolPanels = {};\n    this.toolPanelWrappers.forEach((wrapper) => {\n      var _a, _b;\n      toolPanels[wrapper.getToolPanelId()] = (_b = (_a = wrapper.getToolPanelInstance()) == null ? void 0 : _a.getState) == null ? void 0 : _b.call(_a);\n    });\n    return {\n      visible: this.isDisplayed(),\n      position: this.position,\n      openToolPanel: this.openedItem(),\n      toolPanels\n    };\n  }\n  createToolPanelsAndSideButtons(defs, sideBarState, existingToolPanelWrappers) {\n    var _a;\n    for (const def of defs) {\n      this.createToolPanelAndSideButton(def, (_a = sideBarState == null ? void 0 : sideBarState.toolPanels) == null ? void 0 : _a[def.id], existingToolPanelWrappers == null ? void 0 : existingToolPanelWrappers[def.id]);\n    }\n  }\n  validateDef(def) {\n    if (def.id == null) {\n      console.warn(`AG Grid: please review all your toolPanel components, it seems like at least one of them doesn't have an id`);\n      return false;\n    }\n    if (def.toolPanel === \"agColumnsToolPanel\") {\n      const moduleMissing = !ModuleRegistry.__assertRegistered(ModuleNames.ColumnsToolPanelModule, \"Column Tool Panel\", this.context.getGridId());\n      if (moduleMissing) {\n        return false;\n      }\n    }\n    if (def.toolPanel === \"agFiltersToolPanel\") {\n      const moduleMissing = !ModuleRegistry.__assertRegistered(ModuleNames.FiltersToolPanelModule, \"Filters Tool Panel\", this.context.getGridId());\n      if (moduleMissing) {\n        return false;\n      }\n      if (this.filterManager.isAdvancedFilterEnabled()) {\n        _3.warnOnce(\"Advanced Filter does not work with Filters Tool Panel. Filters Tool Panel has been disabled.\");\n        return false;\n      }\n    }\n    return true;\n  }\n  createToolPanelAndSideButton(def, initialState, existingToolPanelWrapper) {\n    if (!this.validateDef(def)) {\n      return;\n    }\n    const button = this.sideBarButtonsComp.addButtonComp(def);\n    let wrapper;\n    if (existingToolPanelWrapper) {\n      wrapper = existingToolPanelWrapper;\n    } else {\n      wrapper = this.getContext().createBean(new ToolPanelWrapper());\n      wrapper.setToolPanelDef(def, {\n        initialState,\n        onStateUpdated: () => this.eventService.dispatchEvent({ type: Events2.EVENT_SIDE_BAR_UPDATED })\n      });\n    }\n    wrapper.setDisplayed(false);\n    const wrapperGui = wrapper.getGui();\n    this.appendChild(wrapperGui);\n    this.toolPanelWrappers.push(wrapper);\n    _3.setAriaControls(button.getButtonElement(), wrapperGui);\n  }\n  refresh() {\n    this.toolPanelWrappers.forEach((wrapper) => wrapper.refresh());\n  }\n  openToolPanel(key, source = \"api\") {\n    const currentlyOpenedKey = this.openedItem();\n    if (currentlyOpenedKey === key) {\n      return;\n    }\n    this.toolPanelWrappers.forEach((wrapper) => {\n      const show = key === wrapper.getToolPanelId();\n      wrapper.setDisplayed(show);\n    });\n    const newlyOpenedKey = this.openedItem();\n    const openToolPanelChanged = currentlyOpenedKey !== newlyOpenedKey;\n    if (openToolPanelChanged) {\n      this.sideBarButtonsComp.setActiveButton(key);\n      this.raiseToolPanelVisibleEvent(key, currentlyOpenedKey != null ? currentlyOpenedKey : void 0, source);\n    }\n  }\n  getToolPanelInstance(key) {\n    const toolPanelWrapper = this.toolPanelWrappers.filter((toolPanel) => toolPanel.getToolPanelId() === key)[0];\n    if (!toolPanelWrapper) {\n      console.warn(`AG Grid: unable to lookup Tool Panel as invalid key supplied: ${key}`);\n      return;\n    }\n    return toolPanelWrapper.getToolPanelInstance();\n  }\n  raiseToolPanelVisibleEvent(key, previousKey, source) {\n    const switchingToolPanel = !!key && !!previousKey;\n    if (previousKey) {\n      const event = {\n        type: Events2.EVENT_TOOL_PANEL_VISIBLE_CHANGED,\n        source,\n        key: previousKey,\n        visible: false,\n        switchingToolPanel\n      };\n      this.eventService.dispatchEvent(event);\n    }\n    if (key) {\n      const event = {\n        type: Events2.EVENT_TOOL_PANEL_VISIBLE_CHANGED,\n        source,\n        key,\n        visible: true,\n        switchingToolPanel\n      };\n      this.eventService.dispatchEvent(event);\n    }\n  }\n  close(source = \"api\") {\n    this.openToolPanel(void 0, source);\n  }\n  isToolPanelShowing() {\n    return !!this.openedItem();\n  }\n  openedItem() {\n    let activeToolPanel = null;\n    this.toolPanelWrappers.forEach((wrapper) => {\n      if (wrapper.isDisplayed()) {\n        activeToolPanel = wrapper.getToolPanelId();\n      }\n    });\n    return activeToolPanel;\n  }\n  onSideBarUpdated() {\n    var _a;\n    const sideBarDef = SideBarDefParser.parse(this.gos.get(\"sideBar\"));\n    let existingToolPanelWrappers = {};\n    if (sideBarDef && this.sideBar) {\n      (_a = sideBarDef.toolPanels) == null ? void 0 : _a.forEach((toolPanelDef) => {\n        var _a2, _b;\n        const { id } = toolPanelDef;\n        if (!id) {\n          return;\n        }\n        const existingToolPanelDef = (_a2 = this.sideBar.toolPanels) == null ? void 0 : _a2.find(\n          (toolPanelDefToCheck) => toolPanelDefToCheck.id === id\n        );\n        if (!existingToolPanelDef || toolPanelDef.toolPanel !== existingToolPanelDef.toolPanel) {\n          return;\n        }\n        const toolPanelWrapper = this.toolPanelWrappers.find((toolPanel) => toolPanel.getToolPanelId() === id);\n        if (!toolPanelWrapper) {\n          return;\n        }\n        const params = this.gos.addGridCommonParams(__spreadProps(__spreadValues({}, (_b = toolPanelDef.toolPanelParams) != null ? _b : {}), {\n          onStateUpdated: () => this.eventService.dispatchEvent({ type: Events2.EVENT_SIDE_BAR_UPDATED })\n        }));\n        const hasRefreshed = toolPanelWrapper.getToolPanelInstance().refresh(params);\n        if (hasRefreshed !== true) {\n          return;\n        }\n        this.toolPanelWrappers = this.toolPanelWrappers.filter((toolPanel) => toolPanel !== toolPanelWrapper);\n        _3.removeFromParent(toolPanelWrapper.getGui());\n        existingToolPanelWrappers[id] = toolPanelWrapper;\n      });\n    }\n    this.clearDownUi();\n    this.setSideBarDef({ sideBarDef, existingToolPanelWrappers });\n  }\n  destroyToolPanelWrappers() {\n    this.toolPanelWrappers.forEach((wrapper) => {\n      _3.removeFromParent(wrapper.getGui());\n      this.destroyBean(wrapper);\n    });\n    this.toolPanelWrappers.length = 0;\n  }\n  destroy() {\n    this.destroyToolPanelWrappers();\n    super.destroy();\n  }\n};\n_SideBarComp.TEMPLATE = /* html */\n`<div class=\"ag-side-bar ag-unselectable\">\n            <ag-side-bar-buttons ref=\"sideBarButtons\"></ag-side-bar-buttons>\n        </div>`;\n__decorateClass([\n  Autowired4(\"focusService\")\n], _SideBarComp.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired4(\"filterManager\")\n], _SideBarComp.prototype, \"filterManager\", 2);\n__decorateClass([\n  Autowired4(\"sideBarService\")\n], _SideBarComp.prototype, \"sideBarService\", 2);\n__decorateClass([\n  RefSelector2(\"sideBarButtons\")\n], _SideBarComp.prototype, \"sideBarButtonsComp\", 2);\n__decorateClass([\n  PostConstruct5\n], _SideBarComp.prototype, \"postConstruct\", 1);\nvar SideBarComp = _SideBarComp;\n\n// enterprise-modules/side-bar/src/sideBar/common/toolPanelColDefService.ts\nimport {\n  _ as _4,\n  Autowired as Autowired5,\n  Bean,\n  BeanStub,\n  ProvidedColumnGroup\n} from \"@ag-grid-community/core\";\nvar ToolPanelColDefService = class extends BeanStub {\n  constructor() {\n    super(...arguments);\n    this.isColGroupDef = (colDef) => colDef && typeof colDef.children !== \"undefined\";\n    this.getId = (colDef) => {\n      return this.isColGroupDef(colDef) ? colDef.groupId : colDef.colId;\n    };\n  }\n  createColumnTree(colDefs) {\n    const invalidColIds = [];\n    const createDummyColGroup = (abstractColDef, depth) => {\n      if (this.isColGroupDef(abstractColDef)) {\n        const groupDef = abstractColDef;\n        const groupId = typeof groupDef.groupId !== \"undefined\" ? groupDef.groupId : groupDef.headerName;\n        const group = new ProvidedColumnGroup(groupDef, groupId, false, depth);\n        const children = [];\n        groupDef.children.forEach((def) => {\n          const child = createDummyColGroup(def, depth + 1);\n          if (child) {\n            children.push(child);\n          }\n        });\n        group.setChildren(children);\n        return group;\n      } else {\n        const colDef = abstractColDef;\n        const key = colDef.colId ? colDef.colId : colDef.field;\n        const column = this.columnModel.getPrimaryColumn(key);\n        if (!column) {\n          invalidColIds.push(colDef);\n        }\n        return column;\n      }\n    };\n    const mappedResults = [];\n    colDefs.forEach((colDef) => {\n      const result = createDummyColGroup(colDef, 0);\n      if (result) {\n        mappedResults.push(result);\n      }\n    });\n    if (invalidColIds.length > 0) {\n      console.warn(\"AG Grid: unable to find grid columns for the supplied colDef(s):\", invalidColIds);\n    }\n    return mappedResults;\n  }\n  syncLayoutWithGrid(syncLayoutCallback) {\n    const leafPathTrees = this.getLeafPathTrees();\n    const mergedColumnTrees = this.mergeLeafPathTrees(leafPathTrees);\n    syncLayoutCallback(mergedColumnTrees);\n  }\n  getLeafPathTrees() {\n    const getLeafPathTree = (node, childDef) => {\n      let leafPathTree;\n      if (node instanceof ProvidedColumnGroup) {\n        if (node.isPadding()) {\n          leafPathTree = childDef;\n        } else {\n          const groupDef = Object.assign({}, node.getColGroupDef());\n          groupDef.groupId = node.getGroupId();\n          groupDef.children = [childDef];\n          leafPathTree = groupDef;\n        }\n      } else {\n        const colDef = Object.assign({}, node.getColDef());\n        colDef.colId = node.getColId();\n        leafPathTree = colDef;\n      }\n      const parent = node.getOriginalParent();\n      if (parent) {\n        return getLeafPathTree(parent, leafPathTree);\n      } else {\n        return leafPathTree;\n      }\n    };\n    const allGridColumns = this.columnModel.getAllGridColumns();\n    const allPrimaryGridColumns = allGridColumns.filter((column) => {\n      const colDef = column.getColDef();\n      return column.isPrimary() && !colDef.showRowGroup;\n    });\n    return allPrimaryGridColumns.map((col) => getLeafPathTree(col, col.getColDef()));\n  }\n  mergeLeafPathTrees(leafPathTrees) {\n    const matchingRootGroupIds = (pathA, pathB) => {\n      const bothPathsAreGroups = this.isColGroupDef(pathA) && this.isColGroupDef(pathB);\n      return bothPathsAreGroups && this.getId(pathA) === this.getId(pathB);\n    };\n    const mergeTrees = (treeA, treeB) => {\n      if (!this.isColGroupDef(treeB)) {\n        return treeA;\n      }\n      const mergeResult = treeA;\n      const groupToMerge = treeB;\n      if (groupToMerge.children && groupToMerge.groupId) {\n        const added = this.addChildrenToGroup(mergeResult, groupToMerge.groupId, groupToMerge.children[0]);\n        if (added) {\n          return mergeResult;\n        }\n      }\n      groupToMerge.children.forEach((child) => mergeTrees(mergeResult, child));\n      return mergeResult;\n    };\n    const mergeColDefs = [];\n    for (let i = 1; i <= leafPathTrees.length; i++) {\n      const first = leafPathTrees[i - 1];\n      const second = leafPathTrees[i];\n      if (matchingRootGroupIds(first, second)) {\n        leafPathTrees[i] = mergeTrees(first, second);\n      } else {\n        mergeColDefs.push(first);\n      }\n    }\n    return mergeColDefs;\n  }\n  addChildrenToGroup(tree, groupId, colDef) {\n    const subGroupIsSplit = (currentSubGroup, currentSubGroupToAdd) => {\n      const existingChildIds = currentSubGroup.children.map(this.getId);\n      const childGroupAlreadyExists = _4.includes(existingChildIds, this.getId(currentSubGroupToAdd));\n      const lastChild = _4.last(currentSubGroup.children);\n      const lastChildIsDifferent = lastChild && this.getId(lastChild) !== this.getId(currentSubGroupToAdd);\n      return childGroupAlreadyExists && lastChildIsDifferent;\n    };\n    if (!this.isColGroupDef(tree)) {\n      return true;\n    }\n    const currentGroup = tree;\n    const groupToAdd = colDef;\n    if (subGroupIsSplit(currentGroup, groupToAdd)) {\n      currentGroup.children.push(groupToAdd);\n      return true;\n    }\n    if (currentGroup.groupId === groupId) {\n      const existingChildIds = currentGroup.children.map(this.getId);\n      const colDefAlreadyPresent = _4.includes(existingChildIds, this.getId(groupToAdd));\n      if (!colDefAlreadyPresent) {\n        currentGroup.children.push(groupToAdd);\n        return true;\n      }\n    }\n    currentGroup.children.forEach((subGroup) => this.addChildrenToGroup(subGroup, groupId, colDef));\n    return false;\n  }\n};\n__decorateClass([\n  Autowired5(\"columnModel\")\n], ToolPanelColDefService.prototype, \"columnModel\", 2);\nToolPanelColDefService = __decorateClass([\n  Bean(\"toolPanelColDefService\")\n], ToolPanelColDefService);\n\n// enterprise-modules/side-bar/src/version.ts\nvar VERSION = \"31.3.2\";\n\n// enterprise-modules/side-bar/src/sideBar/sideBarService.ts\nimport { Bean as Bean2, BeanStub as BeanStub2 } from \"@ag-grid-community/core\";\nvar SideBarService = class extends BeanStub2 {\n  registerSideBarComp(sideBarComp) {\n    this.sideBarComp = sideBarComp;\n  }\n  getSideBarComp() {\n    return this.sideBarComp;\n  }\n};\nSideBarService = __decorateClass([\n  Bean2(\"sideBarService\")\n], SideBarService);\n\n// enterprise-modules/side-bar/src/sideBarModule.ts\nvar SideBarModule = {\n  version: VERSION,\n  moduleName: ModuleNames2.SideBarModule,\n  beans: [ToolPanelColDefService, SideBarService],\n  agStackComponents: [\n    { componentName: \"AgHorizontalResize\", componentClass: HorizontalResizeComp },\n    { componentName: \"AgSideBar\", componentClass: SideBarComp },\n    { componentName: \"AgSideBarButtons\", componentClass: SideBarButtonsComp }\n  ],\n  dependantModules: [\n    EnterpriseCoreModule\n  ]\n};\nexport {\n  SideBarModule,\n  ToolPanelColDefService\n};\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n// enterprise-modules/column-tool-panel/src/columnsToolPanelModule.ts\nimport { ModuleNames as ModuleNames2 } from \"@ag-grid-community/core\";\nimport { EnterpriseCoreModule } from \"@ag-grid-enterprise/core\";\n\n// enterprise-modules/column-tool-panel/src/columnToolPanel/primaryColsHeaderPanel.ts\nimport {\n  _,\n  Autowired,\n  Events,\n  RefSelector,\n  KeyCode,\n  PostConstruct,\n  Component\n} from \"@ag-grid-community/core\";\nvar _PrimaryColsHeaderPanel = class _PrimaryColsHeaderPanel extends Component {\n  constructor() {\n    super(_PrimaryColsHeaderPanel.TEMPLATE);\n  }\n  postConstruct() {\n    this.createExpandIcons();\n    this.addManagedListener(this.eExpand, \"click\", this.onExpandClicked.bind(this));\n    this.addManagedListener(this.eExpand, \"keydown\", (e) => {\n      if (e.key === KeyCode.SPACE) {\n        e.preventDefault();\n        this.onExpandClicked();\n      }\n    });\n    this.addManagedListener(this.eSelect.getInputElement(), \"click\", this.onSelectClicked.bind(this));\n    this.addManagedPropertyListener(\"functionsReadOnly\", () => this.onFunctionsReadOnlyPropChanged());\n    this.eFilterTextField.setAutoComplete(false).onValueChange(() => this.onFilterTextChanged());\n    this.addManagedListener(\n      this.eFilterTextField.getInputElement(),\n      \"keydown\",\n      this.onMiniFilterKeyDown.bind(this)\n    );\n    this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.showOrHideOptions.bind(this));\n    const translate = this.localeService.getLocaleTextFunc();\n    this.eSelect.setInputAriaLabel(translate(\"ariaColumnSelectAll\", \"Toggle Select All Columns\"));\n    this.eFilterTextField.setInputAriaLabel(translate(\"ariaFilterColumnsInput\", \"Filter Columns Input\"));\n    this.activateTabIndex([this.eExpand]);\n  }\n  onFunctionsReadOnlyPropChanged() {\n    const readOnly = this.gos.get(\"functionsReadOnly\");\n    this.eSelect.setReadOnly(readOnly);\n    this.eSelect.addOrRemoveCssClass(\"ag-column-select-column-readonly\", readOnly);\n  }\n  init(params) {\n    this.params = params;\n    const readOnly = this.gos.get(\"functionsReadOnly\");\n    this.eSelect.setReadOnly(readOnly);\n    this.eSelect.addOrRemoveCssClass(\"ag-column-select-column-readonly\", readOnly);\n    if (this.columnModel.isReady()) {\n      this.showOrHideOptions();\n    }\n  }\n  createExpandIcons() {\n    this.eExpand.appendChild(this.eExpandChecked = _.createIconNoSpan(\"columnSelectOpen\", this.gos));\n    this.eExpand.appendChild(this.eExpandUnchecked = _.createIconNoSpan(\"columnSelectClosed\", this.gos));\n    this.eExpand.appendChild(this.eExpandIndeterminate = _.createIconNoSpan(\"columnSelectIndeterminate\", this.gos));\n    this.setExpandState(0 /* EXPANDED */);\n  }\n  // we only show expand / collapse if we are showing columns\n  showOrHideOptions() {\n    const showFilter = !this.params.suppressColumnFilter;\n    const showSelect = !this.params.suppressColumnSelectAll;\n    const showExpand = !this.params.suppressColumnExpandAll;\n    const groupsPresent = this.columnModel.isPrimaryColumnGroupsPresent();\n    const translate = this.localeService.getLocaleTextFunc();\n    this.eFilterTextField.setInputPlaceholder(translate(\"searchOoo\", \"Search...\"));\n    _.setDisplayed(this.eFilterTextField.getGui(), showFilter);\n    _.setDisplayed(this.eSelect.getGui(), showSelect);\n    _.setDisplayed(this.eExpand, showExpand && groupsPresent);\n  }\n  onFilterTextChanged() {\n    if (!this.onFilterTextChangedDebounced) {\n      this.onFilterTextChangedDebounced = _.debounce(() => {\n        const filterText = this.eFilterTextField.getValue();\n        this.dispatchEvent({ type: \"filterChanged\", filterText });\n      }, _PrimaryColsHeaderPanel.DEBOUNCE_DELAY);\n    }\n    this.onFilterTextChangedDebounced();\n  }\n  onMiniFilterKeyDown(e) {\n    if (e.key === KeyCode.ENTER) {\n      setTimeout(() => this.onSelectClicked(), _PrimaryColsHeaderPanel.DEBOUNCE_DELAY);\n    }\n  }\n  onSelectClicked() {\n    this.dispatchEvent({ type: this.selectState ? \"unselectAll\" : \"selectAll\" });\n  }\n  onExpandClicked() {\n    this.dispatchEvent({ type: this.expandState === 0 /* EXPANDED */ ? \"collapseAll\" : \"expandAll\" });\n  }\n  setExpandState(state) {\n    this.expandState = state;\n    _.setDisplayed(this.eExpandChecked, this.expandState === 0 /* EXPANDED */);\n    _.setDisplayed(this.eExpandUnchecked, this.expandState === 1 /* COLLAPSED */);\n    _.setDisplayed(this.eExpandIndeterminate, this.expandState === 2 /* INDETERMINATE */);\n  }\n  setSelectionState(state) {\n    this.selectState = state;\n    this.eSelect.setValue(this.selectState);\n  }\n};\n_PrimaryColsHeaderPanel.DEBOUNCE_DELAY = 300;\n_PrimaryColsHeaderPanel.TEMPLATE = /* html */\n`<div class=\"ag-column-select-header\" role=\"presentation\">\n            <div ref=\"eExpand\" class=\"ag-column-select-header-icon\"></div>\n            <ag-checkbox ref=\"eSelect\" class=\"ag-column-select-header-checkbox\"></ag-checkbox>\n            <ag-input-text-field class=\"ag-column-select-header-filter-wrapper\" ref=\"eFilterTextField\"></ag-input-text-field>\n        </div>`;\n__decorateClass([\n  Autowired(\"columnModel\")\n], _PrimaryColsHeaderPanel.prototype, \"columnModel\", 2);\n__decorateClass([\n  RefSelector(\"eExpand\")\n], _PrimaryColsHeaderPanel.prototype, \"eExpand\", 2);\n__decorateClass([\n  RefSelector(\"eSelect\")\n], _PrimaryColsHeaderPanel.prototype, \"eSelect\", 2);\n__decorateClass([\n  RefSelector(\"eFilterTextField\")\n], _PrimaryColsHeaderPanel.prototype, \"eFilterTextField\", 2);\n__decorateClass([\n  PostConstruct\n], _PrimaryColsHeaderPanel.prototype, \"postConstruct\", 1);\nvar PrimaryColsHeaderPanel = _PrimaryColsHeaderPanel;\n\n// enterprise-modules/column-tool-panel/src/columnToolPanel/primaryColsListPanel.ts\nimport {\n  _ as _6,\n  Autowired as Autowired6,\n  Component as Component5,\n  Events as Events5,\n  ProvidedColumnGroup as ProvidedColumnGroup5,\n  VirtualList as VirtualList2,\n  PreDestroy\n} from \"@ag-grid-community/core\";\n\n// enterprise-modules/column-tool-panel/src/columnToolPanel/primaryColsListPanelItemDragFeature.ts\nimport {\n  Autowired as Autowired4,\n  BeanStub,\n  DragSourceType as DragSourceType2,\n  Events as Events3,\n  ProvidedColumnGroup as ProvidedColumnGroup4,\n  PostConstruct as PostConstruct4,\n  VirtualListDragFeature\n} from \"@ag-grid-community/core\";\n\n// enterprise-modules/column-tool-panel/src/columnToolPanel/toolPanelColumnGroupComp.ts\nimport {\n  _ as _3,\n  Autowired as Autowired3,\n  Column as Column3,\n  Component as Component3,\n  CssClassApplier,\n  DragAndDropService,\n  DragSourceType,\n  Events as Events2,\n  KeyCode as KeyCode2,\n  PostConstruct as PostConstruct3,\n  RefSelector as RefSelector2,\n  TouchListener\n} from \"@ag-grid-community/core\";\n\n// enterprise-modules/column-tool-panel/src/columnToolPanel/columnModelItem.ts\nimport {\n  EventService\n} from \"@ag-grid-community/core\";\nvar _ColumnModelItem = class _ColumnModelItem {\n  constructor(displayName, columnOrGroup, dept, group = false, expanded) {\n    this.eventService = new EventService();\n    this.displayName = displayName;\n    this.dept = dept;\n    this.group = group;\n    if (group) {\n      this.columnGroup = columnOrGroup;\n      this.expanded = expanded;\n      this.children = [];\n    } else {\n      this.column = columnOrGroup;\n    }\n  }\n  isGroup() {\n    return this.group;\n  }\n  getDisplayName() {\n    return this.displayName;\n  }\n  getColumnGroup() {\n    return this.columnGroup;\n  }\n  getColumn() {\n    return this.column;\n  }\n  getDept() {\n    return this.dept;\n  }\n  isExpanded() {\n    return !!this.expanded;\n  }\n  getChildren() {\n    return this.children;\n  }\n  isPassesFilter() {\n    return this.passesFilter;\n  }\n  setExpanded(expanded) {\n    if (expanded === this.expanded) {\n      return;\n    }\n    this.expanded = expanded;\n    this.eventService.dispatchEvent({ type: _ColumnModelItem.EVENT_EXPANDED_CHANGED });\n  }\n  setPassesFilter(passesFilter) {\n    this.passesFilter = passesFilter;\n  }\n  addEventListener(eventType, listener) {\n    this.eventService.addEventListener(eventType, listener);\n  }\n  removeEventListener(eventType, listener) {\n    this.eventService.removeEventListener(eventType, listener);\n  }\n};\n_ColumnModelItem.EVENT_EXPANDED_CHANGED = \"expandedChanged\";\nvar ColumnModelItem = _ColumnModelItem;\n\n// enterprise-modules/column-tool-panel/src/columnToolPanel/toolPanelContextMenu.ts\nimport {\n  AgMenuItemComponent,\n  AgMenuList,\n  Autowired as Autowired2,\n  Column as Column2,\n  Component as Component2,\n  PostConstruct as PostConstruct2,\n  ProvidedColumnGroup as ProvidedColumnGroup2,\n  _ as _2\n} from \"@ag-grid-community/core\";\nvar ToolPanelContextMenu = class extends Component2 {\n  constructor(column, mouseEvent, parentEl) {\n    super(\n      /* html */\n      `<div class=\"ag-menu\"></div>`\n    );\n    this.column = column;\n    this.mouseEvent = mouseEvent;\n    this.parentEl = parentEl;\n    this.displayName = null;\n  }\n  postConstruct() {\n    this.initializeProperties(this.column);\n    this.buildMenuItemMap();\n    if (this.column instanceof Column2) {\n      this.displayName = this.columnModel.getDisplayNameForColumn(this.column, \"columnToolPanel\");\n    } else {\n      this.displayName = this.columnModel.getDisplayNameForProvidedColumnGroup(null, this.column, \"columnToolPanel\");\n    }\n    if (this.isActive()) {\n      this.mouseEvent.preventDefault();\n      const menuItemsMapped = this.getMappedMenuItems();\n      if (menuItemsMapped.length === 0) {\n        return;\n      }\n      this.displayContextMenu(menuItemsMapped);\n    }\n  }\n  initializeProperties(column) {\n    if (column instanceof ProvidedColumnGroup2) {\n      this.columns = column.getLeafColumns();\n    } else {\n      this.columns = [column];\n    }\n    this.allowGrouping = this.columns.some((col) => col.isPrimary() && col.isAllowRowGroup());\n    this.allowValues = this.columns.some((col) => col.isPrimary() && col.isAllowValue());\n    this.allowPivoting = this.columnModel.isPivotMode() && this.columns.some((col) => col.isPrimary() && col.isAllowPivot());\n  }\n  buildMenuItemMap() {\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    this.menuItemMap = /* @__PURE__ */ new Map();\n    this.menuItemMap.set(\"rowGroup\", {\n      allowedFunction: (col) => col.isPrimary() && col.isAllowRowGroup() && !this.columnModel.isColumnGroupingLocked(col),\n      activeFunction: (col) => col.isRowGroupActive(),\n      activateLabel: () => `${localeTextFunc(\"groupBy\", \"Group by\")} ${this.displayName}`,\n      deactivateLabel: () => `${localeTextFunc(\"ungroupBy\", \"Un-Group by\")} ${this.displayName}`,\n      activateFunction: () => {\n        const groupedColumns = this.columnModel.getRowGroupColumns();\n        this.columnModel.setRowGroupColumns(this.addColumnsToList(groupedColumns), \"toolPanelUi\");\n      },\n      deActivateFunction: () => {\n        const groupedColumns = this.columnModel.getRowGroupColumns();\n        this.columnModel.setRowGroupColumns(this.removeColumnsFromList(groupedColumns), \"toolPanelUi\");\n      },\n      addIcon: \"menuAddRowGroup\",\n      removeIcon: \"menuRemoveRowGroup\"\n    });\n    this.menuItemMap.set(\"value\", {\n      allowedFunction: (col) => col.isPrimary() && col.isAllowValue(),\n      activeFunction: (col) => col.isValueActive(),\n      activateLabel: () => localeTextFunc(\"addToValues\", `Add ${this.displayName} to values`, [this.displayName]),\n      deactivateLabel: () => localeTextFunc(\"removeFromValues\", `Remove ${this.displayName} from values`, [this.displayName]),\n      activateFunction: () => {\n        const valueColumns = this.columnModel.getValueColumns();\n        this.columnModel.setValueColumns(this.addColumnsToList(valueColumns), \"toolPanelUi\");\n      },\n      deActivateFunction: () => {\n        const valueColumns = this.columnModel.getValueColumns();\n        this.columnModel.setValueColumns(this.removeColumnsFromList(valueColumns), \"toolPanelUi\");\n      },\n      addIcon: \"valuePanel\",\n      removeIcon: \"valuePanel\"\n    });\n    this.menuItemMap.set(\"pivot\", {\n      allowedFunction: (col) => this.columnModel.isPivotMode() && col.isPrimary() && col.isAllowPivot(),\n      activeFunction: (col) => col.isPivotActive(),\n      activateLabel: () => localeTextFunc(\"addToLabels\", `Add ${this.displayName} to labels`, [this.displayName]),\n      deactivateLabel: () => localeTextFunc(\"removeFromLabels\", `Remove ${this.displayName} from labels`, [this.displayName]),\n      activateFunction: () => {\n        const pivotColumns = this.columnModel.getPivotColumns();\n        this.columnModel.setPivotColumns(this.addColumnsToList(pivotColumns), \"toolPanelUi\");\n      },\n      deActivateFunction: () => {\n        const pivotColumns = this.columnModel.getPivotColumns();\n        this.columnModel.setPivotColumns(this.removeColumnsFromList(pivotColumns), \"toolPanelUi\");\n      },\n      addIcon: \"pivotPanel\",\n      removeIcon: \"pivotPanel\"\n    });\n  }\n  addColumnsToList(columnList) {\n    return [...columnList].concat(this.columns.filter((col) => columnList.indexOf(col) === -1));\n  }\n  removeColumnsFromList(columnList) {\n    return columnList.filter((col) => this.columns.indexOf(col) === -1);\n  }\n  displayContextMenu(menuItemsMapped) {\n    const eGui = this.getGui();\n    const menuList = this.createBean(new AgMenuList());\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    let hideFunc = () => {\n    };\n    eGui.appendChild(menuList.getGui());\n    menuList.addMenuItems(menuItemsMapped);\n    menuList.addManagedListener(menuList, AgMenuItemComponent.EVENT_CLOSE_MENU, () => {\n      this.parentEl.focus();\n      hideFunc();\n    });\n    const addPopupRes = this.popupService.addPopup({\n      modal: true,\n      eChild: eGui,\n      closeOnEsc: true,\n      afterGuiAttached: () => this.focusService.focusInto(menuList.getGui()),\n      ariaLabel: localeTextFunc(\"ariaLabelContextMenu\", \"Context Menu\"),\n      closedCallback: (e) => {\n        if (e instanceof KeyboardEvent) {\n          this.parentEl.focus();\n        }\n        this.destroyBean(menuList);\n      }\n    });\n    if (addPopupRes) {\n      hideFunc = addPopupRes.hideFunc;\n    }\n    this.popupService.positionPopupUnderMouseEvent({\n      type: \"columnContextMenu\",\n      mouseEvent: this.mouseEvent,\n      ePopup: eGui\n    });\n  }\n  isActive() {\n    return this.allowGrouping || this.allowValues || this.allowPivoting;\n  }\n  getMappedMenuItems() {\n    const ret = [];\n    for (const val of this.menuItemMap.values()) {\n      const isInactive = this.columns.some((col) => val.allowedFunction(col) && !val.activeFunction(col));\n      const isActive = this.columns.some((col) => val.allowedFunction(col) && val.activeFunction(col));\n      if (isInactive) {\n        ret.push({\n          name: val.activateLabel(this.displayName),\n          icon: _2.createIconNoSpan(val.addIcon, this.gos, null),\n          action: () => val.activateFunction()\n        });\n      }\n      if (isActive) {\n        ret.push({\n          name: val.deactivateLabel(this.displayName),\n          icon: _2.createIconNoSpan(val.removeIcon, this.gos, null),\n          action: () => val.deActivateFunction()\n        });\n      }\n    }\n    return ret;\n  }\n};\n__decorateClass([\n  Autowired2(\"columnModel\")\n], ToolPanelContextMenu.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired2(\"popupService\")\n], ToolPanelContextMenu.prototype, \"popupService\", 2);\n__decorateClass([\n  Autowired2(\"focusService\")\n], ToolPanelContextMenu.prototype, \"focusService\", 2);\n__decorateClass([\n  PostConstruct2\n], ToolPanelContextMenu.prototype, \"postConstruct\", 1);\n\n// enterprise-modules/column-tool-panel/src/columnToolPanel/toolPanelColumnGroupComp.ts\nvar _ToolPanelColumnGroupComp = class _ToolPanelColumnGroupComp extends Component3 {\n  constructor(modelItem, allowDragging, eventType, focusWrapper) {\n    super();\n    this.modelItem = modelItem;\n    this.allowDragging = allowDragging;\n    this.eventType = eventType;\n    this.focusWrapper = focusWrapper;\n    this.processingColumnStateChange = false;\n    this.modelItem = modelItem;\n    this.columnGroup = modelItem.getColumnGroup();\n    this.columnDept = modelItem.getDept();\n    this.displayName = modelItem.getDisplayName();\n    this.allowDragging = allowDragging;\n  }\n  init() {\n    this.setTemplate(_ToolPanelColumnGroupComp.TEMPLATE);\n    this.eDragHandle = _3.createIconNoSpan(\"columnDrag\", this.gos);\n    this.eDragHandle.classList.add(\"ag-drag-handle\", \"ag-column-select-column-group-drag-handle\");\n    const checkboxGui = this.cbSelect.getGui();\n    const checkboxInput = this.cbSelect.getInputElement();\n    checkboxGui.insertAdjacentElement(\"afterend\", this.eDragHandle);\n    checkboxInput.setAttribute(\"tabindex\", \"-1\");\n    this.eLabel.innerHTML = this.displayName ? this.displayName : \"\";\n    this.setupExpandContract();\n    this.addCssClass(\"ag-column-select-indent-\" + this.columnDept);\n    this.addManagedListener(this.eventService, Events2.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.onColumnStateChanged.bind(this));\n    this.addManagedListener(this.eLabel, \"click\", this.onLabelClicked.bind(this));\n    this.addManagedListener(this.cbSelect, Events2.EVENT_FIELD_VALUE_CHANGED, this.onCheckboxChanged.bind(this));\n    this.addManagedListener(this.modelItem, ColumnModelItem.EVENT_EXPANDED_CHANGED, this.onExpandChanged.bind(this));\n    this.addManagedListener(this.focusWrapper, \"keydown\", this.handleKeyDown.bind(this));\n    this.addManagedListener(this.focusWrapper, \"contextmenu\", this.onContextMenu.bind(this));\n    this.setOpenClosedIcons();\n    this.setupDragging();\n    this.onColumnStateChanged();\n    this.addVisibilityListenersToAllChildren();\n    this.refreshAriaExpanded();\n    this.refreshAriaLabel();\n    this.setupTooltip();\n    const classes = CssClassApplier.getToolPanelClassesFromColDef(this.columnGroup.getColGroupDef(), this.gos, null, this.columnGroup);\n    classes.forEach((c) => this.addOrRemoveCssClass(c, true));\n  }\n  getColumns() {\n    return this.columnGroup.getLeafColumns();\n  }\n  setupTooltip() {\n    const colGroupDef = this.columnGroup.getColGroupDef();\n    if (!colGroupDef) {\n      return;\n    }\n    const isTooltipWhenTruncated = this.gos.get(\"tooltipShowMode\") === \"whenTruncated\";\n    let shouldDisplayTooltip;\n    if (isTooltipWhenTruncated) {\n      shouldDisplayTooltip = () => this.eLabel.scrollWidth > this.eLabel.clientWidth;\n    }\n    const refresh = () => {\n      const newTooltipText = colGroupDef.headerTooltip;\n      this.setTooltip({ newTooltipText, location: \"columnToolPanelColumnGroup\", shouldDisplayTooltip });\n    };\n    refresh();\n    this.addManagedListener(this.eventService, Events2.EVENT_NEW_COLUMNS_LOADED, refresh);\n  }\n  getTooltipParams() {\n    const res = super.getTooltipParams();\n    res.location = \"columnToolPanelColumnGroup\";\n    return res;\n  }\n  handleKeyDown(e) {\n    switch (e.key) {\n      case KeyCode2.LEFT:\n        e.preventDefault();\n        this.modelItem.setExpanded(false);\n        break;\n      case KeyCode2.RIGHT:\n        e.preventDefault();\n        this.modelItem.setExpanded(true);\n        break;\n      case KeyCode2.SPACE:\n        e.preventDefault();\n        if (this.isSelectable()) {\n          this.onSelectAllChanged(!this.isSelected());\n        }\n        break;\n    }\n  }\n  onContextMenu(e) {\n    const { columnGroup, gos } = this;\n    if (gos.get(\"functionsReadOnly\")) {\n      return;\n    }\n    const contextMenu = this.createBean(new ToolPanelContextMenu(columnGroup, e, this.focusWrapper));\n    this.addDestroyFunc(() => {\n      if (contextMenu.isAlive()) {\n        this.destroyBean(contextMenu);\n      }\n    });\n  }\n  addVisibilityListenersToAllChildren() {\n    this.columnGroup.getLeafColumns().forEach((column) => {\n      this.addManagedListener(column, Column3.EVENT_VISIBLE_CHANGED, this.onColumnStateChanged.bind(this));\n      this.addManagedListener(column, Column3.EVENT_VALUE_CHANGED, this.onColumnStateChanged.bind(this));\n      this.addManagedListener(column, Column3.EVENT_PIVOT_CHANGED, this.onColumnStateChanged.bind(this));\n      this.addManagedListener(column, Column3.EVENT_ROW_GROUP_CHANGED, this.onColumnStateChanged.bind(this));\n    });\n  }\n  setupDragging() {\n    if (!this.allowDragging) {\n      _3.setDisplayed(this.eDragHandle, false);\n      return;\n    }\n    let hideColumnOnExit = !this.gos.get(\"suppressDragLeaveHidesColumns\");\n    const dragSource = {\n      type: DragSourceType.ToolPanel,\n      eElement: this.eDragHandle,\n      dragItemName: this.displayName,\n      getDefaultIconName: () => hideColumnOnExit ? DragAndDropService.ICON_HIDE : DragAndDropService.ICON_NOT_ALLOWED,\n      getDragItem: () => this.createDragItem(),\n      onDragStarted: () => {\n        hideColumnOnExit = !this.gos.get(\"suppressDragLeaveHidesColumns\");\n        const event = {\n          type: Events2.EVENT_COLUMN_PANEL_ITEM_DRAG_START,\n          column: this.columnGroup\n        };\n        this.eventService.dispatchEvent(event);\n      },\n      onDragStopped: () => {\n        const event = {\n          type: Events2.EVENT_COLUMN_PANEL_ITEM_DRAG_END\n        };\n        this.eventService.dispatchEvent(event);\n      },\n      onGridEnter: (dragItem) => {\n        if (hideColumnOnExit) {\n          this.modelItemUtils.updateColumns({\n            columns: this.columnGroup.getLeafColumns(),\n            visibleState: dragItem == null ? void 0 : dragItem.visibleState,\n            pivotState: dragItem == null ? void 0 : dragItem.pivotState,\n            eventType: this.eventType\n          });\n        }\n      },\n      onGridExit: () => {\n        if (hideColumnOnExit) {\n          this.onChangeCommon(false);\n        }\n      }\n    };\n    this.dragAndDropService.addDragSource(dragSource, true);\n    this.addDestroyFunc(() => this.dragAndDropService.removeDragSource(dragSource));\n  }\n  createDragItem() {\n    const columns = this.columnGroup.getLeafColumns();\n    const visibleState = {};\n    const pivotState = {};\n    columns.forEach((col) => {\n      const colId = col.getId();\n      visibleState[colId] = col.isVisible();\n      pivotState[colId] = this.modelItemUtils.createPivotState(col);\n    });\n    return {\n      columns,\n      visibleState,\n      pivotState\n    };\n  }\n  setupExpandContract() {\n    this.eGroupClosedIcon.appendChild(_3.createIcon(\"columnSelectClosed\", this.gos, null));\n    this.eGroupOpenedIcon.appendChild(_3.createIcon(\"columnSelectOpen\", this.gos, null));\n    this.addManagedListener(this.eGroupClosedIcon, \"click\", this.onExpandOrContractClicked.bind(this));\n    this.addManagedListener(this.eGroupOpenedIcon, \"click\", this.onExpandOrContractClicked.bind(this));\n    const touchListener = new TouchListener(this.eColumnGroupIcons, true);\n    this.addManagedListener(touchListener, TouchListener.EVENT_TAP, this.onExpandOrContractClicked.bind(this));\n    this.addDestroyFunc(touchListener.destroy.bind(touchListener));\n  }\n  onLabelClicked() {\n    const nextState = !this.cbSelect.getValue();\n    this.onChangeCommon(nextState);\n  }\n  onCheckboxChanged(event) {\n    this.onChangeCommon(event.selected);\n  }\n  getVisibleLeafColumns() {\n    const childColumns = [];\n    const extractCols = (children) => {\n      children.forEach((child) => {\n        if (!child.isPassesFilter()) {\n          return;\n        }\n        if (child.isGroup()) {\n          extractCols(child.getChildren());\n        } else {\n          childColumns.push(child.getColumn());\n        }\n      });\n    };\n    extractCols(this.modelItem.getChildren());\n    return childColumns;\n  }\n  onChangeCommon(nextState) {\n    this.refreshAriaLabel();\n    if (this.processingColumnStateChange) {\n      return;\n    }\n    this.modelItemUtils.selectAllChildren(this.modelItem.getChildren(), nextState, this.eventType);\n  }\n  refreshAriaLabel() {\n    const translate = this.localeService.getLocaleTextFunc();\n    const columnLabel = translate(\"ariaColumnGroup\", \"Column Group\");\n    const checkboxValue = this.cbSelect.getValue();\n    const state = checkboxValue === void 0 ? translate(\"ariaIndeterminate\", \"indeterminate\") : checkboxValue ? translate(\"ariaVisible\", \"visible\") : translate(\"ariaHidden\", \"hidden\");\n    const visibilityLabel = translate(\"ariaToggleVisibility\", \"Press SPACE to toggle visibility\");\n    _3.setAriaLabel(this.focusWrapper, `${this.displayName} ${columnLabel}`);\n    this.cbSelect.setInputAriaLabel(`${visibilityLabel} (${state})`);\n    _3.setAriaDescribedBy(this.focusWrapper, this.cbSelect.getInputElement().id);\n  }\n  onColumnStateChanged() {\n    const selectedValue = this.workOutSelectedValue();\n    const readOnlyValue = this.workOutReadOnlyValue();\n    this.processingColumnStateChange = true;\n    this.cbSelect.setValue(selectedValue);\n    this.cbSelect.setReadOnly(readOnlyValue);\n    this.addOrRemoveCssClass(\"ag-column-select-column-group-readonly\", readOnlyValue);\n    this.processingColumnStateChange = false;\n  }\n  workOutSelectedValue() {\n    const pivotMode = this.columnModel.isPivotMode();\n    const visibleLeafColumns = this.getVisibleLeafColumns();\n    let checkedCount = 0;\n    let uncheckedCount = 0;\n    visibleLeafColumns.forEach((column) => {\n      if (!pivotMode && column.getColDef().lockVisible) {\n        return;\n      }\n      if (this.isColumnChecked(column, pivotMode)) {\n        checkedCount++;\n      } else {\n        uncheckedCount++;\n      }\n    });\n    if (checkedCount > 0 && uncheckedCount > 0) {\n      return void 0;\n    }\n    return checkedCount > 0;\n  }\n  workOutReadOnlyValue() {\n    const pivotMode = this.columnModel.isPivotMode();\n    let colsThatCanAction = 0;\n    this.columnGroup.getLeafColumns().forEach((col) => {\n      if (pivotMode) {\n        if (col.isAnyFunctionAllowed()) {\n          colsThatCanAction++;\n        }\n      } else {\n        if (!col.getColDef().lockVisible) {\n          colsThatCanAction++;\n        }\n      }\n    });\n    return colsThatCanAction === 0;\n  }\n  isColumnChecked(column, pivotMode) {\n    if (pivotMode) {\n      const pivoted = column.isPivotActive();\n      const grouped = column.isRowGroupActive();\n      const aggregated = column.isValueActive();\n      return pivoted || grouped || aggregated;\n    }\n    return column.isVisible();\n  }\n  onExpandOrContractClicked() {\n    const oldState = this.modelItem.isExpanded();\n    this.modelItem.setExpanded(!oldState);\n  }\n  onExpandChanged() {\n    this.setOpenClosedIcons();\n    this.refreshAriaExpanded();\n  }\n  setOpenClosedIcons() {\n    const folderOpen = this.modelItem.isExpanded();\n    _3.setDisplayed(this.eGroupClosedIcon, !folderOpen);\n    _3.setDisplayed(this.eGroupOpenedIcon, folderOpen);\n  }\n  refreshAriaExpanded() {\n    _3.setAriaExpanded(this.focusWrapper, this.modelItem.isExpanded());\n  }\n  getDisplayName() {\n    return this.displayName;\n  }\n  onSelectAllChanged(value) {\n    const cbValue = this.cbSelect.getValue();\n    const readOnly = this.cbSelect.isReadOnly();\n    if (!readOnly && (value && !cbValue || !value && cbValue)) {\n      this.cbSelect.toggle();\n    }\n  }\n  isSelected() {\n    return this.cbSelect.getValue();\n  }\n  isSelectable() {\n    return !this.cbSelect.isReadOnly();\n  }\n  setSelected(selected) {\n    this.cbSelect.setValue(selected, true);\n  }\n};\n_ToolPanelColumnGroupComp.TEMPLATE = /* html */\n`<div class=\"ag-column-select-column-group\" aria-hidden=\"true\">\n            <span class=\"ag-column-group-icons\" ref=\"eColumnGroupIcons\" >\n                <span class=\"ag-column-group-closed-icon\" ref=\"eGroupClosedIcon\"></span>\n                <span class=\"ag-column-group-opened-icon\" ref=\"eGroupOpenedIcon\"></span>\n            </span>\n            <ag-checkbox ref=\"cbSelect\" class=\"ag-column-select-checkbox\"></ag-checkbox>\n            <span class=\"ag-column-select-column-label\" ref=\"eLabel\"></span>\n        </div>`;\n__decorateClass([\n  Autowired3(\"columnModel\")\n], _ToolPanelColumnGroupComp.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired3(\"dragAndDropService\")\n], _ToolPanelColumnGroupComp.prototype, \"dragAndDropService\", 2);\n__decorateClass([\n  Autowired3(\"modelItemUtils\")\n], _ToolPanelColumnGroupComp.prototype, \"modelItemUtils\", 2);\n__decorateClass([\n  RefSelector2(\"cbSelect\")\n], _ToolPanelColumnGroupComp.prototype, \"cbSelect\", 2);\n__decorateClass([\n  RefSelector2(\"eLabel\")\n], _ToolPanelColumnGroupComp.prototype, \"eLabel\", 2);\n__decorateClass([\n  RefSelector2(\"eGroupOpenedIcon\")\n], _ToolPanelColumnGroupComp.prototype, \"eGroupOpenedIcon\", 2);\n__decorateClass([\n  RefSelector2(\"eGroupClosedIcon\")\n], _ToolPanelColumnGroupComp.prototype, \"eGroupClosedIcon\", 2);\n__decorateClass([\n  RefSelector2(\"eColumnGroupIcons\")\n], _ToolPanelColumnGroupComp.prototype, \"eColumnGroupIcons\", 2);\n__decorateClass([\n  PostConstruct3\n], _ToolPanelColumnGroupComp.prototype, \"init\", 1);\nvar ToolPanelColumnGroupComp = _ToolPanelColumnGroupComp;\n\n// enterprise-modules/column-tool-panel/src/columnToolPanel/primaryColsListPanelItemDragFeature.ts\nvar PrimaryColsListPanelItemDragFeature = class extends BeanStub {\n  constructor(comp, virtualList) {\n    super();\n    this.comp = comp;\n    this.virtualList = virtualList;\n  }\n  postConstruct() {\n    this.createManagedBean(new VirtualListDragFeature(\n      this.comp,\n      this.virtualList,\n      {\n        dragSourceType: DragSourceType2.ToolPanel,\n        listItemDragStartEvent: Events3.EVENT_COLUMN_PANEL_ITEM_DRAG_START,\n        listItemDragEndEvent: Events3.EVENT_COLUMN_PANEL_ITEM_DRAG_END,\n        eventSource: this.eventService,\n        getCurrentDragValue: (listItemDragStartEvent) => this.getCurrentDragValue(listItemDragStartEvent),\n        isMoveBlocked: (currentDragValue) => this.isMoveBlocked(currentDragValue),\n        getNumRows: (comp) => comp.getDisplayedColsList().length,\n        moveItem: (currentDragValue, lastHoveredListItem) => this.moveItem(currentDragValue, lastHoveredListItem)\n      }\n    ));\n  }\n  getCurrentDragValue(listItemDragStartEvent) {\n    return listItemDragStartEvent.column;\n  }\n  isMoveBlocked(currentDragValue) {\n    const preventMoving = this.gos.get(\"suppressMovableColumns\");\n    if (preventMoving) {\n      return true;\n    }\n    const currentColumns = this.getCurrentColumns(currentDragValue);\n    const hasNotMovable = currentColumns.find((col) => {\n      const colDef = col.getColDef();\n      return !!colDef.suppressMovable || !!colDef.lockPosition;\n    });\n    return !!hasNotMovable;\n  }\n  moveItem(currentDragValue, lastHoveredListItem) {\n    const targetIndex = this.getTargetIndex(currentDragValue, lastHoveredListItem);\n    const columnsToMove = this.getCurrentColumns(currentDragValue);\n    if (targetIndex != null) {\n      this.columnModel.moveColumns(columnsToMove, targetIndex, \"toolPanelUi\");\n    }\n  }\n  getMoveDiff(currentDragValue, end) {\n    const allColumns = this.columnModel.getAllGridColumns();\n    const currentColumns = this.getCurrentColumns(currentDragValue);\n    const currentColumn = currentColumns[0];\n    const span = currentColumns.length;\n    const currentIndex = allColumns.indexOf(currentColumn);\n    if (currentIndex < end) {\n      return span;\n    }\n    return 0;\n  }\n  getCurrentColumns(currentDragValue) {\n    if (currentDragValue instanceof ProvidedColumnGroup4) {\n      return currentDragValue.getLeafColumns();\n    }\n    return [currentDragValue];\n  }\n  getTargetIndex(currentDragValue, lastHoveredListItem) {\n    if (!lastHoveredListItem) {\n      return null;\n    }\n    const columnItemComponent = lastHoveredListItem.component;\n    let isBefore = lastHoveredListItem.position === \"top\";\n    let targetColumn;\n    if (columnItemComponent instanceof ToolPanelColumnGroupComp) {\n      const columns = columnItemComponent.getColumns();\n      targetColumn = columns[0];\n      isBefore = true;\n    } else {\n      targetColumn = columnItemComponent.getColumn();\n    }\n    const movingCols = this.getCurrentColumns(currentDragValue);\n    if (movingCols.indexOf(targetColumn) !== -1) {\n      return null;\n    }\n    const targetColumnIndex = this.columnModel.getAllGridColumns().indexOf(targetColumn);\n    const adjustedTarget = isBefore ? targetColumnIndex : targetColumnIndex + 1;\n    const diff = this.getMoveDiff(currentDragValue, adjustedTarget);\n    return adjustedTarget - diff;\n  }\n};\n__decorateClass([\n  Autowired4(\"columnModel\")\n], PrimaryColsListPanelItemDragFeature.prototype, \"columnModel\", 2);\n__decorateClass([\n  PostConstruct4\n], PrimaryColsListPanelItemDragFeature.prototype, \"postConstruct\", 1);\n\n// enterprise-modules/column-tool-panel/src/columnToolPanel/toolPanelColumnComp.ts\nimport {\n  _ as _5,\n  Autowired as Autowired5,\n  Column as Column5,\n  Component as Component4,\n  CssClassApplier as CssClassApplier2,\n  DragAndDropService as DragAndDropService2,\n  DragSourceType as DragSourceType3,\n  Events as Events4,\n  KeyCode as KeyCode3,\n  PostConstruct as PostConstruct5,\n  RefSelector as RefSelector3\n} from \"@ag-grid-community/core\";\nvar _ToolPanelColumnComp = class _ToolPanelColumnComp extends Component4 {\n  constructor(modelItem, allowDragging, groupsExist, focusWrapper) {\n    super();\n    this.allowDragging = allowDragging;\n    this.groupsExist = groupsExist;\n    this.focusWrapper = focusWrapper;\n    this.processingColumnStateChange = false;\n    this.column = modelItem.getColumn();\n    this.columnDept = modelItem.getDept();\n    this.displayName = modelItem.getDisplayName();\n  }\n  init() {\n    this.setTemplate(_ToolPanelColumnComp.TEMPLATE);\n    this.eDragHandle = _5.createIconNoSpan(\"columnDrag\", this.gos);\n    this.eDragHandle.classList.add(\"ag-drag-handle\", \"ag-column-select-column-drag-handle\");\n    const checkboxGui = this.cbSelect.getGui();\n    const checkboxInput = this.cbSelect.getInputElement();\n    checkboxGui.insertAdjacentElement(\"afterend\", this.eDragHandle);\n    checkboxInput.setAttribute(\"tabindex\", \"-1\");\n    const displayNameSanitised = _5.escapeString(this.displayName);\n    this.eLabel.innerHTML = displayNameSanitised;\n    const indent = this.columnDept;\n    if (this.groupsExist) {\n      this.addCssClass(\"ag-column-select-add-group-indent\");\n    }\n    this.addCssClass(`ag-column-select-indent-${indent}`);\n    this.setupDragging();\n    this.addManagedListener(this.eventService, Events4.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.onColumnStateChanged.bind(this));\n    this.addManagedListener(this.column, Column5.EVENT_VALUE_CHANGED, this.onColumnStateChanged.bind(this));\n    this.addManagedListener(this.column, Column5.EVENT_PIVOT_CHANGED, this.onColumnStateChanged.bind(this));\n    this.addManagedListener(this.column, Column5.EVENT_ROW_GROUP_CHANGED, this.onColumnStateChanged.bind(this));\n    this.addManagedListener(this.column, Column5.EVENT_VISIBLE_CHANGED, this.onColumnStateChanged.bind(this));\n    this.addManagedListener(this.focusWrapper, \"keydown\", this.handleKeyDown.bind(this));\n    this.addManagedListener(this.focusWrapper, \"contextmenu\", this.onContextMenu.bind(this));\n    this.addManagedPropertyListener(\"functionsReadOnly\", this.onColumnStateChanged.bind(this));\n    this.addManagedListener(this.cbSelect, Events4.EVENT_FIELD_VALUE_CHANGED, this.onCheckboxChanged.bind(this));\n    this.addManagedListener(this.eLabel, \"click\", this.onLabelClicked.bind(this));\n    this.onColumnStateChanged();\n    this.refreshAriaLabel();\n    this.setupTooltip();\n    const classes = CssClassApplier2.getToolPanelClassesFromColDef(this.column.getColDef(), this.gos, this.column, null);\n    classes.forEach((c) => this.addOrRemoveCssClass(c, true));\n  }\n  getColumn() {\n    return this.column;\n  }\n  setupTooltip() {\n    const isTooltipWhenTruncated = this.gos.get(\"tooltipShowMode\") === \"whenTruncated\";\n    let shouldDisplayTooltip;\n    if (isTooltipWhenTruncated) {\n      shouldDisplayTooltip = () => this.eLabel.scrollWidth > this.eLabel.clientWidth;\n    }\n    const refresh = () => {\n      const newTooltipText = this.column.getColDef().headerTooltip;\n      this.setTooltip({ newTooltipText, location: \"columnToolPanelColumn\", shouldDisplayTooltip });\n    };\n    refresh();\n    this.addManagedListener(this.eventService, Events4.EVENT_NEW_COLUMNS_LOADED, refresh);\n  }\n  getTooltipParams() {\n    const res = super.getTooltipParams();\n    res.location = \"columnToolPanelColumn\";\n    res.colDef = this.column.getColDef();\n    return res;\n  }\n  onContextMenu(e) {\n    const { column, gos } = this;\n    if (gos.get(\"functionsReadOnly\")) {\n      return;\n    }\n    const contextMenu = this.createBean(new ToolPanelContextMenu(column, e, this.focusWrapper));\n    this.addDestroyFunc(() => {\n      if (contextMenu.isAlive()) {\n        this.destroyBean(contextMenu);\n      }\n    });\n  }\n  handleKeyDown(e) {\n    if (e.key === KeyCode3.SPACE) {\n      e.preventDefault();\n      if (this.isSelectable()) {\n        this.onSelectAllChanged(!this.isSelected());\n      }\n    }\n  }\n  onLabelClicked() {\n    if (this.gos.get(\"functionsReadOnly\")) {\n      return;\n    }\n    const nextState = !this.cbSelect.getValue();\n    this.onChangeCommon(nextState);\n  }\n  onCheckboxChanged(event) {\n    this.onChangeCommon(event.selected);\n  }\n  onChangeCommon(nextState) {\n    if (this.cbSelect.isReadOnly()) {\n      return;\n    }\n    this.refreshAriaLabel();\n    if (this.processingColumnStateChange) {\n      return;\n    }\n    this.modelItemUtils.setColumn(this.column, nextState, \"toolPanelUi\");\n  }\n  refreshAriaLabel() {\n    const translate = this.localeService.getLocaleTextFunc();\n    const columnLabel = translate(\"ariaColumn\", \"Column\");\n    const state = this.cbSelect.getValue() ? translate(\"ariaVisible\", \"visible\") : translate(\"ariaHidden\", \"hidden\");\n    const visibilityLabel = translate(\"ariaToggleVisibility\", \"Press SPACE to toggle visibility\");\n    _5.setAriaLabel(this.focusWrapper, `${this.displayName} ${columnLabel}`);\n    this.cbSelect.setInputAriaLabel(`${visibilityLabel} (${state})`);\n    _5.setAriaDescribedBy(this.focusWrapper, this.cbSelect.getInputElement().id);\n  }\n  setupDragging() {\n    if (!this.allowDragging) {\n      _5.setDisplayed(this.eDragHandle, false);\n      return;\n    }\n    let hideColumnOnExit = !this.gos.get(\"suppressDragLeaveHidesColumns\");\n    const dragSource = {\n      type: DragSourceType3.ToolPanel,\n      eElement: this.eDragHandle,\n      dragItemName: this.displayName,\n      getDefaultIconName: () => hideColumnOnExit ? DragAndDropService2.ICON_HIDE : DragAndDropService2.ICON_NOT_ALLOWED,\n      getDragItem: () => this.createDragItem(),\n      onDragStarted: () => {\n        hideColumnOnExit = !this.gos.get(\"suppressDragLeaveHidesColumns\");\n        const event = {\n          type: Events4.EVENT_COLUMN_PANEL_ITEM_DRAG_START,\n          column: this.column\n        };\n        this.eventService.dispatchEvent(event);\n      },\n      onDragStopped: () => {\n        const event = {\n          type: Events4.EVENT_COLUMN_PANEL_ITEM_DRAG_END\n        };\n        this.eventService.dispatchEvent(event);\n      },\n      onGridEnter: (dragItem) => {\n        if (hideColumnOnExit) {\n          this.modelItemUtils.updateColumns({\n            columns: [this.column],\n            visibleState: dragItem == null ? void 0 : dragItem.visibleState,\n            pivotState: dragItem == null ? void 0 : dragItem.pivotState,\n            eventType: \"toolPanelUi\"\n          });\n        }\n      },\n      onGridExit: () => {\n        if (hideColumnOnExit) {\n          this.onChangeCommon(false);\n        }\n      }\n    };\n    this.dragAndDropService.addDragSource(dragSource, true);\n    this.addDestroyFunc(() => this.dragAndDropService.removeDragSource(dragSource));\n  }\n  createDragItem() {\n    const colId = this.column.getColId();\n    const visibleState = { [colId]: this.column.isVisible() };\n    const pivotState = { [colId]: this.modelItemUtils.createPivotState(this.column) };\n    return {\n      columns: [this.column],\n      visibleState,\n      pivotState\n    };\n  }\n  onColumnStateChanged() {\n    this.processingColumnStateChange = true;\n    const isPivotMode = this.columnModel.isPivotMode();\n    if (isPivotMode) {\n      const anyFunctionActive = this.column.isAnyFunctionActive();\n      this.cbSelect.setValue(anyFunctionActive);\n    } else {\n      this.cbSelect.setValue(this.column.isVisible());\n    }\n    let canBeToggled = true;\n    let canBeDragged = true;\n    if (isPivotMode) {\n      const functionsReadOnly = this.gos.get(\"functionsReadOnly\");\n      const noFunctionsAllowed = !this.column.isAnyFunctionAllowed();\n      canBeToggled = !functionsReadOnly && !noFunctionsAllowed;\n      canBeDragged = canBeToggled;\n    } else {\n      const { enableRowGroup, enableValue, lockPosition, suppressMovable, lockVisible } = this.column.getColDef();\n      const forceDraggable = !!enableRowGroup || !!enableValue;\n      const disableDraggable = !!lockPosition || !!suppressMovable;\n      canBeToggled = !lockVisible;\n      canBeDragged = forceDraggable || !disableDraggable;\n    }\n    this.cbSelect.setReadOnly(!canBeToggled);\n    this.eDragHandle.classList.toggle(\"ag-column-select-column-readonly\", !canBeDragged);\n    this.addOrRemoveCssClass(\"ag-column-select-column-readonly\", !canBeDragged && !canBeToggled);\n    const checkboxPassive = isPivotMode && this.gos.get(\"functionsPassive\");\n    this.cbSelect.setPassive(checkboxPassive);\n    this.processingColumnStateChange = false;\n  }\n  getDisplayName() {\n    return this.displayName;\n  }\n  onSelectAllChanged(value) {\n    if (value !== this.cbSelect.getValue()) {\n      if (!this.cbSelect.isReadOnly()) {\n        this.cbSelect.toggle();\n      }\n    }\n  }\n  isSelected() {\n    return this.cbSelect.getValue();\n  }\n  isSelectable() {\n    return !this.cbSelect.isReadOnly();\n  }\n  isExpandable() {\n    return false;\n  }\n  setExpanded(value) {\n    console.warn(\"AG Grid: can not expand a column item that does not represent a column group header\");\n  }\n};\n_ToolPanelColumnComp.TEMPLATE = /* html */\n`<div class=\"ag-column-select-column\" aria-hidden=\"true\">\n            <ag-checkbox ref=\"cbSelect\" class=\"ag-column-select-checkbox\"></ag-checkbox>\n            <span class=\"ag-column-select-column-label\" ref=\"eLabel\"></span>\n        </div>`;\n__decorateClass([\n  Autowired5(\"columnModel\")\n], _ToolPanelColumnComp.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired5(\"dragAndDropService\")\n], _ToolPanelColumnComp.prototype, \"dragAndDropService\", 2);\n__decorateClass([\n  Autowired5(\"modelItemUtils\")\n], _ToolPanelColumnComp.prototype, \"modelItemUtils\", 2);\n__decorateClass([\n  RefSelector3(\"eLabel\")\n], _ToolPanelColumnComp.prototype, \"eLabel\", 2);\n__decorateClass([\n  RefSelector3(\"cbSelect\")\n], _ToolPanelColumnComp.prototype, \"cbSelect\", 2);\n__decorateClass([\n  PostConstruct5\n], _ToolPanelColumnComp.prototype, \"init\", 1);\nvar ToolPanelColumnComp = _ToolPanelColumnComp;\n\n// enterprise-modules/column-tool-panel/src/columnToolPanel/primaryColsListPanel.ts\nvar UIColumnModel = class {\n  constructor(items) {\n    this.items = items;\n  }\n  getRowCount() {\n    return this.items.length;\n  }\n  getRow(index) {\n    return this.items[index];\n  }\n};\nvar PRIMARY_COLS_LIST_PANEL_CLASS = \"ag-column-select-list\";\nvar _PrimaryColsListPanel = class _PrimaryColsListPanel extends Component5 {\n  constructor() {\n    super(_PrimaryColsListPanel.TEMPLATE);\n    this.destroyColumnItemFuncs = [];\n    this.hasLoadedInitialState = false;\n    this.isInitialState = false;\n  }\n  destroyColumnTree() {\n    this.allColsTree = [];\n    this.destroyColumnItemFuncs.forEach((f) => f());\n    this.destroyColumnItemFuncs = [];\n  }\n  init(params, allowDragging, eventType) {\n    this.params = params;\n    this.allowDragging = allowDragging;\n    this.eventType = eventType;\n    if (!this.params.suppressSyncLayoutWithGrid) {\n      this.addManagedListener(this.eventService, Events5.EVENT_COLUMN_MOVED, this.onColumnsChanged.bind(this));\n    }\n    this.addManagedListener(this.eventService, Events5.EVENT_NEW_COLUMNS_LOADED, this.onColumnsChanged.bind(this));\n    const eventsImpactingCheckedState = [\n      Events5.EVENT_COLUMN_PIVOT_CHANGED,\n      Events5.EVENT_COLUMN_PIVOT_MODE_CHANGED,\n      Events5.EVENT_COLUMN_ROW_GROUP_CHANGED,\n      Events5.EVENT_COLUMN_VALUE_CHANGED,\n      Events5.EVENT_COLUMN_VISIBLE,\n      Events5.EVENT_NEW_COLUMNS_LOADED\n    ];\n    eventsImpactingCheckedState.forEach((event) => {\n      this.addManagedListener(this.eventService, event, this.fireSelectionChangedEvent.bind(this));\n    });\n    this.expandGroupsByDefault = !this.params.contractColumnSelection;\n    this.virtualList = this.createManagedBean(new VirtualList2({\n      cssIdentifier: \"column-select\",\n      ariaRole: \"tree\"\n    }));\n    this.appendChild(this.virtualList.getGui());\n    this.virtualList.setComponentCreator(\n      (item, listItemElement) => {\n        _6.setAriaLevel(listItemElement, item.getDept() + 1);\n        return this.createComponentFromItem(item, listItemElement);\n      }\n    );\n    if (this.columnModel.isReady()) {\n      this.onColumnsChanged();\n    }\n    if (this.params.suppressColumnMove) {\n      return;\n    }\n    this.createManagedBean(\n      new PrimaryColsListPanelItemDragFeature(this, this.virtualList)\n    );\n  }\n  createComponentFromItem(item, listItemElement) {\n    if (item.isGroup()) {\n      const renderedGroup = new ToolPanelColumnGroupComp(item, this.allowDragging, this.eventType, listItemElement);\n      this.getContext().createBean(renderedGroup);\n      return renderedGroup;\n    }\n    const columnComp = new ToolPanelColumnComp(item, this.allowDragging, this.groupsExist, listItemElement);\n    this.getContext().createBean(columnComp);\n    return columnComp;\n  }\n  onColumnsChanged() {\n    if (!this.hasLoadedInitialState) {\n      this.hasLoadedInitialState = true;\n      this.isInitialState = !!this.params.initialState;\n    }\n    const expandedStates = this.getExpandedStates();\n    const pivotModeActive = this.columnModel.isPivotMode();\n    const shouldSyncColumnLayoutWithGrid = !this.params.suppressSyncLayoutWithGrid && !pivotModeActive;\n    if (shouldSyncColumnLayoutWithGrid) {\n      this.buildTreeFromWhatGridIsDisplaying();\n    } else {\n      this.buildTreeFromProvidedColumnDefs();\n    }\n    this.setExpandedStates(expandedStates);\n    this.markFilteredColumns();\n    this.flattenAndFilterModel();\n    this.isInitialState = false;\n  }\n  getDisplayedColsList() {\n    return this.displayedColsList;\n  }\n  getExpandedStates() {\n    const res = {};\n    if (this.isInitialState) {\n      const { expandedGroupIds } = this.params.initialState;\n      expandedGroupIds.forEach((id) => {\n        res[id] = true;\n      });\n      return res;\n    }\n    if (!this.allColsTree) {\n      return {};\n    }\n    this.forEachItem((item) => {\n      if (!item.isGroup()) {\n        return;\n      }\n      const colGroup = item.getColumnGroup();\n      if (colGroup) {\n        res[colGroup.getId()] = item.isExpanded();\n      }\n    });\n    return res;\n  }\n  setExpandedStates(states) {\n    if (!this.allColsTree) {\n      return;\n    }\n    const { isInitialState } = this;\n    this.forEachItem((item) => {\n      if (!item.isGroup()) {\n        return;\n      }\n      const colGroup = item.getColumnGroup();\n      if (colGroup) {\n        const expanded = states[colGroup.getId()];\n        const groupExistedLastTime = expanded != null;\n        if (groupExistedLastTime || isInitialState) {\n          item.setExpanded(!!expanded);\n        }\n      }\n    });\n  }\n  buildTreeFromWhatGridIsDisplaying() {\n    this.colDefService.syncLayoutWithGrid(this.setColumnLayout.bind(this));\n  }\n  setColumnLayout(colDefs) {\n    const columnTree = this.colDefService.createColumnTree(colDefs);\n    this.buildListModel(columnTree);\n    this.groupsExist = colDefs.some((colDef) => {\n      return colDef && typeof colDef.children !== \"undefined\";\n    });\n    this.markFilteredColumns();\n    this.flattenAndFilterModel();\n  }\n  buildTreeFromProvidedColumnDefs() {\n    this.buildListModel(this.columnModel.getPrimaryColumnTree());\n    this.groupsExist = this.columnModel.isPrimaryColumnGroupsPresent();\n  }\n  buildListModel(columnTree) {\n    const columnExpandedListener = this.onColumnExpanded.bind(this);\n    const addListeners = (item) => {\n      item.addEventListener(ColumnModelItem.EVENT_EXPANDED_CHANGED, columnExpandedListener);\n      const removeFunc = item.removeEventListener.bind(item, ColumnModelItem.EVENT_EXPANDED_CHANGED, columnExpandedListener);\n      this.destroyColumnItemFuncs.push(removeFunc);\n    };\n    const recursivelyBuild = (tree, dept, parentList) => {\n      tree.forEach((child) => {\n        if (child instanceof ProvidedColumnGroup5) {\n          createGroupItem(child, dept, parentList);\n        } else {\n          createColumnItem(child, dept, parentList);\n        }\n      });\n    };\n    const createGroupItem = (columnGroup, dept, parentList) => {\n      const columnGroupDef = columnGroup.getColGroupDef();\n      const skipThisGroup = columnGroupDef && columnGroupDef.suppressColumnsToolPanel;\n      if (skipThisGroup) {\n        return;\n      }\n      if (columnGroup.isPadding()) {\n        recursivelyBuild(columnGroup.getChildren(), dept, parentList);\n        return;\n      }\n      const displayName = this.columnModel.getDisplayNameForProvidedColumnGroup(null, columnGroup, \"columnToolPanel\");\n      const item = new ColumnModelItem(displayName, columnGroup, dept, true, this.expandGroupsByDefault);\n      parentList.push(item);\n      addListeners(item);\n      recursivelyBuild(columnGroup.getChildren(), dept + 1, item.getChildren());\n    };\n    const createColumnItem = (column, dept, parentList) => {\n      const skipThisColumn = column.getColDef() && column.getColDef().suppressColumnsToolPanel;\n      if (skipThisColumn) {\n        return;\n      }\n      const displayName = this.columnModel.getDisplayNameForColumn(column, \"columnToolPanel\");\n      parentList.push(new ColumnModelItem(displayName, column, dept));\n    };\n    this.destroyColumnTree();\n    recursivelyBuild(columnTree, 0, this.allColsTree);\n  }\n  onColumnExpanded() {\n    this.flattenAndFilterModel();\n  }\n  flattenAndFilterModel() {\n    this.displayedColsList = [];\n    const recursiveFunc = (item) => {\n      if (!item.isPassesFilter()) {\n        return;\n      }\n      this.displayedColsList.push(item);\n      if (item.isGroup() && item.isExpanded()) {\n        item.getChildren().forEach(recursiveFunc);\n      }\n    };\n    this.allColsTree.forEach(recursiveFunc);\n    this.virtualList.setModel(new UIColumnModel(this.displayedColsList));\n    const focusedRow = this.virtualList.getLastFocusedRow();\n    this.virtualList.refresh();\n    if (focusedRow != null) {\n      this.focusRowIfAlive(focusedRow);\n    }\n    this.notifyListeners();\n    this.refreshAriaLabel();\n  }\n  refreshAriaLabel() {\n    const translate = this.localeService.getLocaleTextFunc();\n    const columnListName = translate(\"ariaColumnPanelList\", \"Column List\");\n    const localeColumns = translate(\"columns\", \"Columns\");\n    const items = this.displayedColsList.length;\n    _6.setAriaLabel(this.virtualList.getAriaElement(), `${columnListName} ${items} ${localeColumns}`);\n  }\n  focusRowIfAlive(rowIndex) {\n    window.setTimeout(() => {\n      if (this.isAlive()) {\n        this.virtualList.focusRow(rowIndex);\n      }\n    }, 0);\n  }\n  forEachItem(callback) {\n    const recursiveFunc = (items) => {\n      items.forEach((item) => {\n        callback(item);\n        if (item.isGroup()) {\n          recursiveFunc(item.getChildren());\n        }\n      });\n    };\n    if (!this.allColsTree) {\n      return;\n    }\n    recursiveFunc(this.allColsTree);\n  }\n  doSetExpandedAll(value) {\n    this.forEachItem((item) => {\n      if (item.isGroup()) {\n        item.setExpanded(value);\n      }\n    });\n  }\n  setGroupsExpanded(expand, groupIds) {\n    if (!groupIds) {\n      this.doSetExpandedAll(expand);\n      return;\n    }\n    const expandedGroupIds = [];\n    this.forEachItem((item) => {\n      if (!item.isGroup()) {\n        return;\n      }\n      const groupId = item.getColumnGroup().getId();\n      if (groupIds.indexOf(groupId) >= 0) {\n        item.setExpanded(expand);\n        expandedGroupIds.push(groupId);\n      }\n    });\n    const unrecognisedGroupIds = groupIds.filter((groupId) => !_6.includes(expandedGroupIds, groupId));\n    if (unrecognisedGroupIds.length > 0) {\n      console.warn(\"AG Grid: unable to find group(s) for supplied groupIds:\", unrecognisedGroupIds);\n    }\n  }\n  getExpandState() {\n    let expandedCount = 0;\n    let notExpandedCount = 0;\n    this.forEachItem((item) => {\n      if (!item.isGroup()) {\n        return;\n      }\n      if (item.isExpanded()) {\n        expandedCount++;\n      } else {\n        notExpandedCount++;\n      }\n    });\n    if (expandedCount > 0 && notExpandedCount > 0) {\n      return 2 /* INDETERMINATE */;\n    }\n    if (notExpandedCount > 0) {\n      return 1 /* COLLAPSED */;\n    }\n    return 0 /* EXPANDED */;\n  }\n  doSetSelectedAll(selectAllChecked) {\n    this.modelItemUtils.selectAllChildren(this.allColsTree, selectAllChecked, this.eventType);\n  }\n  getSelectionState() {\n    let checkedCount = 0;\n    let uncheckedCount = 0;\n    const pivotMode = this.columnModel.isPivotMode();\n    this.forEachItem((item) => {\n      if (item.isGroup()) {\n        return;\n      }\n      if (!item.isPassesFilter()) {\n        return;\n      }\n      const column = item.getColumn();\n      const colDef = column.getColDef();\n      let checked;\n      if (pivotMode) {\n        const noPivotModeOptionsAllowed = !column.isAllowPivot() && !column.isAllowRowGroup() && !column.isAllowValue();\n        if (noPivotModeOptionsAllowed) {\n          return;\n        }\n        checked = column.isValueActive() || column.isPivotActive() || column.isRowGroupActive();\n      } else {\n        if (colDef.lockVisible) {\n          return;\n        }\n        checked = column.isVisible();\n      }\n      checked ? checkedCount++ : uncheckedCount++;\n    });\n    if (checkedCount > 0 && uncheckedCount > 0) {\n      return void 0;\n    }\n    return !(checkedCount === 0 || uncheckedCount > 0);\n  }\n  setFilterText(filterText) {\n    this.filterText = _6.exists(filterText) ? filterText.toLowerCase() : null;\n    this.markFilteredColumns();\n    this.flattenAndFilterModel();\n  }\n  markFilteredColumns() {\n    const passesFilter = (item) => {\n      if (!_6.exists(this.filterText)) {\n        return true;\n      }\n      const displayName = item.getDisplayName();\n      return displayName == null || displayName.toLowerCase().indexOf(this.filterText) !== -1;\n    };\n    const recursivelyCheckFilter = (item, parentPasses) => {\n      let atLeastOneChildPassed = false;\n      if (item.isGroup()) {\n        const groupPasses = passesFilter(item);\n        item.getChildren().forEach((child) => {\n          const childPasses = recursivelyCheckFilter(child, groupPasses || parentPasses);\n          if (childPasses) {\n            atLeastOneChildPassed = childPasses;\n          }\n        });\n      }\n      const filterPasses = parentPasses || atLeastOneChildPassed ? true : passesFilter(item);\n      item.setPassesFilter(filterPasses);\n      return filterPasses;\n    };\n    this.allColsTree.forEach((item) => recursivelyCheckFilter(item, false));\n  }\n  notifyListeners() {\n    this.fireGroupExpandedEvent();\n    this.fireSelectionChangedEvent();\n  }\n  fireGroupExpandedEvent() {\n    const expandState = this.getExpandState();\n    this.dispatchEvent({ type: \"groupExpanded\", state: expandState });\n  }\n  fireSelectionChangedEvent() {\n    if (!this.allColsTree) {\n      return;\n    }\n    const selectionState = this.getSelectionState();\n    this.dispatchEvent({ type: \"selectionChanged\", state: selectionState });\n  }\n  getExpandedGroups() {\n    const expandedGroupIds = [];\n    if (!this.allColsTree) {\n      return expandedGroupIds;\n    }\n    this.forEachItem((item) => {\n      if (item.isGroup() && item.isExpanded()) {\n        expandedGroupIds.push(item.getColumnGroup().getId());\n      }\n    });\n    return expandedGroupIds;\n  }\n};\n_PrimaryColsListPanel.TEMPLATE = /* html */\n`<div class=\"${PRIMARY_COLS_LIST_PANEL_CLASS}\" role=\"presentation\"></div>`;\n__decorateClass([\n  Autowired6(\"columnModel\")\n], _PrimaryColsListPanel.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired6(\"toolPanelColDefService\")\n], _PrimaryColsListPanel.prototype, \"colDefService\", 2);\n__decorateClass([\n  Autowired6(\"modelItemUtils\")\n], _PrimaryColsListPanel.prototype, \"modelItemUtils\", 2);\n__decorateClass([\n  PreDestroy\n], _PrimaryColsListPanel.prototype, \"destroyColumnTree\", 1);\nvar PrimaryColsListPanel = _PrimaryColsListPanel;\n\n// enterprise-modules/column-tool-panel/src/columnToolPanel/columnToolPanel.ts\nimport {\n  _ as _7,\n  Component as Component8,\n  Events as Events7,\n  ModuleNames,\n  ModuleRegistry\n} from \"@ag-grid-community/core\";\n\n// enterprise-modules/column-tool-panel/src/columnToolPanel/pivotModePanel.ts\nimport {\n  Autowired as Autowired7,\n  Component as Component6,\n  Events as Events6,\n  PreConstruct,\n  RefSelector as RefSelector4\n} from \"@ag-grid-community/core\";\nvar PivotModePanel = class extends Component6 {\n  createTemplate() {\n    return (\n      /* html */\n      `<div class=\"ag-pivot-mode-panel\">\n                <ag-toggle-button ref=\"cbPivotMode\" class=\"ag-pivot-mode-select\"></ag-toggle-button>\n            </div>`\n    );\n  }\n  init() {\n    this.setTemplate(this.createTemplate());\n    this.cbPivotMode.setValue(this.columnModel.isPivotMode());\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    this.cbPivotMode.setLabel(localeTextFunc(\"pivotMode\", \"Pivot Mode\"));\n    this.addManagedListener(this.cbPivotMode, Events6.EVENT_FIELD_VALUE_CHANGED, this.onBtPivotMode.bind(this));\n    this.addManagedListener(this.eventService, Events6.EVENT_NEW_COLUMNS_LOADED, this.onPivotModeChanged.bind(this));\n    this.addManagedListener(this.eventService, Events6.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.onPivotModeChanged.bind(this));\n  }\n  onBtPivotMode() {\n    const newValue = !!this.cbPivotMode.getValue();\n    if (newValue !== this.columnModel.isPivotMode()) {\n      this.gos.updateGridOptions({ options: { pivotMode: newValue }, source: \"toolPanelUi\" });\n      const { api } = this;\n      if (api) {\n        api.refreshHeader();\n      }\n    }\n  }\n  onPivotModeChanged() {\n    const pivotModeActive = this.columnModel.isPivotMode();\n    this.cbPivotMode.setValue(pivotModeActive);\n  }\n};\n__decorateClass([\n  Autowired7(\"columnModel\")\n], PivotModePanel.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired7(\"gridApi\")\n], PivotModePanel.prototype, \"api\", 2);\n__decorateClass([\n  RefSelector4(\"cbPivotMode\")\n], PivotModePanel.prototype, \"cbPivotMode\", 2);\n__decorateClass([\n  PreConstruct\n], PivotModePanel.prototype, \"init\", 1);\n\n// enterprise-modules/column-tool-panel/src/columnToolPanel/columnToolPanel.ts\nimport { PivotDropZonePanel, RowGroupDropZonePanel, ValuesDropZonePanel } from \"@ag-grid-enterprise/row-grouping\";\n\n// enterprise-modules/column-tool-panel/src/columnToolPanel/primaryColsPanel.ts\nimport {\n  Component as Component7,\n  RefSelector as RefSelector5,\n  PositionableFeature\n} from \"@ag-grid-community/core\";\nvar _PrimaryColsPanel = class _PrimaryColsPanel extends Component7 {\n  constructor() {\n    super(_PrimaryColsPanel.TEMPLATE);\n  }\n  // we allow dragging in the toolPanel, but not when this component appears in the column menu\n  init(allowDragging, params, eventType) {\n    this.allowDragging = allowDragging;\n    this.params = params;\n    this.eventType = eventType;\n    this.primaryColsHeaderPanel.init(this.params);\n    const hideFilter = this.params.suppressColumnFilter;\n    const hideSelect = this.params.suppressColumnSelectAll;\n    const hideExpand = this.params.suppressColumnExpandAll;\n    if (hideExpand && hideFilter && hideSelect) {\n      this.primaryColsHeaderPanel.setDisplayed(false);\n    }\n    this.addManagedListener(this.primaryColsListPanel, \"groupExpanded\", this.onGroupExpanded.bind(this));\n    this.addManagedListener(this.primaryColsListPanel, \"selectionChanged\", this.onSelectionChange.bind(this));\n    this.primaryColsListPanel.init(this.params, this.allowDragging, this.eventType);\n    this.addManagedListener(this.primaryColsHeaderPanel, \"expandAll\", this.onExpandAll.bind(this));\n    this.addManagedListener(this.primaryColsHeaderPanel, \"collapseAll\", this.onCollapseAll.bind(this));\n    this.addManagedListener(this.primaryColsHeaderPanel, \"selectAll\", this.onSelectAll.bind(this));\n    this.addManagedListener(this.primaryColsHeaderPanel, \"unselectAll\", this.onUnselectAll.bind(this));\n    this.addManagedListener(this.primaryColsHeaderPanel, \"filterChanged\", this.onFilterChanged.bind(this));\n    this.positionableFeature = new PositionableFeature(this.getGui(), { minHeight: 100 });\n    this.createManagedBean(this.positionableFeature);\n  }\n  toggleResizable(resizable) {\n    this.positionableFeature.setResizable(resizable ? { bottom: true } : false);\n  }\n  onExpandAll() {\n    this.primaryColsListPanel.doSetExpandedAll(true);\n  }\n  onCollapseAll() {\n    this.primaryColsListPanel.doSetExpandedAll(false);\n  }\n  expandGroups(groupIds) {\n    this.primaryColsListPanel.setGroupsExpanded(true, groupIds);\n  }\n  collapseGroups(groupIds) {\n    this.primaryColsListPanel.setGroupsExpanded(false, groupIds);\n  }\n  setColumnLayout(colDefs) {\n    this.primaryColsListPanel.setColumnLayout(colDefs);\n  }\n  onFilterChanged(event) {\n    this.primaryColsListPanel.setFilterText(event.filterText);\n  }\n  syncLayoutWithGrid() {\n    this.primaryColsListPanel.onColumnsChanged();\n  }\n  onSelectAll() {\n    this.primaryColsListPanel.doSetSelectedAll(true);\n  }\n  onUnselectAll() {\n    this.primaryColsListPanel.doSetSelectedAll(false);\n  }\n  onGroupExpanded(event) {\n    this.primaryColsHeaderPanel.setExpandState(event.state);\n    this.params.onStateUpdated();\n  }\n  onSelectionChange(event) {\n    this.primaryColsHeaderPanel.setSelectionState(event.state);\n  }\n  getExpandedGroups() {\n    return this.primaryColsListPanel.getExpandedGroups();\n  }\n};\n_PrimaryColsPanel.TEMPLATE = /* html */\n`<div class=\"ag-column-select\">\n            <ag-primary-cols-header ref=\"primaryColsHeaderPanel\"></ag-primary-cols-header>\n            <ag-primary-cols-list ref=\"primaryColsListPanel\"></ag-primary-cols-list>\n        </div>`;\n__decorateClass([\n  RefSelector5(\"primaryColsHeaderPanel\")\n], _PrimaryColsPanel.prototype, \"primaryColsHeaderPanel\", 2);\n__decorateClass([\n  RefSelector5(\"primaryColsListPanel\")\n], _PrimaryColsPanel.prototype, \"primaryColsListPanel\", 2);\nvar PrimaryColsPanel = _PrimaryColsPanel;\n\n// enterprise-modules/column-tool-panel/src/columnToolPanel/columnToolPanel.ts\nvar _ColumnToolPanel = class _ColumnToolPanel extends Component8 {\n  constructor() {\n    super(_ColumnToolPanel.TEMPLATE);\n    this.initialised = false;\n    this.childDestroyFuncs = [];\n  }\n  // lazy initialise the panel\n  setVisible(visible) {\n    super.setDisplayed(visible);\n    if (visible && !this.initialised) {\n      this.init(this.params);\n    }\n  }\n  init(params) {\n    const defaultParams = this.gos.addGridCommonParams({\n      suppressColumnMove: false,\n      suppressColumnSelectAll: false,\n      suppressColumnFilter: false,\n      suppressColumnExpandAll: false,\n      contractColumnSelection: false,\n      suppressPivotMode: false,\n      suppressRowGroups: false,\n      suppressValues: false,\n      suppressPivots: false,\n      suppressSyncLayoutWithGrid: false\n    });\n    this.params = __spreadValues(__spreadValues({}, defaultParams), params);\n    if (this.isRowGroupingModuleLoaded() && !this.params.suppressPivotMode) {\n      this.pivotModePanel = this.createBean(new PivotModePanel());\n      this.childDestroyFuncs.push(() => this.destroyBean(this.pivotModePanel));\n      this.appendChild(this.pivotModePanel);\n    }\n    this.primaryColsPanel = this.createBean(new PrimaryColsPanel());\n    this.childDestroyFuncs.push(() => this.destroyBean(this.primaryColsPanel));\n    this.primaryColsPanel.init(true, this.params, \"toolPanelUi\");\n    this.primaryColsPanel.addCssClass(\"ag-column-panel-column-select\");\n    this.appendChild(this.primaryColsPanel);\n    if (this.isRowGroupingModuleLoaded()) {\n      if (!this.params.suppressRowGroups) {\n        this.rowGroupDropZonePanel = this.createBean(new RowGroupDropZonePanel(false));\n        this.childDestroyFuncs.push(() => this.destroyBean(this.rowGroupDropZonePanel));\n        this.appendChild(this.rowGroupDropZonePanel);\n      }\n      if (!this.params.suppressValues) {\n        this.valuesDropZonePanel = this.createBean(new ValuesDropZonePanel(false));\n        this.childDestroyFuncs.push(() => this.destroyBean(this.valuesDropZonePanel));\n        this.appendChild(this.valuesDropZonePanel);\n      }\n      if (!this.params.suppressPivots) {\n        this.pivotDropZonePanel = this.createBean(new PivotDropZonePanel(false));\n        this.childDestroyFuncs.push(() => this.destroyBean(this.pivotDropZonePanel));\n        this.appendChild(this.pivotDropZonePanel);\n      }\n      this.setLastVisible();\n      const pivotModeListener = this.addManagedListener(this.eventService, Events7.EVENT_COLUMN_PIVOT_MODE_CHANGED, () => {\n        this.resetChildrenHeight();\n        this.setLastVisible();\n      });\n      this.childDestroyFuncs.push(() => pivotModeListener());\n    }\n    this.initialised = true;\n  }\n  setPivotModeSectionVisible(visible) {\n    if (!this.isRowGroupingModuleLoaded()) {\n      return;\n    }\n    if (this.pivotModePanel) {\n      this.pivotModePanel.setDisplayed(visible);\n    } else if (visible) {\n      this.pivotModePanel = this.createBean(new PivotModePanel());\n      this.getGui().insertBefore(this.pivotModePanel.getGui(), this.getGui().firstChild);\n      this.childDestroyFuncs.push(() => this.destroyBean(this.pivotModePanel));\n    }\n    this.setLastVisible();\n  }\n  setRowGroupsSectionVisible(visible) {\n    if (!this.isRowGroupingModuleLoaded()) {\n      return;\n    }\n    if (this.rowGroupDropZonePanel) {\n      this.rowGroupDropZonePanel.setDisplayed(visible);\n    } else if (visible) {\n      this.rowGroupDropZonePanel = this.createManagedBean(new RowGroupDropZonePanel(false));\n      this.appendChild(this.rowGroupDropZonePanel);\n    }\n    this.setLastVisible();\n  }\n  setValuesSectionVisible(visible) {\n    if (!this.isRowGroupingModuleLoaded()) {\n      return;\n    }\n    if (this.valuesDropZonePanel) {\n      this.valuesDropZonePanel.setDisplayed(visible);\n    } else if (visible) {\n      this.valuesDropZonePanel = this.createManagedBean(new ValuesDropZonePanel(false));\n      this.appendChild(this.valuesDropZonePanel);\n    }\n    this.setLastVisible();\n  }\n  setPivotSectionVisible(visible) {\n    if (!this.isRowGroupingModuleLoaded()) {\n      return;\n    }\n    if (this.pivotDropZonePanel) {\n      this.pivotDropZonePanel.setDisplayed(visible);\n    } else if (visible) {\n      this.pivotDropZonePanel = this.createManagedBean(new PivotDropZonePanel(false));\n      this.appendChild(this.pivotDropZonePanel);\n      this.pivotDropZonePanel.setDisplayed(visible);\n    }\n    this.setLastVisible();\n  }\n  setResizers() {\n    [\n      this.primaryColsPanel,\n      this.rowGroupDropZonePanel,\n      this.valuesDropZonePanel,\n      this.pivotDropZonePanel\n    ].forEach((panel) => {\n      if (!panel) {\n        return;\n      }\n      const eGui = panel.getGui();\n      panel.toggleResizable(!eGui.classList.contains(\"ag-last-column-drop\") && !eGui.classList.contains(\"ag-hidden\"));\n    });\n  }\n  setLastVisible() {\n    const eGui = this.getGui();\n    const columnDrops = Array.prototype.slice.call(eGui.querySelectorAll(\".ag-column-drop\"));\n    columnDrops.forEach((columnDrop) => columnDrop.classList.remove(\"ag-last-column-drop\"));\n    const columnDropEls = eGui.querySelectorAll(\".ag-column-drop:not(.ag-hidden)\");\n    const lastVisible = _7.last(columnDropEls);\n    if (lastVisible) {\n      lastVisible.classList.add(\"ag-last-column-drop\");\n    }\n    this.setResizers();\n  }\n  resetChildrenHeight() {\n    const eGui = this.getGui();\n    const children = eGui.children;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      child.style.removeProperty(\"height\");\n      child.style.removeProperty(\"flex\");\n    }\n  }\n  isRowGroupingModuleLoaded() {\n    return ModuleRegistry.__assertRegistered(ModuleNames.RowGroupingModule, \"Row Grouping\", this.context.getGridId());\n  }\n  expandColumnGroups(groupIds) {\n    this.primaryColsPanel.expandGroups(groupIds);\n  }\n  collapseColumnGroups(groupIds) {\n    this.primaryColsPanel.collapseGroups(groupIds);\n  }\n  setColumnLayout(colDefs) {\n    this.primaryColsPanel.setColumnLayout(colDefs);\n  }\n  syncLayoutWithGrid() {\n    this.primaryColsPanel.syncLayoutWithGrid();\n  }\n  destroyChildren() {\n    this.childDestroyFuncs.forEach((func) => func());\n    this.childDestroyFuncs.length = 0;\n    _7.clearElement(this.getGui());\n  }\n  refresh(params) {\n    this.destroyChildren();\n    this.init(params);\n    return true;\n  }\n  getState() {\n    return {\n      expandedGroupIds: this.primaryColsPanel.getExpandedGroups()\n    };\n  }\n  // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so this must be public.\n  destroy() {\n    this.destroyChildren();\n    super.destroy();\n  }\n};\n_ColumnToolPanel.TEMPLATE = `<div class=\"ag-column-panel\"></div>`;\nvar ColumnToolPanel = _ColumnToolPanel;\n\n// enterprise-modules/column-tool-panel/src/columnsToolPanelModule.ts\nimport { RowGroupingModule } from \"@ag-grid-enterprise/row-grouping\";\nimport { SideBarModule } from \"@ag-grid-enterprise/side-bar\";\n\n// enterprise-modules/column-tool-panel/src/columnToolPanel/modelItemUtils.ts\nimport {\n  Events as Events8,\n  Bean,\n  Autowired as Autowired8,\n  _ as _8\n} from \"@ag-grid-community/core\";\nvar ModelItemUtils = class {\n  selectAllChildren(colTree, selectAllChecked, eventType) {\n    const cols = this.extractAllLeafColumns(colTree);\n    this.setAllColumns(cols, selectAllChecked, eventType);\n  }\n  setColumn(col, selectAllChecked, eventType) {\n    this.setAllColumns([col], selectAllChecked, eventType);\n  }\n  setAllColumns(cols, selectAllChecked, eventType) {\n    if (this.columnModel.isPivotMode()) {\n      this.setAllPivot(cols, selectAllChecked, eventType);\n    } else {\n      this.setAllVisible(cols, selectAllChecked, eventType);\n    }\n  }\n  extractAllLeafColumns(allItems) {\n    const res = [];\n    const recursiveFunc = (items) => {\n      items.forEach((item) => {\n        if (!item.isPassesFilter()) {\n          return;\n        }\n        if (item.isGroup()) {\n          recursiveFunc(item.getChildren());\n        } else {\n          res.push(item.getColumn());\n        }\n      });\n    };\n    recursiveFunc(allItems);\n    return res;\n  }\n  setAllVisible(columns, visible, eventType) {\n    const colStateItems = [];\n    columns.forEach((col) => {\n      if (col.getColDef().lockVisible) {\n        return;\n      }\n      if (col.isVisible() != visible) {\n        colStateItems.push({\n          colId: col.getId(),\n          hide: !visible\n        });\n      }\n    });\n    if (colStateItems.length > 0) {\n      this.columnModel.applyColumnState({ state: colStateItems }, eventType);\n    }\n  }\n  setAllPivot(columns, value, eventType) {\n    if (this.gos.get(\"functionsPassive\")) {\n      this.setAllPivotPassive(columns, value);\n    } else {\n      this.setAllPivotActive(columns, value, eventType);\n    }\n  }\n  setAllPivotPassive(columns, value) {\n    const copyOfPivotColumns = this.columnModel.getPivotColumns().slice();\n    const copyOfValueColumns = this.columnModel.getValueColumns().slice();\n    const copyOfRowGroupColumns = this.columnModel.getRowGroupColumns().slice();\n    let pivotChanged = false;\n    let valueChanged = false;\n    let rowGroupChanged = false;\n    const turnOnAction = (col) => {\n      if (col.isAnyFunctionActive()) {\n        return;\n      }\n      if (col.isAllowValue()) {\n        copyOfValueColumns.push(col);\n        valueChanged = true;\n      } else if (col.isAllowRowGroup()) {\n        copyOfRowGroupColumns.push(col);\n        pivotChanged = true;\n      } else if (col.isAllowPivot()) {\n        copyOfPivotColumns.push(col);\n        rowGroupChanged = true;\n      }\n    };\n    const turnOffAction = (col) => {\n      if (!col.isAnyFunctionActive()) {\n        return;\n      }\n      if (copyOfPivotColumns.indexOf(col) >= 0) {\n        _8.removeFromArray(copyOfPivotColumns, col);\n        pivotChanged = true;\n      }\n      if (copyOfValueColumns.indexOf(col) >= 0) {\n        _8.removeFromArray(copyOfValueColumns, col);\n        valueChanged = true;\n      }\n      if (copyOfRowGroupColumns.indexOf(col) >= 0) {\n        _8.removeFromArray(copyOfRowGroupColumns, col);\n        rowGroupChanged = true;\n      }\n    };\n    const action = value ? turnOnAction : turnOffAction;\n    columns.forEach(action);\n    if (pivotChanged) {\n      const event = {\n        type: Events8.EVENT_COLUMN_PIVOT_CHANGE_REQUEST,\n        columns: copyOfPivotColumns\n      };\n      this.eventService.dispatchEvent(event);\n    }\n    if (rowGroupChanged) {\n      const event = {\n        type: Events8.EVENT_COLUMN_ROW_GROUP_CHANGE_REQUEST,\n        columns: copyOfRowGroupColumns\n      };\n      this.eventService.dispatchEvent(event);\n    }\n    if (valueChanged) {\n      const event = {\n        type: Events8.EVENT_COLUMN_VALUE_CHANGE_REQUEST,\n        columns: copyOfRowGroupColumns\n      };\n      this.eventService.dispatchEvent(event);\n    }\n  }\n  setAllPivotActive(columns, value, eventType) {\n    const colStateItems = [];\n    const turnOnAction = (col) => {\n      if (col.isAnyFunctionActive()) {\n        return;\n      }\n      if (col.isAllowValue()) {\n        const aggFunc = typeof col.getAggFunc() === \"string\" ? col.getAggFunc() : this.aggFuncService.getDefaultAggFunc(col);\n        colStateItems.push({\n          colId: col.getId(),\n          aggFunc\n        });\n      } else if (col.isAllowRowGroup()) {\n        colStateItems.push({\n          colId: col.getId(),\n          rowGroup: true\n        });\n      } else if (col.isAllowPivot()) {\n        colStateItems.push({\n          colId: col.getId(),\n          pivot: true\n        });\n      }\n    };\n    const turnOffAction = (col) => {\n      const isActive = col.isPivotActive() || col.isRowGroupActive() || col.isValueActive();\n      if (isActive) {\n        colStateItems.push({\n          colId: col.getId(),\n          pivot: false,\n          rowGroup: false,\n          aggFunc: null\n        });\n      }\n    };\n    const action = value ? turnOnAction : turnOffAction;\n    columns.forEach(action);\n    if (colStateItems.length > 0) {\n      this.columnModel.applyColumnState({ state: colStateItems }, eventType);\n    }\n  }\n  updateColumns(params) {\n    const { columns, visibleState, pivotState, eventType } = params;\n    const state = columns.map((column) => {\n      const colId = column.getColId();\n      if (this.columnModel.isPivotMode()) {\n        const pivotStateForColumn = pivotState == null ? void 0 : pivotState[colId];\n        return {\n          colId,\n          pivot: pivotStateForColumn == null ? void 0 : pivotStateForColumn.pivot,\n          rowGroup: pivotStateForColumn == null ? void 0 : pivotStateForColumn.rowGroup,\n          aggFunc: pivotStateForColumn == null ? void 0 : pivotStateForColumn.aggFunc\n        };\n      } else {\n        return {\n          colId,\n          hide: !(visibleState == null ? void 0 : visibleState[colId])\n        };\n      }\n    });\n    this.columnModel.applyColumnState({ state }, eventType);\n  }\n  createPivotState(column) {\n    return {\n      pivot: column.isPivotActive(),\n      rowGroup: column.isRowGroupActive(),\n      aggFunc: column.isValueActive() ? column.getAggFunc() : void 0\n    };\n  }\n};\n__decorateClass([\n  Autowired8(\"aggFuncService\")\n], ModelItemUtils.prototype, \"aggFuncService\", 2);\n__decorateClass([\n  Autowired8(\"columnModel\")\n], ModelItemUtils.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired8(\"gridOptionsService\")\n], ModelItemUtils.prototype, \"gos\", 2);\n__decorateClass([\n  Autowired8(\"eventService\")\n], ModelItemUtils.prototype, \"eventService\", 2);\nModelItemUtils = __decorateClass([\n  Bean(\"modelItemUtils\")\n], ModelItemUtils);\n\n// enterprise-modules/column-tool-panel/src/version.ts\nvar VERSION = \"31.3.2\";\n\n// enterprise-modules/column-tool-panel/src/columnsToolPanelModule.ts\nvar ColumnsToolPanelModule = {\n  version: VERSION,\n  moduleName: ModuleNames2.ColumnsToolPanelModule,\n  beans: [ModelItemUtils],\n  agStackComponents: [\n    { componentName: \"AgPrimaryColsHeader\", componentClass: PrimaryColsHeaderPanel },\n    { componentName: \"AgPrimaryColsList\", componentClass: PrimaryColsListPanel },\n    { componentName: \"AgPrimaryCols\", componentClass: PrimaryColsPanel }\n  ],\n  userComponents: [\n    { componentName: \"agColumnsToolPanel\", componentClass: ColumnToolPanel }\n  ],\n  dependantModules: [\n    EnterpriseCoreModule,\n    RowGroupingModule,\n    SideBarModule\n  ]\n};\nexport {\n  ColumnsToolPanelModule,\n  PrimaryColsPanel\n};\n", "var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n// enterprise-modules/menu/src/menuModule.ts\nimport { ModuleNames as ModuleNames5 } from \"@ag-grid-community/core\";\nimport { EnterpriseCoreModule } from \"@ag-grid-enterprise/core\";\n\n// enterprise-modules/menu/src/menu/enterpriseMenu.ts\nimport {\n  _,\n  Autowired,\n  Bean,\n  BeanStub,\n  ModuleNames,\n  ModuleRegistry,\n  PostConstruct,\n  RefSelector,\n  AgPromise,\n  TabbedLayout,\n  AgMenuItemComponent,\n  Component,\n  Events,\n  FilterWrapperComp\n} from \"@ag-grid-community/core\";\nvar EnterpriseMenuFactory = class extends BeanStub {\n  hideActiveMenu() {\n    this.destroyBean(this.activeMenu);\n  }\n  showMenuAfterMouseEvent(column, mouseEvent, containerType, filtersOnly) {\n    const defaultTab = filtersOnly ? \"filterMenuTab\" : void 0;\n    this.showMenu(column, (menu) => {\n      var _a;\n      const ePopup = menu.getGui();\n      this.popupService.positionPopupUnderMouseEvent({\n        type: containerType,\n        column,\n        mouseEvent,\n        ePopup\n      });\n      if (defaultTab) {\n        (_a = menu.showTab) == null ? void 0 : _a.call(menu, defaultTab);\n      }\n      this.dispatchVisibleChangedEvent(true, false, column, defaultTab);\n    }, containerType, defaultTab, void 0, mouseEvent.target);\n  }\n  showMenuAfterButtonClick(column, eventSource, containerType, filtersOnly) {\n    let multiplier = -1;\n    let alignSide = \"left\";\n    if (this.gos.get(\"enableRtl\")) {\n      multiplier = 1;\n      alignSide = \"right\";\n    }\n    const defaultTab = filtersOnly ? \"filterMenuTab\" : void 0;\n    const restrictToTabs = defaultTab ? [defaultTab] : void 0;\n    const isLegacyMenuEnabled = this.menuService.isLegacyMenuEnabled();\n    let nudgeX = (isLegacyMenuEnabled ? 9 : 4) * multiplier;\n    let nudgeY = isLegacyMenuEnabled ? -23 : 4;\n    this.showMenu(column, (menu) => {\n      var _a;\n      const ePopup = menu.getGui();\n      this.popupService.positionPopupByComponent({\n        type: containerType,\n        column,\n        eventSource,\n        ePopup,\n        alignSide,\n        nudgeX,\n        nudgeY,\n        position: \"under\",\n        keepWithinBounds: true\n      });\n      if (defaultTab) {\n        (_a = menu.showTab) == null ? void 0 : _a.call(menu, defaultTab);\n      }\n      this.dispatchVisibleChangedEvent(true, false, column, defaultTab);\n    }, containerType, defaultTab, restrictToTabs, eventSource);\n  }\n  showMenu(column, positionCallback, containerType, defaultTab, restrictToTabs, eventSource) {\n    var _a;\n    const { menu, eMenuGui, anchorToElement, restoreFocusParams } = this.getMenuParams(column, restrictToTabs, eventSource);\n    const closedFuncs = [];\n    closedFuncs.push(\n      (e) => {\n        const eComp = menu.getGui();\n        this.destroyBean(menu);\n        if (column) {\n          column.setMenuVisible(false, \"contextMenu\");\n          this.menuUtils.restoreFocusOnClose(restoreFocusParams, eComp, e);\n        }\n      }\n    );\n    const translate = this.localeService.getLocaleTextFunc();\n    this.popupService.addPopup({\n      modal: true,\n      eChild: eMenuGui,\n      closeOnEsc: true,\n      closedCallback: (e) => {\n        closedFuncs.forEach((f) => f(e));\n        this.dispatchVisibleChangedEvent(false, false, column, defaultTab);\n      },\n      afterGuiAttached: (params) => menu.afterGuiAttached(Object.assign({}, { container: containerType }, params)),\n      // if defaultTab is not present, positionCallback will be called\n      // after `showTabBasedOnPreviousSelection` is called.\n      positionCallback: !!defaultTab ? () => positionCallback(menu) : void 0,\n      ariaLabel: translate(\"ariaLabelColumnMenu\", \"Column Menu\")\n    });\n    if (!defaultTab) {\n      (_a = menu.showTabBasedOnPreviousSelection) == null ? void 0 : _a.call(menu);\n      positionCallback(menu);\n    }\n    if (this.menuService.isColumnMenuAnchoringEnabled()) {\n      const stopAnchoringPromise = this.popupService.setPopupPositionRelatedToElement(eMenuGui, anchorToElement);\n      if (stopAnchoringPromise && column) {\n        this.addStopAnchoring(stopAnchoringPromise, column, closedFuncs);\n      }\n    }\n    menu.addEventListener(TabbedColumnMenu.EVENT_TAB_SELECTED, (event) => {\n      this.dispatchVisibleChangedEvent(false, true, column);\n      this.lastSelectedTab = event.key;\n      this.dispatchVisibleChangedEvent(true, true, column);\n    });\n    column == null ? void 0 : column.setMenuVisible(true, \"contextMenu\");\n    this.activeMenu = menu;\n    menu.addEventListener(BeanStub.EVENT_DESTROYED, () => {\n      if (this.activeMenu === menu) {\n        this.activeMenu = null;\n      }\n    });\n  }\n  addStopAnchoring(stopAnchoringPromise, column, closedFuncsArr) {\n    stopAnchoringPromise.then((stopAnchoringFunc) => {\n      column.addEventListener(\"leftChanged\", stopAnchoringFunc);\n      column.addEventListener(\"visibleChanged\", stopAnchoringFunc);\n      closedFuncsArr.push(() => {\n        column.removeEventListener(\"leftChanged\", stopAnchoringFunc);\n        column.removeEventListener(\"visibleChanged\", stopAnchoringFunc);\n      });\n    });\n  }\n  getMenuParams(column, restrictToTabs, eventSource) {\n    const restoreFocusParams = {\n      column,\n      headerPosition: this.focusService.getFocusedHeader(),\n      columnIndex: this.columnModel.getAllDisplayedColumns().indexOf(column),\n      eventSource\n    };\n    const menu = this.createMenu(column, restoreFocusParams, restrictToTabs, eventSource);\n    return {\n      menu,\n      eMenuGui: menu.getGui(),\n      anchorToElement: eventSource || this.ctrlsService.getGridBodyCtrl().getGui(),\n      restoreFocusParams\n    };\n  }\n  createMenu(column, restoreFocusParams, restrictToTabs, eventSource) {\n    if (this.menuService.isLegacyMenuEnabled()) {\n      return this.createBean(new TabbedColumnMenu(column, restoreFocusParams, this.lastSelectedTab, restrictToTabs, eventSource));\n    } else {\n      return this.createBean(new ColumnContextMenu(column, restoreFocusParams, eventSource));\n    }\n  }\n  dispatchVisibleChangedEvent(visible, switchingTab, column, defaultTab) {\n    var _a, _b;\n    const event = {\n      type: Events.EVENT_COLUMN_MENU_VISIBLE_CHANGED,\n      visible,\n      switchingTab,\n      key: (_b = (_a = this.lastSelectedTab) != null ? _a : defaultTab) != null ? _b : this.menuService.isLegacyMenuEnabled() ? TabbedColumnMenu.TAB_GENERAL : \"columnMenu\",\n      column: column != null ? column : null\n    };\n    this.eventService.dispatchEvent(event);\n  }\n  isMenuEnabled(column) {\n    var _a;\n    if (!this.menuService.isLegacyMenuEnabled()) {\n      return true;\n    }\n    const isFilterDisabled = !this.filterManager.isFilterAllowed(column);\n    const tabs = (_a = column.getColDef().menuTabs) != null ? _a : TabbedColumnMenu.TABS_DEFAULT;\n    const numActiveTabs = isFilterDisabled && tabs.includes(TabbedColumnMenu.TAB_FILTER) ? tabs.length - 1 : tabs.length;\n    return numActiveTabs > 0;\n  }\n  showMenuAfterContextMenuEvent(column, mouseEvent, touchEvent) {\n    this.menuUtils.onContextMenu(mouseEvent, touchEvent, (eventOrTouch) => {\n      this.showMenuAfterMouseEvent(column, eventOrTouch, \"columnMenu\");\n      return true;\n    });\n  }\n};\n__decorateClass([\n  Autowired(\"popupService\")\n], EnterpriseMenuFactory.prototype, \"popupService\", 2);\n__decorateClass([\n  Autowired(\"focusService\")\n], EnterpriseMenuFactory.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired(\"ctrlsService\")\n], EnterpriseMenuFactory.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired(\"columnModel\")\n], EnterpriseMenuFactory.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired(\"filterManager\")\n], EnterpriseMenuFactory.prototype, \"filterManager\", 2);\n__decorateClass([\n  Autowired(\"menuUtils\")\n], EnterpriseMenuFactory.prototype, \"menuUtils\", 2);\n__decorateClass([\n  Autowired(\"menuService\")\n], EnterpriseMenuFactory.prototype, \"menuService\", 2);\nEnterpriseMenuFactory = __decorateClass([\n  Bean(\"enterpriseMenuFactory\")\n], EnterpriseMenuFactory);\nvar _TabbedColumnMenu = class _TabbedColumnMenu extends BeanStub {\n  constructor(column, restoreFocusParams, initialSelection, restrictTo, sourceElement) {\n    super();\n    this.column = column;\n    this.restoreFocusParams = restoreFocusParams;\n    this.initialSelection = initialSelection;\n    this.restrictTo = restrictTo;\n    this.sourceElement = sourceElement;\n    this.tabFactories = {};\n    this.includeChecks = {};\n    this.tabFactories[_TabbedColumnMenu.TAB_GENERAL] = this.createMainPanel.bind(this);\n    this.tabFactories[_TabbedColumnMenu.TAB_FILTER] = this.createFilterPanel.bind(this);\n    this.tabFactories[_TabbedColumnMenu.TAB_COLUMNS] = this.createColumnsPanel.bind(this);\n    this.includeChecks[_TabbedColumnMenu.TAB_GENERAL] = () => true;\n    this.includeChecks[_TabbedColumnMenu.TAB_FILTER] = () => column ? this.filterManager.isFilterAllowed(column) : false;\n    this.includeChecks[_TabbedColumnMenu.TAB_COLUMNS] = () => true;\n  }\n  init() {\n    const tabs = this.getTabsToCreate().map((name) => this.createTab(name));\n    this.tabbedLayout = new TabbedLayout({\n      items: tabs,\n      cssClass: \"ag-menu\",\n      onActiveItemClicked: this.onHidePopup.bind(this),\n      onItemClicked: this.onTabItemClicked.bind(this)\n    });\n    this.createBean(this.tabbedLayout);\n    if (this.mainMenuList) {\n      this.mainMenuList.setParentComponent(this.tabbedLayout);\n    }\n    this.addDestroyFunc(() => this.destroyBean(this.tabbedLayout));\n  }\n  getTabsToCreate() {\n    var _a, _b;\n    if (this.restrictTo) {\n      return this.restrictTo;\n    }\n    return ((_b = (_a = this.column) == null ? void 0 : _a.getColDef().menuTabs) != null ? _b : _TabbedColumnMenu.TABS_DEFAULT).filter((tabName) => this.isValidMenuTabItem(tabName)).filter((tabName) => this.isNotSuppressed(tabName)).filter((tabName) => this.isModuleLoaded(tabName));\n  }\n  isModuleLoaded(menuTabName) {\n    if (menuTabName === _TabbedColumnMenu.TAB_COLUMNS) {\n      return ModuleRegistry.__isRegistered(ModuleNames.ColumnsToolPanelModule, this.context.getGridId());\n    }\n    return true;\n  }\n  isValidMenuTabItem(menuTabName) {\n    let isValid = true;\n    let itemsToConsider = _TabbedColumnMenu.TABS_DEFAULT;\n    if (this.restrictTo != null) {\n      isValid = this.restrictTo.indexOf(menuTabName) > -1;\n      itemsToConsider = this.restrictTo;\n    }\n    isValid = isValid && _TabbedColumnMenu.TABS_DEFAULT.indexOf(menuTabName) > -1;\n    if (!isValid) {\n      console.warn(`AG Grid: Trying to render an invalid menu item '${menuTabName}'. Check that your 'menuTabs' contains one of [${itemsToConsider}]`);\n    }\n    return isValid;\n  }\n  isNotSuppressed(menuTabName) {\n    return this.includeChecks[menuTabName]();\n  }\n  createTab(name) {\n    return this.tabFactories[name]();\n  }\n  showTabBasedOnPreviousSelection() {\n    this.showTab(this.initialSelection);\n  }\n  showTab(toShow) {\n    if (this.tabItemColumns && toShow === _TabbedColumnMenu.TAB_COLUMNS) {\n      this.tabbedLayout.showItem(this.tabItemColumns);\n    } else if (this.tabItemFilter && toShow === _TabbedColumnMenu.TAB_FILTER) {\n      this.tabbedLayout.showItem(this.tabItemFilter);\n    } else if (this.tabItemGeneral && toShow === _TabbedColumnMenu.TAB_GENERAL) {\n      this.tabbedLayout.showItem(this.tabItemGeneral);\n    } else {\n      this.tabbedLayout.showFirstItem();\n    }\n  }\n  onTabItemClicked(event) {\n    let key = null;\n    switch (event.item) {\n      case this.tabItemColumns:\n        key = _TabbedColumnMenu.TAB_COLUMNS;\n        break;\n      case this.tabItemFilter:\n        key = _TabbedColumnMenu.TAB_FILTER;\n        break;\n      case this.tabItemGeneral:\n        key = _TabbedColumnMenu.TAB_GENERAL;\n        break;\n    }\n    if (key) {\n      this.activateTab(key);\n    }\n  }\n  activateTab(tab) {\n    const ev = {\n      type: _TabbedColumnMenu.EVENT_TAB_SELECTED,\n      key: tab\n    };\n    this.dispatchEvent(ev);\n  }\n  createMainPanel() {\n    this.mainMenuList = this.columnMenuFactory.createMenu(this, this.column, () => {\n      var _a;\n      return (_a = this.sourceElement) != null ? _a : this.getGui();\n    });\n    this.mainMenuList.addEventListener(AgMenuItemComponent.EVENT_CLOSE_MENU, this.onHidePopup.bind(this));\n    this.tabItemGeneral = {\n      title: _.createIconNoSpan(\"menu\", this.gos, this.column),\n      titleLabel: _TabbedColumnMenu.TAB_GENERAL.replace(\"MenuTab\", \"\"),\n      bodyPromise: AgPromise.resolve(this.mainMenuList.getGui()),\n      name: _TabbedColumnMenu.TAB_GENERAL\n    };\n    return this.tabItemGeneral;\n  }\n  onHidePopup(event) {\n    this.menuUtils.closePopupAndRestoreFocusOnSelect(this.hidePopupFunc, this.restoreFocusParams, event);\n  }\n  createFilterPanel() {\n    const comp = this.column ? this.createManagedBean(new FilterWrapperComp(this.column, \"COLUMN_MENU\")) : null;\n    if (!(comp == null ? void 0 : comp.hasFilter())) {\n      throw new Error(\"AG Grid - Unable to instantiate filter\");\n    }\n    const afterAttachedCallback = (params) => comp.afterGuiAttached(params);\n    const afterDetachedCallback = () => comp.afterGuiDetached();\n    this.tabItemFilter = {\n      title: _.createIconNoSpan(\"filter\", this.gos, this.column),\n      titleLabel: _TabbedColumnMenu.TAB_FILTER.replace(\"MenuTab\", \"\"),\n      bodyPromise: AgPromise.resolve(comp == null ? void 0 : comp.getGui()),\n      afterAttachedCallback,\n      afterDetachedCallback,\n      name: _TabbedColumnMenu.TAB_FILTER\n    };\n    return this.tabItemFilter;\n  }\n  createColumnsPanel() {\n    const eWrapperDiv = document.createElement(\"div\");\n    eWrapperDiv.classList.add(\"ag-menu-column-select-wrapper\");\n    const columnSelectPanel = this.columnChooserFactory.createColumnSelectPanel(this, this.column);\n    const columnSelectPanelGui = columnSelectPanel.getGui();\n    columnSelectPanelGui.classList.add(\"ag-menu-column-select\");\n    eWrapperDiv.appendChild(columnSelectPanelGui);\n    this.tabItemColumns = {\n      title: _.createIconNoSpan(\"columns\", this.gos, this.column),\n      //createColumnsIcon(),\n      titleLabel: _TabbedColumnMenu.TAB_COLUMNS.replace(\"MenuTab\", \"\"),\n      bodyPromise: AgPromise.resolve(eWrapperDiv),\n      name: _TabbedColumnMenu.TAB_COLUMNS\n    };\n    return this.tabItemColumns;\n  }\n  afterGuiAttached(params) {\n    const { container, hidePopup } = params;\n    this.tabbedLayout.setAfterAttachedParams({ container, hidePopup });\n    if (hidePopup) {\n      this.hidePopupFunc = hidePopup;\n      this.addDestroyFunc(hidePopup);\n    }\n  }\n  getGui() {\n    return this.tabbedLayout.getGui();\n  }\n};\n_TabbedColumnMenu.EVENT_TAB_SELECTED = \"tabSelected\";\n_TabbedColumnMenu.TAB_FILTER = \"filterMenuTab\";\n_TabbedColumnMenu.TAB_GENERAL = \"generalMenuTab\";\n_TabbedColumnMenu.TAB_COLUMNS = \"columnsMenuTab\";\n_TabbedColumnMenu.TABS_DEFAULT = [_TabbedColumnMenu.TAB_GENERAL, _TabbedColumnMenu.TAB_FILTER, _TabbedColumnMenu.TAB_COLUMNS];\n__decorateClass([\n  Autowired(\"filterManager\")\n], _TabbedColumnMenu.prototype, \"filterManager\", 2);\n__decorateClass([\n  Autowired(\"columnChooserFactory\")\n], _TabbedColumnMenu.prototype, \"columnChooserFactory\", 2);\n__decorateClass([\n  Autowired(\"columnMenuFactory\")\n], _TabbedColumnMenu.prototype, \"columnMenuFactory\", 2);\n__decorateClass([\n  Autowired(\"menuUtils\")\n], _TabbedColumnMenu.prototype, \"menuUtils\", 2);\n__decorateClass([\n  PostConstruct\n], _TabbedColumnMenu.prototype, \"init\", 1);\nvar TabbedColumnMenu = _TabbedColumnMenu;\nvar ColumnContextMenu = class extends Component {\n  constructor(column, restoreFocusParams, sourceElement) {\n    super(\n      /* html */\n      `\n            <div ref=\"eColumnMenu\" role=\"presentation\" class=\"ag-menu ag-column-menu\"></div>\n        `\n    );\n    this.column = column;\n    this.restoreFocusParams = restoreFocusParams;\n    this.sourceElement = sourceElement;\n  }\n  init() {\n    this.mainMenuList = this.columnMenuFactory.createMenu(this, this.column, () => {\n      var _a;\n      return (_a = this.sourceElement) != null ? _a : this.getGui();\n    });\n    this.mainMenuList.addEventListener(AgMenuItemComponent.EVENT_CLOSE_MENU, this.onHidePopup.bind(this));\n    this.eColumnMenu.appendChild(this.mainMenuList.getGui());\n  }\n  onHidePopup(event) {\n    this.menuUtils.closePopupAndRestoreFocusOnSelect(this.hidePopupFunc, this.restoreFocusParams, event);\n  }\n  afterGuiAttached({ hidePopup }) {\n    if (hidePopup) {\n      this.hidePopupFunc = hidePopup;\n      this.addDestroyFunc(hidePopup);\n    }\n    this.focusService.focusInto(this.mainMenuList.getGui());\n  }\n};\n__decorateClass([\n  Autowired(\"columnMenuFactory\")\n], ColumnContextMenu.prototype, \"columnMenuFactory\", 2);\n__decorateClass([\n  Autowired(\"menuUtils\")\n], ColumnContextMenu.prototype, \"menuUtils\", 2);\n__decorateClass([\n  Autowired(\"focusService\")\n], ColumnContextMenu.prototype, \"focusService\", 2);\n__decorateClass([\n  RefSelector(\"eColumnMenu\")\n], ColumnContextMenu.prototype, \"eColumnMenu\", 2);\n__decorateClass([\n  PostConstruct\n], ColumnContextMenu.prototype, \"init\", 1);\n\n// enterprise-modules/menu/src/menu/contextMenu.ts\nimport {\n  _ as _2,\n  AgMenuItemComponent as AgMenuItemComponent2,\n  AgMenuList as AgMenuList2,\n  Autowired as Autowired2,\n  Bean as Bean2,\n  BeanStub as BeanStub2,\n  Component as Component2,\n  ModuleNames as ModuleNames2,\n  ModuleRegistry as ModuleRegistry2,\n  Optional,\n  PostConstruct as PostConstruct2,\n  Events as Events2\n} from \"@ag-grid-community/core\";\nvar CSS_MENU = \"ag-menu\";\nvar CSS_CONTEXT_MENU_OPEN = \"ag-context-menu-open\";\nvar ContextMenuFactory = class extends BeanStub2 {\n  hideActiveMenu() {\n    this.destroyBean(this.activeMenu);\n  }\n  getMenuItems(node, column, value) {\n    const defaultMenuOptions = [];\n    if (_2.exists(node) && ModuleRegistry2.__isRegistered(ModuleNames2.ClipboardModule, this.context.getGridId())) {\n      if (column) {\n        if (!this.gos.get(\"suppressCutToClipboard\")) {\n          defaultMenuOptions.push(\"cut\");\n        }\n        defaultMenuOptions.push(\"copy\", \"copyWithHeaders\", \"copyWithGroupHeaders\", \"paste\", \"separator\");\n      }\n    }\n    if (this.gos.get(\"enableCharts\") && ModuleRegistry2.__isRegistered(ModuleNames2.GridChartsModule, this.context.getGridId())) {\n      if (this.columnModel.isPivotMode()) {\n        defaultMenuOptions.push(\"pivotChart\");\n      }\n      if (this.rangeService && !this.rangeService.isEmpty()) {\n        defaultMenuOptions.push(\"chartRange\");\n      }\n    }\n    if (_2.exists(node)) {\n      const csvModuleMissing = !ModuleRegistry2.__isRegistered(ModuleNames2.CsvExportModule, this.context.getGridId());\n      const excelModuleMissing = !ModuleRegistry2.__isRegistered(ModuleNames2.ExcelExportModule, this.context.getGridId());\n      const suppressExcel = this.gos.get(\"suppressExcelExport\") || excelModuleMissing;\n      const suppressCsv = this.gos.get(\"suppressCsvExport\") || csvModuleMissing;\n      const onIPad = _2.isIOSUserAgent();\n      const anyExport = !onIPad && (!suppressExcel || !suppressCsv);\n      if (anyExport) {\n        defaultMenuOptions.push(\"export\");\n      }\n    }\n    const defaultItems = defaultMenuOptions.length ? defaultMenuOptions : void 0;\n    const columnContextMenuItems = column == null ? void 0 : column.getColDef().contextMenuItems;\n    if (Array.isArray(columnContextMenuItems)) {\n      return columnContextMenuItems;\n    }\n    if (typeof columnContextMenuItems === \"function\") {\n      return columnContextMenuItems(this.gos.addGridCommonParams({\n        column,\n        node,\n        value,\n        defaultItems\n      }));\n    }\n    const userFunc = this.gos.getCallback(\"getContextMenuItems\");\n    if (userFunc) {\n      return userFunc({ column, node, value, defaultItems });\n    }\n    return defaultMenuOptions;\n  }\n  onContextMenu(mouseEvent, touchEvent, rowNode, column, value, anchorToElement) {\n    this.menuUtils.onContextMenu(mouseEvent, touchEvent, (eventOrTouch) => this.showMenu(rowNode, column, value, eventOrTouch, anchorToElement));\n  }\n  showMenu(node, column, value, mouseEvent, anchorToElement) {\n    const menuItems = this.getMenuItems(node, column, value);\n    const eGridBodyGui = this.ctrlsService.getGridBodyCtrl().getGui();\n    if (menuItems === void 0 || _2.missingOrEmpty(menuItems)) {\n      return false;\n    }\n    const menu = new ContextMenu(menuItems, column, node, value);\n    this.createBean(menu);\n    const eMenuGui = menu.getGui();\n    const positionParams = {\n      column,\n      rowNode: node,\n      type: \"contextMenu\",\n      mouseEvent,\n      ePopup: eMenuGui,\n      // move one pixel away so that accidentally double clicking\n      // won't show the browser's contextmenu\n      nudgeY: 1\n    };\n    const translate = this.localeService.getLocaleTextFunc();\n    const addPopupRes = this.popupService.addPopup({\n      modal: true,\n      eChild: eMenuGui,\n      closeOnEsc: true,\n      closedCallback: (e) => {\n        eGridBodyGui.classList.remove(CSS_CONTEXT_MENU_OPEN);\n        this.destroyBean(menu);\n        this.dispatchVisibleChangedEvent(false, e === void 0 ? \"api\" : \"ui\");\n      },\n      click: mouseEvent,\n      positionCallback: () => {\n        const isRtl = this.gos.get(\"enableRtl\");\n        this.popupService.positionPopupUnderMouseEvent(__spreadProps(__spreadValues({}, positionParams), {\n          nudgeX: isRtl ? (eMenuGui.offsetWidth + 1) * -1 : 1\n        }));\n      },\n      // so when browser is scrolled down, or grid is scrolled, context menu stays with cell\n      anchorToElement,\n      ariaLabel: translate(\"ariaLabelContextMenu\", \"Context Menu\")\n    });\n    if (addPopupRes) {\n      eGridBodyGui.classList.add(CSS_CONTEXT_MENU_OPEN);\n      menu.afterGuiAttached({ container: \"contextMenu\", hidePopup: addPopupRes.hideFunc });\n    }\n    if (this.activeMenu) {\n      this.hideActiveMenu();\n    }\n    this.activeMenu = menu;\n    menu.addEventListener(BeanStub2.EVENT_DESTROYED, () => {\n      if (this.activeMenu === menu) {\n        this.activeMenu = null;\n      }\n    });\n    if (addPopupRes) {\n      menu.addEventListener(AgMenuItemComponent2.EVENT_CLOSE_MENU, (e) => {\n        var _a, _b;\n        return addPopupRes.hideFunc({\n          mouseEvent: (_a = e.mouseEvent) != null ? _a : void 0,\n          keyboardEvent: (_b = e.keyboardEvent) != null ? _b : void 0,\n          forceHide: true\n        });\n      });\n    }\n    const isApi = mouseEvent && mouseEvent instanceof MouseEvent && mouseEvent.type === \"mousedown\";\n    this.dispatchVisibleChangedEvent(true, isApi ? \"api\" : \"ui\");\n    return true;\n  }\n  dispatchVisibleChangedEvent(visible, source = \"ui\") {\n    const displayedEvent = {\n      type: Events2.EVENT_CONTEXT_MENU_VISIBLE_CHANGED,\n      visible,\n      source\n    };\n    this.eventService.dispatchEvent(displayedEvent);\n  }\n};\n__decorateClass([\n  Autowired2(\"popupService\")\n], ContextMenuFactory.prototype, \"popupService\", 2);\n__decorateClass([\n  Autowired2(\"ctrlsService\")\n], ContextMenuFactory.prototype, \"ctrlsService\", 2);\n__decorateClass([\n  Autowired2(\"columnModel\")\n], ContextMenuFactory.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired2(\"menuUtils\")\n], ContextMenuFactory.prototype, \"menuUtils\", 2);\n__decorateClass([\n  Optional(\"rangeService\")\n], ContextMenuFactory.prototype, \"rangeService\", 2);\nContextMenuFactory = __decorateClass([\n  Bean2(\"contextMenuFactory\")\n], ContextMenuFactory);\nvar ContextMenu = class extends Component2 {\n  constructor(menuItems, column, node, value) {\n    super(\n      /* html */\n      `<div class=\"${CSS_MENU}\" role=\"presentation\"></div>`\n    );\n    this.menuItems = menuItems;\n    this.column = column;\n    this.node = node;\n    this.value = value;\n    this.menuList = null;\n    this.focusedCell = null;\n  }\n  addMenuItems() {\n    const menuList = this.createManagedBean(new AgMenuList2(0, {\n      column: this.column,\n      node: this.node,\n      value: this.value\n    }));\n    const menuItemsMapped = this.menuItemMapper.mapWithStockItems(this.menuItems, null, () => this.getGui());\n    menuList.addMenuItems(menuItemsMapped);\n    this.appendChild(menuList);\n    this.menuList = menuList;\n    menuList.addEventListener(AgMenuItemComponent2.EVENT_CLOSE_MENU, (e) => this.dispatchEvent(e));\n  }\n  afterGuiAttached(params) {\n    if (params.hidePopup) {\n      this.addDestroyFunc(params.hidePopup);\n    }\n    this.focusedCell = this.focusService.getFocusedCell();\n    if (this.menuList) {\n      this.focusService.focusInto(this.menuList.getGui());\n    }\n  }\n  restoreFocusedCell() {\n    const currentFocusedCell = this.focusService.getFocusedCell();\n    if (currentFocusedCell && this.focusedCell && this.cellPositionUtils.equals(currentFocusedCell, this.focusedCell)) {\n      const { rowIndex, rowPinned, column } = this.focusedCell;\n      const doc = this.gos.getDocument();\n      const activeEl = this.gos.getActiveDomElement();\n      if (!activeEl || activeEl === doc.body) {\n        this.focusService.setFocusedCell({\n          rowIndex,\n          column,\n          rowPinned,\n          forceBrowserFocus: true,\n          preventScrollOnBrowserFocus: !this.focusService.isKeyboardMode()\n        });\n      }\n    }\n  }\n  destroy() {\n    this.restoreFocusedCell();\n    super.destroy();\n  }\n};\n__decorateClass([\n  Autowired2(\"menuItemMapper\")\n], ContextMenu.prototype, \"menuItemMapper\", 2);\n__decorateClass([\n  Autowired2(\"focusService\")\n], ContextMenu.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired2(\"cellPositionUtils\")\n], ContextMenu.prototype, \"cellPositionUtils\", 2);\n__decorateClass([\n  PostConstruct2\n], ContextMenu.prototype, \"addMenuItems\", 1);\n\n// enterprise-modules/menu/src/menu/menuItemMapper.ts\nimport {\n  _ as _3,\n  Autowired as Autowired3,\n  Bean as Bean3,\n  BeanStub as BeanStub3,\n  ModuleNames as ModuleNames3,\n  ModuleRegistry as ModuleRegistry3,\n  Optional as Optional2\n} from \"@ag-grid-community/core\";\nvar MenuItemMapper = class extends BeanStub3 {\n  mapWithStockItems(originalList, column, sourceElement) {\n    if (!originalList) {\n      return [];\n    }\n    const resultList = [];\n    originalList.forEach((menuItemOrString) => {\n      let result;\n      if (typeof menuItemOrString === \"string\") {\n        result = this.getStockMenuItem(menuItemOrString, column, sourceElement);\n      } else {\n        result = __spreadValues({}, menuItemOrString);\n      }\n      if (!result) {\n        return;\n      }\n      const resultDef = result;\n      const { subMenu } = resultDef;\n      if (subMenu && subMenu instanceof Array) {\n        resultDef.subMenu = this.mapWithStockItems(subMenu, column, sourceElement);\n      }\n      if (result != null) {\n        resultList.push(result);\n      }\n    });\n    return resultList;\n  }\n  getStockMenuItem(key, column, sourceElement) {\n    var _a;\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    const skipHeaderOnAutoSize = this.gos.get(\"skipHeaderOnAutoSize\");\n    switch (key) {\n      case \"pinSubMenu\":\n        return {\n          name: localeTextFunc(\"pinColumn\", \"Pin Column\"),\n          icon: _3.createIconNoSpan(\"menuPin\", this.gos, null),\n          subMenu: [\"clearPinned\", \"pinLeft\", \"pinRight\"]\n        };\n      case \"pinLeft\":\n        return {\n          name: localeTextFunc(\"pinLeft\", \"Pin Left\"),\n          action: () => this.columnModel.setColumnsPinned([column], \"left\", \"contextMenu\"),\n          checked: !!column && column.isPinnedLeft()\n        };\n      case \"pinRight\":\n        return {\n          name: localeTextFunc(\"pinRight\", \"Pin Right\"),\n          action: () => this.columnModel.setColumnsPinned([column], \"right\", \"contextMenu\"),\n          checked: !!column && column.isPinnedRight()\n        };\n      case \"clearPinned\":\n        return {\n          name: localeTextFunc(\"noPin\", \"No Pin\"),\n          action: () => this.columnModel.setColumnsPinned([column], null, \"contextMenu\"),\n          checked: !!column && !column.isPinned()\n        };\n      case \"valueAggSubMenu\":\n        if (ModuleRegistry3.__assertRegistered(ModuleNames3.RowGroupingModule, \"Aggregation from Menu\", this.context.getGridId())) {\n          if (!(column == null ? void 0 : column.isPrimary()) && !(column == null ? void 0 : column.getColDef().pivotValueColumn)) {\n            return null;\n          }\n          return {\n            name: localeTextFunc(\"valueAggregation\", \"Value Aggregation\"),\n            icon: _3.createIconNoSpan(\"menuValue\", this.gos, null),\n            subMenu: this.createAggregationSubMenu(column, this.aggFuncService)\n          };\n        } else {\n          return null;\n        }\n      case \"autoSizeThis\":\n        return {\n          name: localeTextFunc(\"autosizeThiscolumn\", \"Autosize This Column\"),\n          action: () => this.columnModel.autoSizeColumn(column, \"contextMenu\", skipHeaderOnAutoSize)\n        };\n      case \"autoSizeAll\":\n        return {\n          name: localeTextFunc(\"autosizeAllColumns\", \"Autosize All Columns\"),\n          action: () => this.columnModel.autoSizeAllColumns(\"contextMenu\", skipHeaderOnAutoSize)\n        };\n      case \"rowGroup\":\n        return {\n          name: localeTextFunc(\"groupBy\", \"Group by\") + \" \" + _3.escapeString(this.columnModel.getDisplayNameForColumn(column, \"header\")),\n          disabled: (column == null ? void 0 : column.isRowGroupActive()) || !(column == null ? void 0 : column.getColDef().enableRowGroup),\n          action: () => this.columnModel.addRowGroupColumns([column], \"contextMenu\"),\n          icon: _3.createIconNoSpan(\"menuAddRowGroup\", this.gos, null)\n        };\n      case \"rowUnGroup\":\n        const icon = _3.createIconNoSpan(\"menuRemoveRowGroup\", this.gos, null);\n        const showRowGroup = column == null ? void 0 : column.getColDef().showRowGroup;\n        const lockedGroups = this.gos.get(\"groupLockGroupColumns\");\n        if (showRowGroup === true) {\n          return {\n            name: localeTextFunc(\"ungroupAll\", \"Un-Group All\"),\n            disabled: lockedGroups === -1 || lockedGroups >= this.columnModel.getRowGroupColumns().length,\n            action: () => this.columnModel.setRowGroupColumns(this.columnModel.getRowGroupColumns().slice(0, lockedGroups), \"contextMenu\"),\n            icon\n          };\n        }\n        if (typeof showRowGroup === \"string\") {\n          const underlyingColumn = this.columnModel.getPrimaryColumn(showRowGroup);\n          const ungroupByName = underlyingColumn != null ? _3.escapeString(this.columnModel.getDisplayNameForColumn(underlyingColumn, \"header\")) : showRowGroup;\n          return {\n            name: localeTextFunc(\"ungroupBy\", \"Un-Group by\") + \" \" + ungroupByName,\n            disabled: underlyingColumn != null && this.columnModel.isColumnGroupingLocked(underlyingColumn),\n            action: () => this.columnModel.removeRowGroupColumns([showRowGroup], \"contextMenu\"),\n            icon\n          };\n        }\n        return {\n          name: localeTextFunc(\"ungroupBy\", \"Un-Group by\") + \" \" + _3.escapeString(this.columnModel.getDisplayNameForColumn(column, \"header\")),\n          disabled: !(column == null ? void 0 : column.isRowGroupActive()) || !(column == null ? void 0 : column.getColDef().enableRowGroup) || this.columnModel.isColumnGroupingLocked(column),\n          action: () => this.columnModel.removeRowGroupColumns([column], \"contextMenu\"),\n          icon\n        };\n      case \"resetColumns\":\n        return {\n          name: localeTextFunc(\"resetColumns\", \"Reset Columns\"),\n          action: () => this.columnModel.resetColumnState(\"contextMenu\")\n        };\n      case \"expandAll\":\n        return {\n          name: localeTextFunc(\"expandAll\", \"Expand All Row Groups\"),\n          action: () => this.gridApi.expandAll()\n        };\n      case \"contractAll\":\n        return {\n          name: localeTextFunc(\"collapseAll\", \"Collapse All Row Groups\"),\n          action: () => this.gridApi.collapseAll()\n        };\n      case \"copy\":\n        if (ModuleRegistry3.__assertRegistered(ModuleNames3.ClipboardModule, \"Copy from Menu\", this.context.getGridId())) {\n          return {\n            name: localeTextFunc(\"copy\", \"Copy\"),\n            shortcut: localeTextFunc(\"ctrlC\", \"Ctrl+C\"),\n            icon: _3.createIconNoSpan(\"clipboardCopy\", this.gos, null),\n            action: () => this.clipboardService.copyToClipboard()\n          };\n        } else {\n          return null;\n        }\n      case \"copyWithHeaders\":\n        if (ModuleRegistry3.__assertRegistered(ModuleNames3.ClipboardModule, \"Copy with Headers from Menu\", this.context.getGridId())) {\n          return {\n            name: localeTextFunc(\"copyWithHeaders\", \"Copy with Headers\"),\n            // shortcut: localeTextFunc('ctrlC','Ctrl+C'),\n            icon: _3.createIconNoSpan(\"clipboardCopy\", this.gos, null),\n            action: () => this.clipboardService.copyToClipboard({ includeHeaders: true })\n          };\n        } else {\n          return null;\n        }\n      case \"copyWithGroupHeaders\":\n        if (ModuleRegistry3.__assertRegistered(ModuleNames3.ClipboardModule, \"Copy with Group Headers from Menu\", this.context.getGridId())) {\n          return {\n            name: localeTextFunc(\"copyWithGroupHeaders\", \"Copy with Group Headers\"),\n            // shortcut: localeTextFunc('ctrlC','Ctrl+C'),\n            icon: _3.createIconNoSpan(\"clipboardCopy\", this.gos, null),\n            action: () => this.clipboardService.copyToClipboard({ includeHeaders: true, includeGroupHeaders: true })\n          };\n        } else {\n          return null;\n        }\n      case \"cut\":\n        if (ModuleRegistry3.__assertRegistered(ModuleNames3.ClipboardModule, \"Cut from Menu\", this.context.getGridId())) {\n          const focusedCell = this.focusService.getFocusedCell();\n          const rowNode = focusedCell ? this.rowPositionUtils.getRowNode(focusedCell) : null;\n          const isEditable = rowNode ? focusedCell == null ? void 0 : focusedCell.column.isCellEditable(rowNode) : false;\n          return {\n            name: localeTextFunc(\"cut\", \"Cut\"),\n            shortcut: localeTextFunc(\"ctrlX\", \"Ctrl+X\"),\n            icon: _3.createIconNoSpan(\"clipboardCut\", this.gos, null),\n            disabled: !isEditable || this.gos.get(\"suppressCutToClipboard\"),\n            action: () => this.clipboardService.cutToClipboard(void 0, \"contextMenu\")\n          };\n        } else {\n          return null;\n        }\n      case \"paste\":\n        if (ModuleRegistry3.__assertRegistered(ModuleNames3.ClipboardModule, \"Paste from Clipboard\", this.context.getGridId())) {\n          return {\n            name: localeTextFunc(\"paste\", \"Paste\"),\n            shortcut: localeTextFunc(\"ctrlV\", \"Ctrl+V\"),\n            disabled: true,\n            icon: _3.createIconNoSpan(\"clipboardPaste\", this.gos, null),\n            action: () => this.clipboardService.pasteFromClipboard()\n          };\n        } else {\n          return null;\n        }\n      case \"export\":\n        const exportSubMenuItems = [];\n        const csvModuleLoaded = ModuleRegistry3.__isRegistered(ModuleNames3.CsvExportModule, this.context.getGridId());\n        const excelModuleLoaded = ModuleRegistry3.__isRegistered(ModuleNames3.ExcelExportModule, this.context.getGridId());\n        if (!this.gos.get(\"suppressCsvExport\") && csvModuleLoaded) {\n          exportSubMenuItems.push(\"csvExport\");\n        }\n        if (!this.gos.get(\"suppressExcelExport\") && excelModuleLoaded) {\n          exportSubMenuItems.push(\"excelExport\");\n        }\n        return {\n          name: localeTextFunc(\"export\", \"Export\"),\n          subMenu: exportSubMenuItems,\n          icon: _3.createIconNoSpan(\"save\", this.gos, null)\n        };\n      case \"csvExport\":\n        return {\n          name: localeTextFunc(\"csvExport\", \"CSV Export\"),\n          icon: _3.createIconNoSpan(\"csvExport\", this.gos, null),\n          action: () => this.gridApi.exportDataAsCsv({})\n        };\n      case \"excelExport\":\n        return {\n          name: localeTextFunc(\"excelExport\", \"Excel Export\"),\n          icon: _3.createIconNoSpan(\"excelExport\", this.gos, null),\n          action: () => this.gridApi.exportDataAsExcel()\n        };\n      case \"separator\":\n        return \"separator\";\n      case \"pivotChart\":\n      case \"chartRange\":\n        return (_a = this.chartMenuItemMapper.getChartItems(key)) != null ? _a : null;\n      case \"columnFilter\":\n        if (column) {\n          return {\n            name: localeTextFunc(\"columnFilter\", \"Column Filter\"),\n            icon: _3.createIconNoSpan(\"filter\", this.gos, null),\n            action: () => this.menuService.showFilterMenu({\n              column,\n              buttonElement: sourceElement(),\n              containerType: \"columnFilter\",\n              positionBy: \"button\"\n            })\n          };\n        } else {\n          return null;\n        }\n      case \"columnChooser\":\n        if (ModuleRegistry3.__isRegistered(ModuleNames3.ColumnsToolPanelModule, this.context.getGridId())) {\n          return {\n            name: localeTextFunc(\"columnChooser\", \"Choose Columns\"),\n            icon: _3.createIconNoSpan(\"columns\", this.gos, null),\n            action: () => this.menuService.showColumnChooser({ column, eventSource: sourceElement() })\n          };\n        } else {\n          return null;\n        }\n      case \"sortAscending\":\n        return {\n          name: localeTextFunc(\"sortAscending\", \"Sort Ascending\"),\n          icon: _3.createIconNoSpan(\"sortAscending\", this.gos, null),\n          action: () => this.sortController.setSortForColumn(column, \"asc\", false, \"columnMenu\")\n        };\n      case \"sortDescending\":\n        return {\n          name: localeTextFunc(\"sortDescending\", \"Sort Descending\"),\n          icon: _3.createIconNoSpan(\"sortDescending\", this.gos, null),\n          action: () => this.sortController.setSortForColumn(column, \"desc\", false, \"columnMenu\")\n        };\n      case \"sortUnSort\":\n        return {\n          name: localeTextFunc(\"sortUnSort\", \"Clear Sort\"),\n          icon: _3.createIconNoSpan(\"sortUnSort\", this.gos, null),\n          action: () => this.sortController.setSortForColumn(column, null, false, \"columnMenu\")\n        };\n      default: {\n        console.warn(`AG Grid: unknown menu item type ${key}`);\n        return null;\n      }\n    }\n  }\n  createAggregationSubMenu(column, aggFuncService) {\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    let columnToUse;\n    if (column.isPrimary()) {\n      columnToUse = column;\n    } else {\n      const pivotValueColumn = column.getColDef().pivotValueColumn;\n      columnToUse = _3.exists(pivotValueColumn) ? pivotValueColumn : void 0;\n    }\n    const result = [];\n    if (columnToUse) {\n      const columnIsAlreadyAggValue = columnToUse.isValueActive();\n      const funcNames = aggFuncService.getFuncNames(columnToUse);\n      result.push({\n        name: localeTextFunc(\"noAggregation\", \"None\"),\n        action: () => {\n          this.columnModel.removeValueColumns([columnToUse], \"contextMenu\");\n          this.columnModel.setColumnAggFunc(columnToUse, void 0, \"contextMenu\");\n        },\n        checked: !columnIsAlreadyAggValue\n      });\n      funcNames.forEach((funcName) => {\n        result.push({\n          name: localeTextFunc(funcName, aggFuncService.getDefaultFuncLabel(funcName)),\n          action: () => {\n            this.columnModel.setColumnAggFunc(columnToUse, funcName, \"contextMenu\");\n            this.columnModel.addValueColumns([columnToUse], \"contextMenu\");\n          },\n          checked: columnIsAlreadyAggValue && columnToUse.getAggFunc() === funcName\n        });\n      });\n    }\n    return result;\n  }\n};\n__decorateClass([\n  Autowired3(\"columnModel\")\n], MenuItemMapper.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired3(\"gridApi\")\n], MenuItemMapper.prototype, \"gridApi\", 2);\n__decorateClass([\n  Autowired3(\"focusService\")\n], MenuItemMapper.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired3(\"rowPositionUtils\")\n], MenuItemMapper.prototype, \"rowPositionUtils\", 2);\n__decorateClass([\n  Autowired3(\"chartMenuItemMapper\")\n], MenuItemMapper.prototype, \"chartMenuItemMapper\", 2);\n__decorateClass([\n  Autowired3(\"menuService\")\n], MenuItemMapper.prototype, \"menuService\", 2);\n__decorateClass([\n  Autowired3(\"sortController\")\n], MenuItemMapper.prototype, \"sortController\", 2);\n__decorateClass([\n  Optional2(\"clipboardService\")\n], MenuItemMapper.prototype, \"clipboardService\", 2);\n__decorateClass([\n  Optional2(\"aggFuncService\")\n], MenuItemMapper.prototype, \"aggFuncService\", 2);\nMenuItemMapper = __decorateClass([\n  Bean3(\"menuItemMapper\")\n], MenuItemMapper);\n\n// enterprise-modules/menu/src/version.ts\nvar VERSION = \"31.3.2\";\n\n// enterprise-modules/menu/src/menu/chartMenuItemMapper.ts\nimport { Bean as Bean4, BeanStub as BeanStub4, ModuleNames as ModuleNames4, ModuleRegistry as ModuleRegistry4, Optional as Optional3, _ as _4 } from \"@ag-grid-community/core\";\nvar ChartMenuItemMapper = class extends BeanStub4 {\n  getChartItems(key) {\n    var _a, _b;\n    if (!this.chartService) {\n      ModuleRegistry4.__assertRegistered(ModuleNames4.GridChartsModule, `the Context Menu key \"${key}\"`, this.context.getGridId());\n      return void 0;\n    }\n    const builder = key === \"pivotChart\" ? new PivotMenuItemMapper(this.gos, this.chartService, this.localeService) : new RangeMenuItemMapper(this.gos, this.chartService, this.localeService);\n    const isEnterprise = this.chartService.isEnterprise();\n    let topLevelMenuItem = builder.getMenuItem();\n    if (topLevelMenuItem && topLevelMenuItem.subMenu && !isEnterprise) {\n      const filterEnterpriseItems = (m) => {\n        var _a2;\n        return __spreadProps(__spreadValues({}, m), {\n          subMenu: (_a2 = m.subMenu) == null ? void 0 : _a2.filter((menu) => !menu._enterprise).map((menu) => filterEnterpriseItems(menu))\n        });\n      };\n      topLevelMenuItem = filterEnterpriseItems(topLevelMenuItem);\n    }\n    const chartGroupsDef = (_b = (_a = this.gos.get(\"chartToolPanelsDef\")) == null ? void 0 : _a.settingsPanel) == null ? void 0 : _b.chartGroupsDef;\n    if (chartGroupsDef) {\n      topLevelMenuItem = ChartMenuItemMapper.filterAndOrderChartMenu(topLevelMenuItem, chartGroupsDef, builder.getConfigLookup());\n    }\n    return this.cleanInternals(topLevelMenuItem);\n  }\n  // Remove our internal _key and _enterprise properties so this does not leak out of the class on the menu items.\n  cleanInternals(menuItem) {\n    if (!menuItem) {\n      return menuItem;\n    }\n    const removeKeys = (m) => {\n      var _a;\n      m == null ? true : delete m._key;\n      m == null ? true : delete m._enterprise;\n      (_a = m == null ? void 0 : m.subMenu) == null ? void 0 : _a.forEach((s) => removeKeys(s));\n      return m;\n    };\n    return removeKeys(menuItem);\n  }\n  static buildLookup(menuItem) {\n    let itemLookup = {};\n    const addItem = (item) => {\n      itemLookup[item._key] = item;\n      if (item.subMenu) {\n        item.subMenu.forEach((s) => addItem(s));\n      }\n    };\n    addItem(menuItem);\n    return itemLookup;\n  }\n  /**\n   * Make the MenuItem match the charts provided and their ordering on the ChartGroupsDef config object as provided by the user.\n   */\n  static filterAndOrderChartMenu(topLevelMenuItem, chartGroupsDef, configLookup) {\n    var _a;\n    const menuItemLookup = this.buildLookup(topLevelMenuItem);\n    let orderedAndFiltered = __spreadProps(__spreadValues({}, topLevelMenuItem), { subMenu: [] });\n    Object.entries(chartGroupsDef).forEach(([group, chartTypes]) => {\n      var _a2, _b;\n      const chartConfigGroup = configLookup[group];\n      if (chartConfigGroup === null)\n        return;\n      if (chartConfigGroup == void 0) {\n        _4.warnOnce(`invalid chartGroupsDef config '${group}'`);\n        return void 0;\n      }\n      const menuItem = menuItemLookup[chartConfigGroup._key];\n      if (menuItem) {\n        if (menuItem.subMenu) {\n          const subMenus = chartTypes.map((chartType) => {\n            const itemKey = chartConfigGroup[chartType];\n            if (itemKey == void 0) {\n              _4.warnOnce(`invalid chartGroupsDef config '${group}.${chartType}'`);\n              return void 0;\n            }\n            return menuItemLookup[itemKey];\n          }).filter((s) => s !== void 0);\n          if (subMenus.length > 0) {\n            menuItem.subMenu = subMenus;\n            (_a2 = orderedAndFiltered.subMenu) == null ? void 0 : _a2.push(menuItem);\n          }\n        } else {\n          (_b = orderedAndFiltered.subMenu) == null ? void 0 : _b.push(menuItem);\n        }\n      }\n    });\n    if (((_a = orderedAndFiltered.subMenu) == null ? void 0 : _a.length) == 0) {\n      return void 0;\n    }\n    return orderedAndFiltered;\n  }\n};\n__decorateClass([\n  Optional3(\"chartService\")\n], ChartMenuItemMapper.prototype, \"chartService\", 2);\nChartMenuItemMapper = __decorateClass([\n  Bean4(\"chartMenuItemMapper\")\n], ChartMenuItemMapper);\nvar PivotMenuItemMapper = class {\n  constructor(gos, chartService, localeService) {\n    this.gos = gos;\n    this.chartService = chartService;\n    this.localeService = localeService;\n  }\n  getMenuItem() {\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    const getMenuItem = (localeKey, defaultText, chartType, key, enterprise = false) => {\n      return {\n        name: localeTextFunc(localeKey, defaultText),\n        action: () => this.chartService.createPivotChart({ chartType }),\n        _key: key,\n        _enterprise: enterprise\n      };\n    };\n    return {\n      name: localeTextFunc(\"pivotChart\", \"Pivot Chart\"),\n      _key: \"pivotChart\",\n      subMenu: [\n        {\n          _key: \"pivotColumnChart\",\n          name: localeTextFunc(\"columnChart\", \"Column\"),\n          subMenu: [\n            getMenuItem(\"groupedColumn\", \"Grouped&lrm;\", \"groupedColumn\", \"pivotGroupedColumn\"),\n            getMenuItem(\"stackedColumn\", \"Stacked&lrm;\", \"stackedColumn\", \"pivotStackedColumn\"),\n            getMenuItem(\"normalizedColumn\", \"100% Stacked&lrm;\", \"normalizedColumn\", \"pivotNormalizedColumn\")\n          ]\n        },\n        {\n          _key: \"pivotBarChart\",\n          name: localeTextFunc(\"barChart\", \"Bar\"),\n          subMenu: [\n            getMenuItem(\"groupedBar\", \"Grouped&lrm;\", \"groupedBar\", \"pivotGroupedBar\"),\n            getMenuItem(\"stackedBar\", \"Stacked&lrm;\", \"stackedBar\", \"pivotStackedBar\"),\n            getMenuItem(\"normalizedBar\", \"100% Stacked&lrm;\", \"normalizedBar\", \"pivotNormalizedBar\")\n          ]\n        },\n        {\n          _key: \"pivotPieChart\",\n          name: localeTextFunc(\"pieChart\", \"Pie\"),\n          subMenu: [\n            getMenuItem(\"pie\", \"Pie&lrm;\", \"pie\", \"pivotPie\"),\n            getMenuItem(\"donut\", \"Donut&lrm;\", \"donut\", \"pivotDonut\")\n          ]\n        },\n        getMenuItem(\"line\", \"Line&lrm;\", \"line\", \"pivotLineChart\"),\n        {\n          _key: \"pivotXYChart\",\n          name: localeTextFunc(\"xyChart\", \"X Y (Scatter)\"),\n          subMenu: [\n            getMenuItem(\"scatter\", \"Scatter&lrm;\", \"scatter\", \"pivotScatter\"),\n            getMenuItem(\"bubble\", \"Bubble&lrm;\", \"bubble\", \"pivotBubble\")\n          ]\n        },\n        {\n          _key: \"pivotAreaChart\",\n          name: localeTextFunc(\"areaChart\", \"Area\"),\n          subMenu: [\n            getMenuItem(\"area\", \"Area&lrm;\", \"area\", \"pivotArea\"),\n            getMenuItem(\"stackedArea\", \"Stacked&lrm;\", \"stackedArea\", \"pivotStackedArea\"),\n            getMenuItem(\"normalizedArea\", \"100% Stacked&lrm;\", \"normalizedArea\", \"pivotNormalizedArea\")\n          ]\n        },\n        {\n          _key: \"pivotStatisticalChart\",\n          _enterprise: false,\n          // histogram chart is available in both community and enterprise distributions\n          name: localeTextFunc(\"statisticalChart\", \"Statistical\"),\n          subMenu: [\n            getMenuItem(\"histogramChart\", \"Histogram&lrm;\", \"histogram\", \"pivotHistogram\", false)\n          ]\n        },\n        {\n          _key: \"pivotHierarchicalChart\",\n          _enterprise: true,\n          name: localeTextFunc(\"hierarchicalChart\", \"Hierarchical\"),\n          subMenu: [\n            getMenuItem(\"treemapChart\", \"Treemap&lrm;\", \"treemap\", \"pivotTreemap\", true),\n            getMenuItem(\"sunburstChart\", \"Sunburst&lrm;\", \"sunburst\", \"pivotSunburst\", true)\n          ]\n        },\n        {\n          _key: \"pivotCombinationChart\",\n          name: localeTextFunc(\"combinationChart\", \"Combination\"),\n          subMenu: [\n            getMenuItem(\"columnLineCombo\", \"Column & Line&lrm;\", \"columnLineCombo\", \"pivotColumnLineCombo\"),\n            getMenuItem(\"AreaColumnCombo\", \"Area & Column&lrm;\", \"areaColumnCombo\", \"pivotAreaColumnCombo\")\n          ]\n        }\n      ],\n      icon: _4.createIconNoSpan(\"chart\", this.gos, void 0)\n    };\n  }\n  getConfigLookup() {\n    return {\n      columnGroup: {\n        _key: \"pivotColumnChart\",\n        column: \"pivotGroupedColumn\",\n        stackedColumn: \"pivotStackedColumn\",\n        normalizedColumn: \"pivotNormalizedColumn\"\n      },\n      barGroup: {\n        _key: \"pivotBarChart\",\n        bar: \"pivotGroupedBar\",\n        stackedBar: \"pivotStackedBar\",\n        normalizedBar: \"pivotNormalizedBar\"\n      },\n      pieGroup: {\n        _key: \"pivotPieChart\",\n        pie: \"pivotPie\",\n        donut: \"pivotDonut\",\n        doughnut: \"pivotDonut\"\n      },\n      lineGroup: {\n        _key: \"pivotLineChart\",\n        line: \"pivotLineChart\"\n      },\n      scatterGroup: {\n        _key: \"pivotXYChart\",\n        bubble: \"pivotBubble\",\n        scatter: \"pivotScatter\"\n      },\n      areaGroup: {\n        _key: \"pivotAreaChart\",\n        area: \"pivotArea\",\n        stackedArea: \"pivotStackedArea\",\n        normalizedArea: \"pivotNormalizedArea\"\n      },\n      combinationGroup: {\n        _key: \"pivotCombinationChart\",\n        columnLineCombo: \"pivotColumnLineCombo\",\n        areaColumnCombo: \"pivotAreaColumnCombo\",\n        customCombo: null\n        // Not currently supported\n      },\n      hierarchicalGroup: {\n        _key: \"pivotHierarchicalChart\",\n        treemap: \"pivotTreemap\",\n        sunburst: \"pivotSunburst\"\n      },\n      statisticalGroup: {\n        _key: \"pivotStatisticalChart\",\n        histogram: \"pivotHistogram\",\n        // Some statistical charts do not currently support pivot mode\n        rangeBar: null,\n        rangeArea: null,\n        boxPlot: null\n      },\n      // Polar charts do not support pivot mode\n      polarGroup: null,\n      // Specialized charts do not currently support pivot mode\n      specializedGroup: null\n    };\n  }\n};\nvar RangeMenuItemMapper = class {\n  constructor(gos, chartService, localeService) {\n    this.gos = gos;\n    this.chartService = chartService;\n    this.localeService = localeService;\n  }\n  getMenuItem() {\n    const localeTextFunc = this.localeService.getLocaleTextFunc();\n    const getMenuItem = (localeKey, defaultText, chartType, key, enterprise = false) => {\n      return {\n        name: localeTextFunc(localeKey, defaultText),\n        action: () => this.chartService.createChartFromCurrentRange(chartType),\n        _key: key,\n        _enterprise: enterprise\n      };\n    };\n    return {\n      name: localeTextFunc(\"chartRange\", \"Chart Range\"),\n      _key: \"chartRange\",\n      subMenu: [\n        {\n          name: localeTextFunc(\"columnChart\", \"Column\"),\n          subMenu: [\n            getMenuItem(\"groupedColumn\", \"Grouped&lrm;\", \"groupedColumn\", \"rangeGroupedColumn\"),\n            getMenuItem(\"stackedColumn\", \"Stacked&lrm;\", \"stackedColumn\", \"rangeStackedColumn\"),\n            getMenuItem(\"normalizedColumn\", \"100% Stacked&lrm;\", \"normalizedColumn\", \"rangeNormalizedColumn\")\n          ],\n          _key: \"rangeColumnChart\"\n        },\n        {\n          name: localeTextFunc(\"barChart\", \"Bar\"),\n          subMenu: [\n            getMenuItem(\"groupedBar\", \"Grouped&lrm;\", \"groupedBar\", \"rangeGroupedBar\"),\n            getMenuItem(\"stackedBar\", \"Stacked&lrm;\", \"stackedBar\", \"rangeStackedBar\"),\n            getMenuItem(\"normalizedBar\", \"100% Stacked&lrm;\", \"normalizedBar\", \"rangeNormalizedBar\")\n          ],\n          _key: \"rangeBarChart\"\n        },\n        {\n          name: localeTextFunc(\"pieChart\", \"Pie\"),\n          subMenu: [\n            getMenuItem(\"pie\", \"Pie&lrm;\", \"pie\", \"rangePie\"),\n            getMenuItem(\"donut\", \"Donut&lrm;\", \"donut\", \"rangeDonut\")\n          ],\n          _key: \"rangePieChart\"\n        },\n        getMenuItem(\"line\", \"Line&lrm;\", \"line\", \"rangeLineChart\"),\n        {\n          name: localeTextFunc(\"xyChart\", \"X Y (Scatter)\"),\n          subMenu: [\n            getMenuItem(\"scatter\", \"Scatter&lrm;\", \"scatter\", \"rangeScatter\"),\n            getMenuItem(\"bubble\", \"Bubble&lrm;\", \"bubble\", \"rangeBubble\")\n          ],\n          _key: \"rangeXYChart\"\n        },\n        {\n          name: localeTextFunc(\"areaChart\", \"Area\"),\n          subMenu: [\n            getMenuItem(\"area\", \"Area&lrm;\", \"area\", \"rangeArea\"),\n            getMenuItem(\"stackedArea\", \"Stacked&lrm;\", \"stackedArea\", \"rangeStackedArea\"),\n            getMenuItem(\"normalizedArea\", \"100% Stacked&lrm;\", \"normalizedArea\", \"rangeNormalizedArea\")\n          ],\n          _key: \"rangeAreaChart\"\n        },\n        {\n          name: localeTextFunc(\"polarChart\", \"Polar\"),\n          subMenu: [\n            getMenuItem(\"radarLine\", \"Radar Line&lrm;\", \"radarLine\", \"rangeRadarLine\"),\n            getMenuItem(\"radarArea\", \"Radar Area&lrm;\", \"radarArea\", \"rangeRadarArea\"),\n            getMenuItem(\"nightingale\", \"Nightingale&lrm;\", \"nightingale\", \"rangeNightingale\"),\n            getMenuItem(\"radialColumn\", \"Radial Column&lrm;\", \"radialColumn\", \"rangeRadialColumn\"),\n            getMenuItem(\"radialBar\", \"Radial Bar&lrm;\", \"radialBar\", \"rangeRadialBar\")\n          ],\n          _key: \"rangePolarChart\",\n          _enterprise: true\n        },\n        {\n          name: localeTextFunc(\"statisticalChart\", \"Statistical\"),\n          subMenu: [\n            getMenuItem(\"boxPlot\", \"Box Plot&lrm;\", \"boxPlot\", \"rangeBoxPlot\", true),\n            getMenuItem(\"histogramChart\", \"Histogram&lrm;\", \"histogram\", \"rangeHistogram\", false),\n            getMenuItem(\"rangeBar\", \"Range Bar&lrm;\", \"rangeBar\", \"rangeRangeBar\", true),\n            getMenuItem(\"rangeArea\", \"Range Area&lrm;\", \"rangeArea\", \"rangeRangeArea\", true)\n          ],\n          _key: \"rangeStatisticalChart\",\n          _enterprise: false\n          // histogram chart is available in both community and enterprise distributions\n        },\n        {\n          name: localeTextFunc(\"hierarchicalChart\", \"Hierarchical\"),\n          subMenu: [\n            getMenuItem(\"treemap\", \"Treemap&lrm;\", \"treemap\", \"rangeTreemap\"),\n            getMenuItem(\"sunburst\", \"Sunburst&lrm;\", \"sunburst\", \"rangeSunburst\")\n          ],\n          _key: \"rangeHierarchicalChart\",\n          _enterprise: true\n        },\n        {\n          name: localeTextFunc(\"specializedChart\", \"Specialized\"),\n          subMenu: [\n            getMenuItem(\"heatmap\", \"Heatmap&lrm;\", \"heatmap\", \"rangeHeatmap\"),\n            getMenuItem(\"waterfall\", \"Waterfall&lrm;\", \"waterfall\", \"rangeWaterfall\")\n          ],\n          _key: \"rangeSpecializedChart\",\n          _enterprise: true\n        },\n        {\n          name: localeTextFunc(\"combinationChart\", \"Combination\"),\n          subMenu: [\n            getMenuItem(\"columnLineCombo\", \"Column & Line&lrm;\", \"columnLineCombo\", \"rangeColumnLineCombo\"),\n            getMenuItem(\"AreaColumnCombo\", \"Area & Column&lrm;\", \"areaColumnCombo\", \"rangeAreaColumnCombo\")\n          ],\n          _key: \"rangeCombinationChart\"\n        }\n      ],\n      icon: _4.createIconNoSpan(\"chart\", this.gos, void 0)\n    };\n  }\n  getConfigLookup() {\n    return {\n      columnGroup: {\n        _key: \"rangeColumnChart\",\n        column: \"rangeGroupedColumn\",\n        stackedColumn: \"rangeStackedColumn\",\n        normalizedColumn: \"rangeNormalizedColumn\"\n      },\n      barGroup: {\n        _key: \"rangeBarChart\",\n        bar: \"rangeGroupedBar\",\n        stackedBar: \"rangeStackedBar\",\n        normalizedBar: \"rangeNormalizedBar\"\n      },\n      pieGroup: {\n        _key: \"rangePieChart\",\n        pie: \"rangePie\",\n        donut: \"rangeDonut\",\n        doughnut: \"rangeDonut\"\n      },\n      lineGroup: {\n        _key: \"rangeLineChart\",\n        line: \"rangeLineChart\"\n      },\n      scatterGroup: {\n        _key: \"rangeXYChart\",\n        bubble: \"rangeBubble\",\n        scatter: \"rangeScatter\"\n      },\n      areaGroup: {\n        _key: \"rangeAreaChart\",\n        area: \"rangeArea\",\n        stackedArea: \"rangeStackedArea\",\n        normalizedArea: \"rangeNormalizedArea\"\n      },\n      polarGroup: {\n        _key: \"rangePolarChart\",\n        radarLine: \"rangeRadarLine\",\n        radarArea: \"rangeRadarArea\",\n        nightingale: \"rangeNightingale\",\n        radialColumn: \"rangeRadialColumn\",\n        radialBar: \"rangeRadialBar\"\n      },\n      statisticalGroup: {\n        _key: \"rangeStatisticalChart\",\n        boxPlot: \"rangeBoxPlot\",\n        histogram: \"rangeHistogram\",\n        rangeBar: \"rangeRangeBar\",\n        rangeArea: \"rangeRangeArea\"\n      },\n      hierarchicalGroup: {\n        _key: \"rangeHierarchicalChart\",\n        treemap: \"rangeTreemap\",\n        sunburst: \"rangeSunburst\"\n      },\n      specializedGroup: {\n        _key: \"rangeSpecializedChart\",\n        heatmap: \"rangeHeatmap\",\n        waterfall: \"rangeWaterfall\"\n      },\n      combinationGroup: {\n        _key: \"rangeCombinationChart\",\n        columnLineCombo: \"rangeColumnLineCombo\",\n        areaColumnCombo: \"rangeAreaColumnCombo\",\n        customCombo: null\n        // Not currently supported\n      }\n    };\n  }\n};\n\n// enterprise-modules/menu/src/menu/columnChooserFactory.ts\nimport {\n  AgDialog,\n  Autowired as Autowired4,\n  Bean as Bean5,\n  BeanStub as BeanStub5,\n  Events as Events3\n} from \"@ag-grid-community/core\";\nimport { PrimaryColsPanel } from \"@ag-grid-enterprise/column-tool-panel\";\nvar ColumnChooserFactory = class extends BeanStub5 {\n  createColumnSelectPanel(parent, column, draggable, params) {\n    var _a, _b;\n    const columnSelectPanel = parent.createManagedBean(new PrimaryColsPanel());\n    const columnChooserParams = (_b = (_a = params != null ? params : column == null ? void 0 : column.getColDef().columnChooserParams) != null ? _a : column == null ? void 0 : column.getColDef().columnsMenuParams) != null ? _b : {};\n    const {\n      contractColumnSelection,\n      suppressColumnExpandAll,\n      suppressColumnFilter,\n      suppressColumnSelectAll,\n      suppressSyncLayoutWithGrid,\n      columnLayout\n    } = columnChooserParams;\n    columnSelectPanel.init(!!draggable, this.gos.addGridCommonParams({\n      suppressColumnMove: false,\n      suppressValues: false,\n      suppressPivots: false,\n      suppressRowGroups: false,\n      suppressPivotMode: false,\n      contractColumnSelection: !!contractColumnSelection,\n      suppressColumnExpandAll: !!suppressColumnExpandAll,\n      suppressColumnFilter: !!suppressColumnFilter,\n      suppressColumnSelectAll: !!suppressColumnSelectAll,\n      suppressSyncLayoutWithGrid: !!columnLayout || !!suppressSyncLayoutWithGrid,\n      onStateUpdated: () => {\n      }\n    }), \"columnMenu\");\n    if (columnLayout) {\n      columnSelectPanel.setColumnLayout(columnLayout);\n    }\n    return columnSelectPanel;\n  }\n  showColumnChooser({ column, chooserParams, eventSource }) {\n    this.hideActiveColumnChooser();\n    const columnSelectPanel = this.createColumnSelectPanel(this, column, true, chooserParams);\n    const translate = this.localeService.getLocaleTextFunc();\n    const columnIndex = this.columnModel.getAllDisplayedColumns().indexOf(column);\n    const headerPosition = column ? this.focusService.getFocusedHeader() : null;\n    this.activeColumnChooserDialog = this.createBean(new AgDialog({\n      title: translate(\"chooseColumns\", \"Choose Columns\"),\n      component: columnSelectPanel,\n      width: 300,\n      height: 300,\n      resizable: true,\n      movable: true,\n      centered: true,\n      closable: true,\n      afterGuiAttached: () => {\n        var _a;\n        (_a = this.focusService.findNextFocusableElement(columnSelectPanel.getGui())) == null ? void 0 : _a.focus();\n        this.dispatchVisibleChangedEvent(true, column);\n      },\n      closedCallback: (event) => {\n        const eComp = this.activeColumnChooser.getGui();\n        this.destroyBean(this.activeColumnChooser);\n        this.activeColumnChooser = void 0;\n        this.activeColumnChooserDialog = void 0;\n        this.dispatchVisibleChangedEvent(false, column);\n        if (column) {\n          this.menuUtils.restoreFocusOnClose({ column, headerPosition, columnIndex, eventSource }, eComp, event, true);\n        }\n      }\n    }));\n    this.activeColumnChooser = columnSelectPanel;\n  }\n  hideActiveColumnChooser() {\n    if (this.activeColumnChooserDialog) {\n      this.destroyBean(this.activeColumnChooserDialog);\n    }\n  }\n  dispatchVisibleChangedEvent(visible, column) {\n    const event = {\n      type: Events3.EVENT_COLUMN_MENU_VISIBLE_CHANGED,\n      visible,\n      switchingTab: false,\n      key: \"columnChooser\",\n      column: column != null ? column : null\n    };\n    this.eventService.dispatchEvent(event);\n  }\n};\n__decorateClass([\n  Autowired4(\"focusService\")\n], ColumnChooserFactory.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired4(\"menuUtils\")\n], ColumnChooserFactory.prototype, \"menuUtils\", 2);\n__decorateClass([\n  Autowired4(\"columnModel\")\n], ColumnChooserFactory.prototype, \"columnModel\", 2);\nColumnChooserFactory = __decorateClass([\n  Bean5(\"columnChooserFactory\")\n], ColumnChooserFactory);\n\n// enterprise-modules/menu/src/menu/columnMenuFactory.ts\nimport {\n  AgMenuList as AgMenuList3,\n  Autowired as Autowired5,\n  Bean as Bean6,\n  BeanStub as BeanStub6,\n  _ as _5\n} from \"@ag-grid-community/core\";\nvar ColumnMenuFactory = class extends BeanStub6 {\n  createMenu(parent, column, sourceElement) {\n    const menuList = parent.createManagedBean(new AgMenuList3(0, {\n      column: column != null ? column : null,\n      node: null,\n      value: null\n    }));\n    const menuItems = this.getMenuItems(column);\n    const menuItemsMapped = this.menuItemMapper.mapWithStockItems(menuItems, column != null ? column : null, sourceElement);\n    menuList.addMenuItems(menuItemsMapped);\n    return menuList;\n  }\n  getMenuItems(column) {\n    const defaultItems = this.getDefaultMenuOptions(column);\n    let result;\n    const columnMainMenuItems = column == null ? void 0 : column.getColDef().mainMenuItems;\n    if (Array.isArray(columnMainMenuItems)) {\n      result = columnMainMenuItems;\n    } else if (typeof columnMainMenuItems === \"function\") {\n      result = columnMainMenuItems(this.gos.addGridCommonParams({\n        column,\n        defaultItems\n      }));\n    } else {\n      const userFunc = this.gos.getCallback(\"getMainMenuItems\");\n      if (userFunc && column) {\n        result = userFunc({\n          column,\n          defaultItems\n        });\n      } else {\n        result = defaultItems;\n      }\n    }\n    _5.removeRepeatsFromArray(result, ColumnMenuFactory.MENU_ITEM_SEPARATOR);\n    return result;\n  }\n  getDefaultMenuOptions(column) {\n    const result = [];\n    const isLegacyMenuEnabled = this.menuService.isLegacyMenuEnabled();\n    if (!column) {\n      if (!isLegacyMenuEnabled) {\n        result.push(\"columnChooser\");\n      }\n      result.push(\"resetColumns\");\n      return result;\n    }\n    const allowPinning = !column.getColDef().lockPinned;\n    const rowGroupCount = this.columnModel.getRowGroupColumns().length;\n    const doingGrouping = rowGroupCount > 0;\n    const allowValue = column.isAllowValue();\n    const allowRowGroup = column.isAllowRowGroup();\n    const isPrimary = column.isPrimary();\n    const pivotModeOn = this.columnModel.isPivotMode();\n    const isInMemoryRowModel = this.rowModel.getType() === \"clientSide\";\n    const usingTreeData = this.gos.get(\"treeData\");\n    const allowValueAgg = (\n      // if primary, then only allow aggValue if grouping and it's a value columns\n      isPrimary && doingGrouping && allowValue || !isPrimary\n    );\n    if (!isLegacyMenuEnabled && column.isSortable()) {\n      const sort = column.getSort();\n      if (sort !== \"asc\") {\n        result.push(\"sortAscending\");\n      }\n      if (sort !== \"desc\") {\n        result.push(\"sortDescending\");\n      }\n      if (sort) {\n        result.push(\"sortUnSort\");\n      }\n      result.push(ColumnMenuFactory.MENU_ITEM_SEPARATOR);\n    }\n    if (this.menuService.isFilterMenuItemEnabled(column)) {\n      result.push(\"columnFilter\");\n      result.push(ColumnMenuFactory.MENU_ITEM_SEPARATOR);\n    }\n    if (allowPinning) {\n      result.push(\"pinSubMenu\");\n    }\n    if (allowValueAgg) {\n      result.push(\"valueAggSubMenu\");\n    }\n    if (allowPinning || allowValueAgg) {\n      result.push(ColumnMenuFactory.MENU_ITEM_SEPARATOR);\n    }\n    result.push(\"autoSizeThis\");\n    result.push(\"autoSizeAll\");\n    result.push(ColumnMenuFactory.MENU_ITEM_SEPARATOR);\n    const showRowGroup = column.getColDef().showRowGroup;\n    if (showRowGroup) {\n      result.push(\"rowUnGroup\");\n    } else if (allowRowGroup && column.isPrimary()) {\n      if (column.isRowGroupActive()) {\n        const groupLocked = this.columnModel.isColumnGroupingLocked(column);\n        if (!groupLocked) {\n          result.push(\"rowUnGroup\");\n        }\n      } else {\n        result.push(\"rowGroup\");\n      }\n    }\n    result.push(ColumnMenuFactory.MENU_ITEM_SEPARATOR);\n    if (!isLegacyMenuEnabled) {\n      result.push(\"columnChooser\");\n    }\n    result.push(\"resetColumns\");\n    const allowExpandAndContract = isInMemoryRowModel && (usingTreeData || rowGroupCount > (pivotModeOn ? 1 : 0));\n    if (allowExpandAndContract) {\n      result.push(\"expandAll\");\n      result.push(\"contractAll\");\n    }\n    return result;\n  }\n};\nColumnMenuFactory.MENU_ITEM_SEPARATOR = \"separator\";\n__decorateClass([\n  Autowired5(\"menuItemMapper\")\n], ColumnMenuFactory.prototype, \"menuItemMapper\", 2);\n__decorateClass([\n  Autowired5(\"columnModel\")\n], ColumnMenuFactory.prototype, \"columnModel\", 2);\n__decorateClass([\n  Autowired5(\"rowModel\")\n], ColumnMenuFactory.prototype, \"rowModel\", 2);\n__decorateClass([\n  Autowired5(\"filterManager\")\n], ColumnMenuFactory.prototype, \"filterManager\", 2);\n__decorateClass([\n  Autowired5(\"menuService\")\n], ColumnMenuFactory.prototype, \"menuService\", 2);\nColumnMenuFactory = __decorateClass([\n  Bean6(\"columnMenuFactory\")\n], ColumnMenuFactory);\n\n// enterprise-modules/menu/src/menu/menuUtils.ts\nimport {\n  Autowired as Autowired6,\n  Bean as Bean7,\n  BeanStub as BeanStub7,\n  _ as _6\n} from \"@ag-grid-community/core\";\nvar MenuUtils = class extends BeanStub7 {\n  restoreFocusOnClose(restoreFocusParams, eComp, e, restoreIfMouseEvent) {\n    const { eventSource } = restoreFocusParams;\n    const isKeyboardEvent = e instanceof KeyboardEvent;\n    if (!restoreIfMouseEvent && !isKeyboardEvent || !eventSource) {\n      return;\n    }\n    const eDocument = this.gos.getDocument();\n    const activeEl = this.gos.getActiveDomElement();\n    if (!eComp.contains(activeEl) && activeEl !== eDocument.body) {\n      return;\n    }\n    this.focusHeaderCell(restoreFocusParams);\n  }\n  closePopupAndRestoreFocusOnSelect(hidePopupFunc, restoreFocusParams, event) {\n    let keyboardEvent;\n    if (event && event.keyboardEvent) {\n      keyboardEvent = event.keyboardEvent;\n    }\n    hidePopupFunc(keyboardEvent && { keyboardEvent });\n    const focusedCell = this.focusService.getFocusedCell();\n    const eDocument = this.gos.getDocument();\n    const activeEl = this.gos.getActiveDomElement();\n    if (!activeEl || activeEl === eDocument.body) {\n      if (focusedCell) {\n        const { rowIndex, rowPinned, column } = focusedCell;\n        this.focusService.setFocusedCell({ rowIndex, column, rowPinned, forceBrowserFocus: true, preventScrollOnBrowserFocus: true });\n      } else {\n        this.focusHeaderCell(restoreFocusParams);\n      }\n    }\n  }\n  onContextMenu(mouseEvent, touchEvent, showMenuCallback) {\n    if (!this.gos.get(\"allowContextMenuWithControlKey\")) {\n      if (mouseEvent && (mouseEvent.ctrlKey || mouseEvent.metaKey)) {\n        return;\n      }\n    }\n    if (mouseEvent) {\n      this.blockMiddleClickScrollsIfNeeded(mouseEvent);\n    }\n    if (this.gos.get(\"suppressContextMenu\")) {\n      return;\n    }\n    const eventOrTouch = mouseEvent != null ? mouseEvent : touchEvent.touches[0];\n    if (showMenuCallback(eventOrTouch)) {\n      const event = mouseEvent != null ? mouseEvent : touchEvent;\n      if (event && event.cancelable) {\n        event.preventDefault();\n      }\n    }\n  }\n  focusHeaderCell(restoreFocusParams) {\n    const { column, columnIndex, headerPosition, eventSource } = restoreFocusParams;\n    const isColumnStillVisible = this.columnModel.getAllDisplayedColumns().some((col) => col === column);\n    if (isColumnStillVisible && eventSource && _6.isVisible(eventSource)) {\n      const focusableEl = this.focusService.findTabbableParent(eventSource);\n      if (focusableEl) {\n        if (column) {\n          this.headerNavigationService.scrollToColumn(column);\n        }\n        focusableEl.focus();\n      }\n    } else if (headerPosition && columnIndex !== -1) {\n      const allColumns = this.columnModel.getAllDisplayedColumns();\n      const columnToFocus = allColumns[columnIndex] || _6.last(allColumns);\n      if (columnToFocus) {\n        this.focusService.focusHeaderPosition({\n          headerPosition: {\n            headerRowIndex: headerPosition.headerRowIndex,\n            column: columnToFocus\n          }\n        });\n      }\n    }\n  }\n  blockMiddleClickScrollsIfNeeded(mouseEvent) {\n    if (this.gos.get(\"suppressMiddleClickScrolls\") && mouseEvent.which === 2) {\n      mouseEvent.preventDefault();\n    }\n  }\n};\n__decorateClass([\n  Autowired6(\"focusService\")\n], MenuUtils.prototype, \"focusService\", 2);\n__decorateClass([\n  Autowired6(\"headerNavigationService\")\n], MenuUtils.prototype, \"headerNavigationService\", 2);\n__decorateClass([\n  Autowired6(\"columnModel\")\n], MenuUtils.prototype, \"columnModel\", 2);\nMenuUtils = __decorateClass([\n  Bean7(\"menuUtils\")\n], MenuUtils);\n\n// enterprise-modules/menu/src/menuModule.ts\nvar MenuModule = {\n  version: VERSION,\n  moduleName: ModuleNames5.MenuModule,\n  beans: [EnterpriseMenuFactory, ContextMenuFactory, MenuItemMapper, ChartMenuItemMapper, ColumnChooserFactory, ColumnMenuFactory, MenuUtils],\n  dependantModules: [\n    EnterpriseCoreModule\n  ]\n};\nexport {\n  MenuModule\n};\n"],
  "mappings": "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",
  "names": ["_SideBarButtonComp", "_SideBarButtonsComp", "_SideBarDefParser", "_ToolPanelWrapper", "_SideBarComp", "__defProp", "__getOwnPropDesc", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "__decorateClass", "_PrimaryColsHeaderPanel", "_ColumnModelItem", "_ToolPanelColumnGroupComp", "_ToolPanelColumnComp", "_PrimaryColsListPanel", "_PrimaryColsPanel", "_ColumnToolPanel", "VERSION", "__defProp", "__defProps", "__getOwnPropDesc", "__getOwnPropDescs", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "__spreadProps", "__decorateClass", "_TabbedColumnMenu", "VERSION"]
}
