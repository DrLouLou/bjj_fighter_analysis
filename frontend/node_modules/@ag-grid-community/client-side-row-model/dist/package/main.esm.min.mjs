var q=Object.defineProperty,z=Object.getOwnPropertyDescriptor,u=(t,e,o,s)=>{for(var i=s>1?void 0:s?z(e,o):e,r=t.length-1,n;r>=0;r--)(n=t[r])&&(i=(s?n(e,o,i):n(i))||i);return s&&i&&q(e,o,i),i};import{ModuleNames as J}from"@ag-grid-community/core";import{_ as A,Autowired as T,Bean as Z,BeanStub as ee,ChangedPath as te,Events as f,Optional as G,PostConstruct as oe,ClientSideRowModelSteps as c,RowNode as Y,RowHighlightPosition as I}from"@ag-grid-community/core";import{Events as j,RowNode as se,_ as m}from"@ag-grid-community/core";var L=class D{constructor(e,o,s,i,r,n){this.nextId=0,this.rowCountReady=!1,this.allNodesMap={},this.rootNode=e,this.gos=o,this.eventService=s,this.columnModel=i,this.beans=n,this.selectionService=r,this.rootNode.group=!0,this.rootNode.level=-1,this.rootNode.id=D.ROOT_NODE_ID,this.rootNode.allLeafChildren=[],this.rootNode.childrenAfterGroup=[],this.rootNode.childrenAfterSort=[],this.rootNode.childrenAfterAggFilter=[],this.rootNode.childrenAfterFilter=[]}getCopyOfNodesMap(){return m.cloneObject(this.allNodesMap)}getRowNode(e){return this.allNodesMap[e]}setRowData(e){if(typeof e=="string"){console.warn("AG Grid: rowData must be an array.");return}this.rowCountReady=!0,this.dispatchRowDataUpdateStartedEvent(e);const o=this.rootNode,s=this.rootNode.sibling;o.childrenAfterFilter=null,o.childrenAfterGroup=null,o.childrenAfterAggFilter=null,o.childrenAfterSort=null,o.childrenMapped=null,o.updateHasChildren(),this.nextId=0,this.allNodesMap={},e?o.allLeafChildren=e.map(i=>this.createNode(i,this.rootNode,D.TOP_LEVEL)):(o.allLeafChildren=[],o.childrenAfterGroup=[]),s&&(s.childrenAfterFilter=o.childrenAfterFilter,s.childrenAfterGroup=o.childrenAfterGroup,s.childrenAfterAggFilter=o.childrenAfterAggFilter,s.childrenAfterSort=o.childrenAfterSort,s.childrenMapped=o.childrenMapped,s.allLeafChildren=o.allLeafChildren)}updateRowData(e,o){this.rowCountReady=!0,this.dispatchRowDataUpdateStartedEvent(e.add);const s={remove:[],update:[],add:[]},i=[];return this.executeRemove(e,s,i),this.executeUpdate(e,s,i),this.executeAdd(e,s),this.updateSelection(i,"rowDataChanged"),o&&m.sortRowNodesByOrder(this.rootNode.allLeafChildren,o),s}isRowCountReady(){return this.rowCountReady}dispatchRowDataUpdateStartedEvent(e){const o={type:j.EVENT_ROW_DATA_UPDATE_STARTED,firstRowData:e?.length?e[0]:null};this.eventService.dispatchEvent(o)}updateSelection(e,o){const s=e.length>0;if(s&&this.selectionService.setNodesSelected({newValue:!1,nodes:e,suppressFinishActions:!0,source:o}),this.selectionService.updateGroupsFromChildrenSelections(o),s){const i={type:j.EVENT_SELECTION_CHANGED,source:o};this.eventService.dispatchEvent(i)}}executeAdd(e,o){var s;const{add:i,addIndex:r}=e;if(m.missingOrEmpty(i))return;const n=i.map(a=>this.createNode(a,this.rootNode,D.TOP_LEVEL));if(typeof r=="number"&&r>=0){const{allLeafChildren:a}=this.rootNode,d=a.length;let l=r;if(this.gos.get("treeData")&&r>0&&d>0){for(let w=0;w<d;w++)if(((s=a[w])==null?void 0:s.rowIndex)==r-1){l=w+1;break}}const p=a.slice(0,l),h=a.slice(l,a.length);this.rootNode.allLeafChildren=[...p,...n,...h]}else this.rootNode.allLeafChildren=[...this.rootNode.allLeafChildren,...n];this.rootNode.sibling&&(this.rootNode.sibling.allLeafChildren=this.rootNode.allLeafChildren),o.add=n}executeRemove(e,o,s){const{remove:i}=e;if(m.missingOrEmpty(i))return;const r={};i.forEach(n=>{const a=this.lookupRowNode(n);a&&(a.isSelected()&&s.push(a),a.clearRowTopAndRowIndex(),r[a.id]=!0,delete this.allNodesMap[a.id],o.remove.push(a))}),this.rootNode.allLeafChildren=this.rootNode.allLeafChildren.filter(n=>!r[n.id]),this.rootNode.sibling&&(this.rootNode.sibling.allLeafChildren=this.rootNode.allLeafChildren)}executeUpdate(e,o,s){const{update:i}=e;m.missingOrEmpty(i)||i.forEach(r=>{const n=this.lookupRowNode(r);n&&(n.updateData(r),!n.selectable&&n.isSelected()&&s.push(n),this.setMasterForRow(n,r,D.TOP_LEVEL,!1),o.update.push(n))})}lookupRowNode(e){const o=this.gos.getCallback("getRowId");let s;if(o){const i=o({data:e,level:0});if(s=this.allNodesMap[i],!s)return console.error(`AG Grid: could not find row id=${i}, data item was not found for this id`),null}else if(s=this.rootNode.allLeafChildren.find(i=>i.data===e),!s)return console.error("AG Grid: could not find data item as object was not found",e),console.error("Consider using getRowId to help the Grid find matching row data"),null;return s||null}createNode(e,o,s){const i=new se(this.beans);i.group=!1,this.setMasterForRow(i,e,s,!0);const r=this.gos.get("suppressParentsInRowNodes");return o&&!r&&(i.parent=o),i.level=s,i.setDataAndId(e,this.nextId.toString()),this.allNodesMap[i.id]&&console.warn(`AG Grid: duplicate node id '${i.id}' detected from getRowId callback, this could cause issues in your grid.`),this.allNodesMap[i.id]=i,this.nextId++,i}setMasterForRow(e,o,s,i){if(this.gos.get("treeData"))e.setMaster(!1),i&&(e.expanded=!1);else{if(this.gos.get("masterDetail")){const a=this.gos.get("isRowMaster");a?e.setMaster(a(o)):e.setMaster(!0)}else e.setMaster(!1);if(i){const a=this.columnModel.getRowGroupColumns(),d=a?a.length:0,l=s+d;e.expanded=e.master?this.isExpanded(l):!1}}}isExpanded(e){const o=this.gos.get("groupDefaultExpanded");return o===-1?!0:e<o}};L.TOP_LEVEL=0,L.ROOT_NODE_ID="ROOT_NODE_ID";var ie=L,R=class extends ee{constructor(){super(...arguments),this.onRowHeightChanged_debounced=A.debounce(this.onRowHeightChanged.bind(this),100),this.rowsToDisplay=[],this.hasStarted=!1,this.shouldSkipSettingDataOnStart=!1,this.isRefreshingModel=!1,this.rowCountReady=!1}init(){const t=this.refreshModel.bind(this,{step:c.EVERYTHING}),e=!this.gos.get("suppressAnimationFrame"),o=this.refreshModel.bind(this,{step:c.EVERYTHING,afterColumnsChanged:!0,keepRenderedRows:!0,animate:e});this.addManagedListener(this.eventService,f.EVENT_NEW_COLUMNS_LOADED,o),this.addManagedListener(this.eventService,f.EVENT_COLUMN_ROW_GROUP_CHANGED,t),this.addManagedListener(this.eventService,f.EVENT_COLUMN_VALUE_CHANGED,this.onValueChanged.bind(this)),this.addManagedListener(this.eventService,f.EVENT_COLUMN_PIVOT_CHANGED,this.refreshModel.bind(this,{step:c.PIVOT})),this.addManagedListener(this.eventService,f.EVENT_FILTER_CHANGED,this.onFilterChanged.bind(this)),this.addManagedListener(this.eventService,f.EVENT_SORT_CHANGED,this.onSortChanged.bind(this)),this.addManagedListener(this.eventService,f.EVENT_COLUMN_PIVOT_MODE_CHANGED,t),this.addManagedListener(this.eventService,f.EVENT_GRID_STYLES_CHANGED,this.onGridStylesChanges.bind(this)),this.addManagedListener(this.eventService,f.EVENT_GRID_READY,()=>this.onGridReady()),this.addPropertyListeners(),this.rootNode=new Y(this.beans),this.nodeManager=new ie(this.rootNode,this.gos,this.eventService,this.columnModel,this.selectionService,this.beans)}addPropertyListeners(){const t=new Set(["treeData","masterDetail"]),e=new Set(["suppressParentsInRowNodes","groupDefaultExpanded","groupAllowUnbalanced","initialGroupOrderComparator","groupHideOpenParents","groupDisplayType"]),o=new Set(["excludeChildrenWhenTreeDataFiltering"]),s=new Set(["removePivotHeaderRowWhenSingleValueColumn","pivotRowTotals","pivotColumnGroupTotals","suppressExpandablePivotGroups"]),i=new Set(["getGroupRowAgg","alwaysAggregateAtRootLevel","groupIncludeTotalFooter","suppressAggFilteredOnly","grandTotalRow"]),r=new Set(["postSortRows","groupDisplayType","accentedSort"]),n=new Set([]),a=new Set(["groupRemoveSingleChildren","groupRemoveLowestSingleChildren","groupIncludeFooter","groupTotalRow"]),d=[...t,...e,...o,...s,...s,...i,...r,...n,...a];this.addManagedPropertyListeners(d,l=>{var g;const p=(g=l.changeSet)==null?void 0:g.properties;if(!p)return;const h=w=>p.some(S=>w.has(S));if(h(t)){this.setRowData(this.rootNode.allLeafChildren.map(w=>w.data));return}if(h(e)){this.refreshModel({step:c.EVERYTHING});return}if(h(o)){this.refreshModel({step:c.FILTER});return}if(h(s)){this.refreshModel({step:c.PIVOT});return}if(h(i)){this.refreshModel({step:c.AGGREGATE});return}if(h(r)){this.refreshModel({step:c.SORT});return}if(h(n)){this.refreshModel({step:c.FILTER_AGGREGATES});return}h(a)&&this.refreshModel({step:c.MAP})}),this.addManagedPropertyListener("rowHeight",()=>this.resetRowHeights())}start(){this.hasStarted=!0,this.shouldSkipSettingDataOnStart?this.dispatchUpdateEventsAndRefresh():this.setInitialData()}setInitialData(){const t=this.gos.get("rowData");t&&(this.shouldSkipSettingDataOnStart=!0,this.setRowData(t))}ensureRowHeightsValid(t,e,o,s){let i,r=!1;do{i=!1;const n=this.getRowIndexAtPixel(t),a=this.getRowIndexAtPixel(e),d=Math.max(n,o),l=Math.min(a,s);for(let g=d;g<=l;g++){const p=this.getRow(g);if(p.rowHeightEstimated){const h=this.gos.getRowHeightForNode(p);p.setRowHeight(h.height),i=!0,r=!0}}i&&this.setRowTopAndRowIndex()}while(i);return r}setRowTopAndRowIndex(){const t=this.environment.getDefaultRowHeight();let e=0;const o=new Set,s=this.gos.isDomLayout("normal");for(let i=0;i<this.rowsToDisplay.length;i++){const r=this.rowsToDisplay[i];if(r.id!=null&&o.add(r.id),r.rowHeight==null){const n=this.gos.getRowHeightForNode(r,s,t);r.setRowHeight(n.height,n.estimated)}r.setRowTop(e),r.setRowIndex(i),e+=r.rowHeight}return o}clearRowTopAndRowIndex(t,e){const o=t.isActive(),s=r=>{r&&r.id!=null&&!e.has(r.id)&&r.clearRowTopAndRowIndex()},i=r=>{if(s(r),s(r.detailNode),s(r.sibling),r.hasChildren()&&r.childrenAfterGroup){const n=r.level==-1;o&&!n&&!r.expanded||r.childrenAfterGroup.forEach(i)}};i(this.rootNode)}ensureRowsAtPixel(t,e,o=0){const s=this.getRowIndexAtPixel(e),i=this.getRow(s),r=!this.gos.get("suppressAnimationFrame");return i===t[0]?!1:(t.forEach(n=>{A.removeFromArray(this.rootNode.allLeafChildren,n)}),t.forEach((n,a)=>{A.insertIntoArray(this.rootNode.allLeafChildren,n,Math.max(s+o,0)+a)}),this.refreshModel({step:c.EVERYTHING,keepRenderedRows:!0,keepEditingRows:!0,animate:r}),!0)}highlightRowAtPixel(t,e){const o=e!=null?this.getRowIndexAtPixel(e):null,s=o!=null?this.getRow(o):null;if(!s||!t||s===t||e==null){this.lastHighlightedRow&&(this.lastHighlightedRow.setHighlighted(null),this.lastHighlightedRow=null);return}const i=this.getHighlightPosition(e,s);this.lastHighlightedRow&&this.lastHighlightedRow!==s&&(this.lastHighlightedRow.setHighlighted(null),this.lastHighlightedRow=null),s.setHighlighted(i),this.lastHighlightedRow=s}getHighlightPosition(t,e){if(!e){const i=this.getRowIndexAtPixel(t);if(e=this.getRow(i||0),!e)return I.Below}const{rowTop:o,rowHeight:s}=e;return t-o<s/2?I.Above:I.Below}getLastHighlightedRowNode(){return this.lastHighlightedRow}isLastRowIndexKnown(){return!0}getRowCount(){return this.rowsToDisplay?this.rowsToDisplay.length:0}getTopLevelRowCount(){if(this.rowsToDisplay&&this.rowsToDisplay[0]===this.rootNode)return 1;const e=this.rootNode.childrenAfterAggFilter;return e?e.length:0}getTopLevelRowDisplayedIndex(t){if(this.rowsToDisplay&&this.rowsToDisplay[0]===this.rootNode)return t;let o=this.rootNode.childrenAfterSort[t];if(this.gos.get("groupHideOpenParents"))for(;o.expanded&&o.childrenAfterSort&&o.childrenAfterSort.length>0;)o=o.childrenAfterSort[0];return o.rowIndex}getRowBounds(t){if(A.missing(this.rowsToDisplay))return null;const e=this.rowsToDisplay[t];return e?{rowTop:e.rowTop,rowHeight:e.rowHeight}:null}onRowGroupOpened(){const t=this.gos.isAnimateRows();this.refreshModel({step:c.MAP,keepRenderedRows:!0,animate:t})}onFilterChanged(t){if(t.afterDataChange)return;const e=this.gos.isAnimateRows(),s=t.columns.length===0||t.columns.some(i=>i.isPrimary())?c.FILTER:c.FILTER_AGGREGATES;this.refreshModel({step:s,keepRenderedRows:!0,animate:e})}onSortChanged(){const t=this.gos.isAnimateRows();this.refreshModel({step:c.SORT,keepRenderedRows:!0,animate:t,keepEditingRows:!0})}getType(){return"clientSide"}onValueChanged(){this.columnModel.isPivotActive()?this.refreshModel({step:c.PIVOT}):this.refreshModel({step:c.AGGREGATE})}createChangePath(t){const e=A.missingOrEmpty(t),o=new te(!1,this.rootNode);return(e||this.gos.get("treeData"))&&o.setInactive(),o}isSuppressModelUpdateAfterUpdateTransaction(t){if(!this.gos.get("suppressModelUpdateAfterUpdateTransaction")||t.rowNodeTransactions==null)return!1;const e=t.rowNodeTransactions.filter(s=>s.add!=null&&s.add.length>0||s.remove!=null&&s.remove.length>0);return e==null||e.length==0}buildRefreshModelParams(t){let e=c.EVERYTHING;const o={everything:c.EVERYTHING,group:c.EVERYTHING,filter:c.FILTER,map:c.MAP,aggregate:c.AGGREGATE,sort:c.SORT,pivot:c.PIVOT};if(A.exists(t)&&(e=o[t]),A.missing(e)){console.error(`AG Grid: invalid step ${t}, available steps are ${Object.keys(o).join(", ")}`);return}const s=!this.gos.get("suppressAnimationFrame");return{step:e,keepRenderedRows:!0,keepEditingRows:!0,animate:s}}refreshModel(t){if(!this.hasStarted||this.isRefreshingModel||this.columnModel.shouldRowModelIgnoreRefresh())return;let e=typeof t=="object"&&"step"in t?t:this.buildRefreshModelParams(t);if(!e||this.isSuppressModelUpdateAfterUpdateTransaction(e))return;const o=this.createChangePath(e.rowNodeTransactions);switch(this.isRefreshingModel=!0,e.step){case c.EVERYTHING:this.doRowGrouping(e.rowNodeTransactions,e.rowNodeOrder,o,!!e.afterColumnsChanged);case c.FILTER:this.doFilter(o);case c.PIVOT:this.doPivot(o);case c.AGGREGATE:this.doAggregate(o);case c.FILTER_AGGREGATES:this.doFilterAggregates(o);case c.SORT:this.doSort(e.rowNodeTransactions,o);case c.MAP:this.doRowsToDisplay()}const s=this.setRowTopAndRowIndex();this.clearRowTopAndRowIndex(o,s),this.isRefreshingModel=!1;const i={type:f.EVENT_MODEL_UPDATED,animate:e.animate,keepRenderedRows:e.keepRenderedRows,newData:e.newData,newPage:!1,keepUndoRedoStack:e.keepUndoRedoStack};this.eventService.dispatchEvent(i)}isEmpty(){const t=A.missing(this.rootNode.allLeafChildren)||this.rootNode.allLeafChildren.length===0;return A.missing(this.rootNode)||t||!this.columnModel.isReady()}isRowsToRender(){return A.exists(this.rowsToDisplay)&&this.rowsToDisplay.length>0}getNodesInRangeForSelection(t,e){let o=!e,s=!1;const i=[],r=this.gos.get("groupSelectsChildren");return this.forEachNodeAfterFilterAndSort(n=>{if(s)return;if(o&&(n===e||n===t)&&(s=!0,n.group&&r)){i.push(...n.allLeafChildren);return}if(!o){if(n!==e&&n!==t)return;o=!0}if(!n.group||!r){i.push(n);return}}),i}setDatasource(t){console.error("AG Grid: should never call setDatasource on clientSideRowController")}getTopLevelNodes(){return this.rootNode?this.rootNode.childrenAfterGroup:null}getRootNode(){return this.rootNode}getRow(t){return this.rowsToDisplay[t]}isRowPresent(t){return this.rowsToDisplay.indexOf(t)>=0}getRowIndexAtPixel(t){if(this.isEmpty()||this.rowsToDisplay.length===0)return-1;let e=0,o=this.rowsToDisplay.length-1;if(t<=0)return 0;if(A.last(this.rowsToDisplay).rowTop<=t)return this.rowsToDisplay.length-1;let i=-1,r=-1;for(;;){const n=Math.floor((e+o)/2),a=this.rowsToDisplay[n];if(this.isRowInPixel(a,t)||(a.rowTop<t?e=n+1:a.rowTop>t&&(o=n-1),i===e&&r===o))return n;i=e,r=o}}isRowInPixel(t,e){const o=t.rowTop,s=t.rowTop+t.rowHeight;return o<=e&&s>e}forEachLeafNode(t){this.rootNode.allLeafChildren&&this.rootNode.allLeafChildren.forEach((e,o)=>t(e,o))}forEachNode(t,e=!1){this.recursivelyWalkNodesAndCallback({nodes:[...this.rootNode.childrenAfterGroup||[]],callback:t,recursionType:0,index:0,includeFooterNodes:e})}forEachNodeAfterFilter(t,e=!1){this.recursivelyWalkNodesAndCallback({nodes:[...this.rootNode.childrenAfterAggFilter||[]],callback:t,recursionType:1,index:0,includeFooterNodes:e})}forEachNodeAfterFilterAndSort(t,e=!1){this.recursivelyWalkNodesAndCallback({nodes:[...this.rootNode.childrenAfterSort||[]],callback:t,recursionType:2,index:0,includeFooterNodes:e})}forEachPivotNode(t,e=!1){this.recursivelyWalkNodesAndCallback({nodes:[this.rootNode],callback:t,recursionType:3,index:0,includeFooterNodes:e})}recursivelyWalkNodesAndCallback(t){const{nodes:e,callback:o,recursionType:s,includeFooterNodes:i}=t;let{index:r}=t;const n=a=>{var d;const l=(d=e[0])==null?void 0:d.parent;if(!l)return;const g=i&&this.gos.getGrandTotalRow(),p=this.gos.getGroupTotalRowCallback(),h=i&&p({node:l});if(l===this.rootNode){g===a&&(l.createFooter(),o(l.sibling,r++));return}h===a&&(l.createFooter(),o(l.sibling,r++))};n("top");for(let a=0;a<e.length;a++){const d=e[a];if(o(d,r++),d.hasChildren()&&!d.footer){let l=null;switch(s){case 0:l=d.childrenAfterGroup;break;case 1:l=d.childrenAfterAggFilter;break;case 2:l=d.childrenAfterSort;break;case 3:l=d.leafGroup?null:d.childrenAfterSort;break}l&&(r=this.recursivelyWalkNodesAndCallback({nodes:[...l],callback:o,recursionType:s,index:r,includeFooterNodes:i}))}}return n("bottom"),r}doAggregate(t){var e;(e=this.aggregationStage)==null||e.execute({rowNode:this.rootNode,changedPath:t})}doFilterAggregates(t){this.filterAggregatesStage?this.filterAggregatesStage.execute({rowNode:this.rootNode,changedPath:t}):this.rootNode.childrenAfterAggFilter=this.rootNode.childrenAfterFilter}expandOrCollapseAll(t){const e=this.gos.get("treeData"),o=this.columnModel.isPivotActive(),s=n=>{n&&n.forEach(a=>{const d=()=>{a.expanded=t,s(a.childrenAfterGroup)};if(e){A.exists(a.childrenAfterGroup)&&d();return}if(o){!a.leafGroup&&d();return}a.group&&d()})};this.rootNode&&s(this.rootNode.childrenAfterGroup),this.refreshModel({step:c.MAP});const i=t?"expandAll":"collapseAll",r={type:f.EVENT_EXPAND_COLLAPSE_ALL,source:i};this.eventService.dispatchEvent(r)}doSort(t,e){this.sortStage.execute({rowNode:this.rootNode,rowNodeTransactions:t,changedPath:e})}doRowGrouping(t,e,o,s){if(this.groupStage){if(t?this.groupStage.execute({rowNode:this.rootNode,rowNodeTransactions:t,rowNodeOrder:e,changedPath:o}):this.groupStage.execute({rowNode:this.rootNode,changedPath:o,afterColumnsChanged:s}),this.gos.get("groupSelectsChildren")&&this.selectionService.updateGroupsFromChildrenSelections("rowGroupChanged",o)){const r={type:f.EVENT_SELECTION_CHANGED,source:"rowGroupChanged"};this.eventService.dispatchEvent(r)}}else this.rootNode.childrenAfterGroup=this.rootNode.allLeafChildren,this.rootNode.sibling&&(this.rootNode.sibling.childrenAfterGroup=this.rootNode.childrenAfterGroup),this.rootNode.updateHasChildren();this.nodeManager.isRowCountReady()&&(this.rowCountReady=!0,this.eventService.dispatchEventOnce({type:f.EVENT_ROW_COUNT_READY}))}doFilter(t){this.filterStage.execute({rowNode:this.rootNode,changedPath:t})}doPivot(t){var e;(e=this.pivotStage)==null||e.execute({rowNode:this.rootNode,changedPath:t})}getCopyOfNodesMap(){return this.nodeManager.getCopyOfNodesMap()}getRowNode(t){if(typeof t=="string"&&t.indexOf(Y.ID_PREFIX_ROW_GROUP)==0){let o;return this.forEachNode(s=>{s.id===t&&(o=s)}),o}return this.nodeManager.getRowNode(t)}setRowData(t){this.selectionService.reset("rowDataChanged"),this.nodeManager.setRowData(t),this.hasStarted&&this.dispatchUpdateEventsAndRefresh()}dispatchUpdateEventsAndRefresh(){const t={type:f.EVENT_ROW_DATA_UPDATED};this.eventService.dispatchEvent(t),this.refreshModel({step:c.EVERYTHING,newData:!0})}batchUpdateRowData(t,e){if(this.applyAsyncTransactionsTimeout==null){this.rowDataTransactionBatch=[];const o=this.gos.getAsyncTransactionWaitMillis();this.applyAsyncTransactionsTimeout=window.setTimeout(()=>{this.executeBatchUpdateRowData()},o)}this.rowDataTransactionBatch.push({rowDataTransaction:t,callback:e})}flushAsyncTransactions(){this.applyAsyncTransactionsTimeout!=null&&(clearTimeout(this.applyAsyncTransactionsTimeout),this.executeBatchUpdateRowData())}executeBatchUpdateRowData(){this.valueCache.onDataChanged();const t=[],e=[];let o=!1;if(this.rowDataTransactionBatch&&this.rowDataTransactionBatch.forEach(s=>{const i=this.nodeManager.updateRowData(s.rowDataTransaction,void 0);e.push(i),s.callback&&t.push(s.callback.bind(null,i)),typeof s.rowDataTransaction.addIndex=="number"&&(o=!0)}),this.commonUpdateRowData(e,void 0,o),t.length>0&&window.setTimeout(()=>{t.forEach(s=>s())},0),e.length>0){const s={type:f.EVENT_ASYNC_TRANSACTIONS_FLUSHED,results:e};this.eventService.dispatchEvent(s)}this.rowDataTransactionBatch=null,this.applyAsyncTransactionsTimeout=void 0}updateRowData(t,e){this.valueCache.onDataChanged();const o=this.nodeManager.updateRowData(t,e),s=typeof t.addIndex=="number";return this.commonUpdateRowData([o],e,s),o}createRowNodeOrder(){if(this.gos.get("suppressMaintainUnsortedOrder"))return;const e={};if(this.rootNode&&this.rootNode.allLeafChildren)for(let o=0;o<this.rootNode.allLeafChildren.length;o++){const s=this.rootNode.allLeafChildren[o];e[s.id]=o}return e}commonUpdateRowData(t,e,o){if(!this.hasStarted)return;const s=!this.gos.get("suppressAnimationFrame");o&&(e=this.createRowNodeOrder());const i={type:f.EVENT_ROW_DATA_UPDATED};this.eventService.dispatchEvent(i),this.refreshModel({step:c.EVERYTHING,rowNodeTransactions:t,rowNodeOrder:e,keepRenderedRows:!0,keepEditingRows:!0,animate:s})}doRowsToDisplay(){this.rowsToDisplay=this.flattenStage.execute({rowNode:this.rootNode})}onRowHeightChanged(){this.refreshModel({step:c.MAP,keepRenderedRows:!0,keepEditingRows:!0,keepUndoRedoStack:!0})}onRowHeightChangedDebounced(){this.onRowHeightChanged_debounced()}resetRowHeights(){const t=this.resetRowHeightsForAllRowNodes();this.rootNode.setRowHeight(this.rootNode.rowHeight,!0),this.rootNode.sibling&&this.rootNode.sibling.setRowHeight(this.rootNode.sibling.rowHeight,!0),t&&this.onRowHeightChanged()}resetRowHeightsForAllRowNodes(){let t=!1;return this.forEachNode(e=>{e.setRowHeight(e.rowHeight,!0);const o=e.detailNode;o&&o.setRowHeight(o.rowHeight,!0),e.sibling&&e.sibling.setRowHeight(e.sibling.rowHeight,!0),t=!0}),t}onGridStylesChanges(){this.columnModel.isAutoRowHeightActive()||this.resetRowHeights()}onGridReady(){this.hasStarted||this.setInitialData()}isRowDataLoaded(){return this.rowCountReady}};u([T("columnModel")],R.prototype,"columnModel",2),u([T("selectionService")],R.prototype,"selectionService",2),u([T("valueCache")],R.prototype,"valueCache",2),u([T("beans")],R.prototype,"beans",2),u([T("filterStage")],R.prototype,"filterStage",2),u([T("sortStage")],R.prototype,"sortStage",2),u([T("flattenStage")],R.prototype,"flattenStage",2),u([G("groupStage")],R.prototype,"groupStage",2),u([G("aggregationStage")],R.prototype,"aggregationStage",2),u([G("pivotStage")],R.prototype,"pivotStage",2),u([G("filterAggregatesStage")],R.prototype,"filterAggregatesStage",2),u([oe],R.prototype,"init",1),R=u([Z("rowModel")],R);import{Autowired as re,Bean as ne,BeanStub as ae}from"@ag-grid-community/core";var M=class extends ae{execute(t){const{changedPath:e}=t;this.filterService.filter(e)}};u([re("filterService")],M.prototype,"filterService",2),M=u([ne("filterStage")],M);import{_ as $,Autowired as K,Bean as le,BeanStub as de}from"@ag-grid-community/core";var N=class extends de{execute(t){const e=this.sortController.getSortOptions(),o=$.exists(e)&&e.length>0,s=o&&$.exists(t.rowNodeTransactions)&&this.gos.get("deltaSort"),i=e.some(r=>this.gos.isColumnsSortingCoupledToGroup()?r.column.isPrimary()&&r.column.isRowGroupActive():!!r.column.getColDef().showRowGroup);this.sortService.sort(e,o,s,t.rowNodeTransactions,t.changedPath,i)}};u([K("sortService")],N.prototype,"sortService",2),u([K("sortController")],N.prototype,"sortController",2),N=u([le("sortStage")],N);import{_,Autowired as he,Bean as ce,BeanStub as ue,RowNode as pe}from"@ag-grid-community/core";var P=class extends ue{execute(t){const e=t.rowNode,o=[],s=this.beans.columnModel.isPivotMode(),i=s&&e.leafGroup,r=i?[e]:e.childrenAfterSort,n=this.getFlattenDetails();this.recursivelyAddToRowsToDisplay(n,r,o,s,0);const a=o.length>0;if(!i&&a&&n.grandTotalRow){e.createFooter();const l=n.grandTotalRow==="top";this.addRowNodeToRowsToDisplay(n,e.sibling,o,0,l)}return o}getFlattenDetails(){const t=this.gos.get("groupRemoveSingleChildren");return{groupRemoveLowestSingleChildren:!t&&this.gos.get("groupRemoveLowestSingleChildren"),groupRemoveSingleChildren:t,isGroupMultiAutoColumn:this.gos.isGroupMultiAutoColumn(),hideOpenParents:this.gos.get("groupHideOpenParents"),grandTotalRow:this.gos.getGrandTotalRow(),groupTotalRow:this.gos.getGroupTotalRowCallback()}}recursivelyAddToRowsToDisplay(t,e,o,s,i){if(!_.missingOrEmpty(e))for(let r=0;r<e.length;r++){const n=e[r],a=n.hasChildren(),d=s&&!a,l=t.groupRemoveSingleChildren&&a&&n.childrenAfterGroup.length===1,g=t.groupRemoveLowestSingleChildren&&a&&n.leafGroup&&n.childrenAfterGroup.length===1,p=s&&n.leafGroup,h=t.hideOpenParents&&n.expanded&&!n.master&&!p;if(!d&&!h&&!l&&!g&&this.addRowNodeToRowsToDisplay(t,n,o,i),!(s&&n.leafGroup)){if(a){const S=l||g;if(n.expanded||S){const y=t.groupTotalRow({node:n});y||n.destroyFooter();const v=S?i:i+1;y==="top"&&(n.createFooter(),this.addRowNodeToRowsToDisplay(t,n.sibling,o,v)),this.recursivelyAddToRowsToDisplay(t,n.childrenAfterSort,o,s,v),y==="bottom"&&(n.createFooter(),this.addRowNodeToRowsToDisplay(t,n.sibling,o,v))}}else if(n.master&&n.expanded){const S=this.createDetailNode(n);this.addRowNodeToRowsToDisplay(t,S,o,i)}}}}addRowNodeToRowsToDisplay(t,e,o,s,i){i?o.unshift(e):o.push(e),e.setUiLevel(t.isGroupMultiAutoColumn?0:s)}createDetailNode(t){if(_.exists(t.detailNode))return t.detailNode;const e=new pe(this.beans);return e.detail=!0,e.selectable=!1,e.parent=t,_.exists(t.id)&&(e.id="detail_"+t.id),e.data=t.data,e.level=t.level+1,t.detailNode=e,e}};u([he("beans")],P.prototype,"beans",2),P=u([ce("flattenStage")],P);import{_ as H,Autowired as Q,Bean as ge,BeanStub as fe}from"@ag-grid-community/core";var E=class extends fe{sort(t,e,o,s,i,r){const n=this.gos.get("groupMaintainOrder"),a=this.columnModel.getAllGridColumns().some(h=>h.isRowGroupActive());let d={};o&&s&&(d=this.calculateDirtyNodes(s));const l=this.columnModel.isPivotMode(),g=this.gos.getCallback("postSortRows"),p=h=>{var w;this.pullDownGroupDataForHideOpenParents(h.childrenAfterAggFilter,!0);const S=l&&h.leafGroup;if(n&&a&&!h.leafGroup&&!r){const v=(w=this.columnModel.getRowGroupColumns())==null?void 0:w[h.level+1],X=v?.getSort()===null,V=h.childrenAfterAggFilter.slice(0);if(h.childrenAfterSort&&!X){const x={};h.childrenAfterSort.forEach((F,O)=>{x[F.id]=O}),V.sort((F,O)=>{var B,W;return((B=x[F.id])!=null?B:0)-((W=x[O.id])!=null?W:0)})}h.childrenAfterSort=V}else!e||S?h.childrenAfterSort=h.childrenAfterAggFilter.slice(0):o?h.childrenAfterSort=this.doDeltaSort(h,d,i,t):h.childrenAfterSort=this.rowNodeSorter.doFullSort(h.childrenAfterAggFilter,t);if(h.sibling&&(h.sibling.childrenAfterSort=h.childrenAfterSort),this.updateChildIndexes(h),g){const v={nodes:h.childrenAfterSort};g(v)}};i&&i.forEachChangedNodeDepthFirst(p),this.updateGroupDataForHideOpenParents(i)}calculateDirtyNodes(t){const e={},o=s=>{s&&s.forEach(i=>e[i.id]=!0)};return t&&t.forEach(s=>{o(s.add),o(s.update),o(s.remove)}),e}doDeltaSort(t,e,o,s){const i=t.childrenAfterAggFilter,r=t.childrenAfterSort;if(!r)return this.rowNodeSorter.doFullSort(i,s);const n={},a=[];i.forEach(p=>{e[p.id]||!o.canSkip(p)?a.push(p):n[p.id]=!0});const d=r.filter(p=>n[p.id]),l=(p,h)=>({currentPos:h,rowNode:p}),g=a.map(l).sort((p,h)=>this.rowNodeSorter.compareRowNodes(s,p,h));return this.mergeSortedArrays(s,g,d.map(l)).map(({rowNode:p})=>p)}mergeSortedArrays(t,e,o){const s=[];let i=0,r=0;for(;i<e.length&&r<o.length;)this.rowNodeSorter.compareRowNodes(t,e[i],o[r])<0?s.push(e[i++]):s.push(o[r++]);for(;i<e.length;)s.push(e[i++]);for(;r<o.length;)s.push(o[r++]);return s}updateChildIndexes(t){if(H.missing(t.childrenAfterSort))return;const e=t.childrenAfterSort;for(let o=0;o<e.length;o++){const s=e[o],i=o===0,r=o===t.childrenAfterSort.length-1;s.setFirstChild(i),s.setLastChild(r),s.setChildIndex(o)}}updateGroupDataForHideOpenParents(t){if(!this.gos.get("groupHideOpenParents"))return;if(this.gos.get("treeData"))return H.warnOnce("The property hideOpenParents dose not work with Tree Data. This is because Tree Data has values at the group level, it doesn't make sense to hide them."),!1;const e=o=>{this.pullDownGroupDataForHideOpenParents(o.childrenAfterSort,!1),o.childrenAfterSort.forEach(s=>{s.hasChildren()&&e(s)})};t&&t.executeFromRootNode(o=>e(o))}pullDownGroupDataForHideOpenParents(t,e){!this.gos.get("groupHideOpenParents")||H.missing(t)||t.forEach(o=>{this.columnModel.getGroupDisplayColumns().forEach(i=>{const r=i.getColDef().showRowGroup;if(typeof r!="string"){console.error("AG Grid: groupHideOpenParents only works when specifying specific columns for colDef.showRowGroup");return}const n=r,a=this.columnModel.getPrimaryColumn(n);if(a!==o.rowGroupColumn)if(e)o.setGroupValue(i.getId(),void 0);else{const l=o.getFirstChildOfFirstChild(a);l&&o.setGroupValue(i.getId(),l.key)}})})}};u([Q("columnModel")],E.prototype,"columnModel",2),u([Q("rowNodeSorter")],E.prototype,"rowNodeSorter",2),E=u([ge("sortService")],E);import{Autowired as Re,Bean as we,BeanStub as Ae}from"@ag-grid-community/core";var b=class extends Ae{filter(t){const e=this.filterManager.isChildFilterPresent();this.filterNodes(e,t)}filterNodes(t,e){const o=(s,i)=>{s.hasChildren()&&t&&!i?s.childrenAfterFilter=s.childrenAfterGroup.filter(r=>{const n=r.childrenAfterFilter&&r.childrenAfterFilter.length>0,a=r.data&&this.filterManager.doesRowPassFilter({rowNode:r});return n||a}):s.childrenAfterFilter=s.childrenAfterGroup,s.sibling&&(s.sibling.childrenAfterFilter=s.childrenAfterFilter)};if(this.doingTreeDataFiltering()){const s=(r,n)=>{if(r.childrenAfterGroup)for(let a=0;a<r.childrenAfterGroup.length;a++){const d=r.childrenAfterGroup[a],l=n||this.filterManager.doesRowPassFilter({rowNode:d});d.childrenAfterGroup?s(r.childrenAfterGroup[a],l):o(d,l)}o(r,n)},i=r=>s(r,!1);e.executeFromRootNode(i)}else{const s=i=>o(i,!1);e.forEachChangedNodeDepthFirst(s,!0)}}doingTreeDataFiltering(){return this.gos.get("treeData")&&!this.gos.get("excludeChildrenWhenTreeDataFiltering")}};u([Re("filterManager")],b.prototype,"filterManager",2),b=u([we("filterService")],b);import{Autowired as k,Bean as Se,BeanStub as ve,PostConstruct as Te,_ as U}from"@ag-grid-community/core";var C=class extends ve{postConstruct(){this.rowModel.getType()==="clientSide"&&(this.clientSideRowModel=this.rowModel,this.addManagedPropertyListener("rowData",()=>this.onRowDataUpdated()))}isActive(){const t=this.gos.exists("getRowId");return this.gos.get("resetRowDataOnUpdate")?!1:t}setRowData(t){const e=this.createTransactionForRowData(t);if(!e)return;const[o,s]=e;this.clientSideRowModel.updateRowData(o,s)}createTransactionForRowData(t){if(U.missing(this.clientSideRowModel)){console.error("AG Grid: ImmutableService only works with ClientSideRowModel");return}const e=this.gos.getCallback("getRowId");if(e==null){console.error("AG Grid: ImmutableService requires getRowId() callback to be implemented, your row data needs IDs!");return}const o={remove:[],update:[],add:[]},s=this.clientSideRowModel.getCopyOfNodesMap(),r=this.gos.get("suppressMaintainUnsortedOrder")?void 0:{};return U.exists(t)&&t.forEach((n,a)=>{const d=e({data:n,level:0}),l=s[d];r&&(r[d]=a),l?(l.data!==n&&o.update.push(n),s[d]=void 0):o.add.push(n)}),U.iterateObject(s,(n,a)=>{a&&o.remove.push(a.data)}),[o,r]}onRowDataUpdated(){const t=this.gos.get("rowData");t&&(this.isActive()?this.setRowData(t):(this.selectionService.reset("rowDataChanged"),this.clientSideRowModel.setRowData(t)))}};u([k("rowModel")],C.prototype,"rowModel",2),u([k("rowRenderer")],C.prototype,"rowRenderer",2),u([k("selectionService")],C.prototype,"selectionService",2),u([Te],C.prototype,"postConstruct",1),C=u([Se("immutableService")],C);var Ce="31.3.2",me={version:Ce,moduleName:J.ClientSideRowModelModule,rowModel:"clientSide",beans:[R,M,N,P,E,b,C]};export{me as ClientSideRowModelModule};
