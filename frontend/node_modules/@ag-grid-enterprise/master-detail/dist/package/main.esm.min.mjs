var h=Object.defineProperty,w=Object.getOwnPropertyDescriptor,p=Object.getOwnPropertySymbols,D=Object.prototype.hasOwnProperty,G=Object.prototype.propertyIsEnumerable,m=(t,e,i)=>e in t?h(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i,R=(t,e)=>{for(var i in e||(e={}))D.call(e,i)&&m(t,i,e[i]);if(p)for(var i of p(e))G.call(e,i)&&m(t,i,e[i]);return t},l=(t,e,i,s)=>{for(var r=s>1?void 0:s?w(e,i):e,a=t.length-1,o;a>=0;a--)(o=t[a])&&(r=(s?o(e,i,r):o(r))||r);return s&&r&&h(e,i,r),r};import{ModuleNames as v}from"@ag-grid-community/core";import{EnterpriseCoreModule as _}from"@ag-grid-enterprise/core";import{Component as C,RefSelector as O,_ as u,ModuleRegistry as T,createGrid as y,ColumnApi as S}from"@ag-grid-community/core";import{Autowired as g,BeanStub as I,Events as P,_ as E}from"@ag-grid-community/core";var n=class extends I{constructor(){super(...arguments),this.loadRowDataVersion=0}init(t,e){this.params=e,this.comp=t,e.pinned==null&&(this.setAutoHeightClasses(),this.setupRefreshStrategy(),this.addThemeToDetailGrid(),this.createDetailGrid(),this.loadRowData(),this.addManagedListener(this.eventService,P.EVENT_FULL_WIDTH_ROW_FOCUSED,this.onFullWidthRowFocused.bind(this)))}onFullWidthRowFocused(t){const e=this.params,i={rowIndex:e.node.rowIndex,rowPinned:e.node.rowPinned},s={rowIndex:t.rowIndex,rowPinned:t.rowPinned};this.rowPositionUtils.sameRow(i,s)&&this.focusService.focusInto(this.comp.getGui(),t.fromBelow)}setAutoHeightClasses(){const t=this.gos.get("detailRowAutoHeight"),e=t?"ag-details-row-auto-height":"ag-details-row-fixed-height",i=t?"ag-details-grid-auto-height":"ag-details-grid-fixed-height";this.comp.addOrRemoveCssClass(e,!0),this.comp.addOrRemoveDetailGridCssClass(i,!0)}setupRefreshStrategy(){const t=this.params.refreshStrategy;if(t=="everything"||t=="nothing"||t=="rows"){this.refreshStrategy=t;return}t!=null&&console.warn("AG Grid: invalid cellRendererParams.refreshStrategy = '"+t+"' supplied, defaulting to refreshStrategy = 'rows'."),this.refreshStrategy="rows"}addThemeToDetailGrid(){const{theme:t}=this.environment.getTheme();t&&this.comp.addOrRemoveDetailGridCssClass(t,!0)}createDetailGrid(){if(E.missing(this.params.detailGridOptions)){console.warn("AG Grid: could not find detail grid options for master detail, please set gridOptions.detailCellRendererParams.detailGridOptions");return}const t=this.gos.get("detailRowAutoHeight"),e=R({},this.params.detailGridOptions);t&&(e.domLayout="autoHeight"),this.comp.setDetailGrid(e)}registerDetailWithMaster(t,e){const i=this.params.node.id,s=this.params.api,r={id:i,api:t,columnApi:e},a=this.params.node;s.isDestroyed()||(s.addDetailGridInfo(i,r),a.detailGridInfo=r,this.addDestroyFunc(()=>{a.detailGridInfo===r&&(s.isDestroyed()||s.removeDetailGridInfo(i),a.detailGridInfo=null)}))}loadRowData(){var t,e,i;this.loadRowDataVersion++;const s=this.loadRowDataVersion;if(((t=this.params.detailGridOptions)==null?void 0:t.rowModelType)==="serverSide"){(i=(e=this.params.node.detailGridInfo)==null?void 0:e.api)==null||i.refreshServerSide({purge:!0});return}const r=this.params.getDetailRowData;if(!r){console.warn("AG Grid: could not find getDetailRowData for master / detail, please set gridOptions.detailCellRendererParams.getDetailRowData");return}const a=c=>{this.loadRowDataVersion===s&&this.comp.setRowData(c)},o={node:this.params.node,data:this.params.node.data,successCallback:a,context:this.gos.getGridCommonParams().context};r(o)}refresh(){switch(this.refreshStrategy){case"nothing":return!0;case"everything":return!1}return this.loadRowData(),!0}};l([g("rowPositionUtils")],n.prototype,"rowPositionUtils",2),l([g("focusService")],n.prototype,"focusService",2);var d=class f extends C{init(e){this.params=e,this.selectAndSetTemplate();const i={addOrRemoveCssClass:(s,r)=>this.addOrRemoveCssClass(s,r),addOrRemoveDetailGridCssClass:(s,r)=>this.eDetailGrid.classList.toggle(s,r),setDetailGrid:s=>this.setDetailGrid(s),setRowData:s=>this.setRowData(s),getGui:()=>this.eDetailGrid};this.ctrl=this.createManagedBean(new n),this.ctrl.init(i,e)}refresh(){return this.ctrl&&this.ctrl.refresh()}destroy(){super.destroy()}selectAndSetTemplate(){if(this.params.pinned){this.setTemplate('<div class="ag-details-row"></div>');return}const e=()=>{this.setTemplate(f.TEMPLATE)};if(u.missing(this.params.template))e();else if(typeof this.params.template=="string")this.setTemplate(this.params.template);else if(typeof this.params.template=="function"){const i=this.params.template,s=i(this.params);this.setTemplate(s)}else console.warn("AG Grid: detailCellRendererParams.template should be function or string"),e();this.eDetailGrid==null&&console.warn('AG Grid: reference to eDetailGrid was missing from the details template. Please add ref="eDetailGrid" to the template.')}setDetailGrid(e){if(!this.eDetailGrid)return;const i=this.context.getBean("agGridReact"),s=i?u.cloneObject(i):void 0,r=this.context.getBean("frameworkComponentWrapper"),a=this.getFrameworkOverrides(),o=y(this.eDetailGrid,e,{frameworkOverrides:a,providedBeanInstances:{agGridReact:s,frameworkComponentWrapper:r},modules:T.__getGridRegisteredModules(this.params.api.getGridId())});this.detailApi=o,this.ctrl.registerDetailWithMaster(o,new S(o)),this.addDestroyFunc(()=>{o?.destroy()})}setRowData(e){this.detailApi&&this.detailApi.setGridOption("rowData",e)}};d.TEMPLATE=`<div class="ag-details-row" role="gridcell">
            <div ref="eDetailGrid" class="ag-details-grid" role="presentation"></div>
        </div>`,l([O("eDetailGrid")],d.prototype,"eDetailGrid",2);var A=d,M="31.3.2",N={version:M,moduleName:v.MasterDetailModule,beans:[],userComponents:[{componentName:"agDetailCellRenderer",componentClass:A}],controllers:[{controllerName:"detailCellRenderer",controllerClass:n}],dependantModules:[_]};export{N as MasterDetailModule};
