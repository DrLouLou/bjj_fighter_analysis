var G=Object.defineProperty,j=Object.defineProperties,Y=Object.getOwnPropertyDescriptor,$=Object.getOwnPropertyDescriptors,R=Object.getOwnPropertySymbols,H=Object.prototype.hasOwnProperty,q=Object.prototype.propertyIsEnumerable,w=(r,e,t)=>e in r?G(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,Z=(r,e)=>{for(var t in e||(e={}))H.call(e,t)&&w(r,t,e[t]);if(R)for(var t of R(e))q.call(e,t)&&w(r,t,e[t]);return r},J=(r,e)=>j(r,$(e)),d=(r,e,t,o)=>{for(var s=o>1?void 0:o?Y(e,t):e,n=r.length-1,i;n>=0;n--)(i=r[n])&&(s=(o?i(e,t,s):i(s))||s);return o&&s&&G(e,t,s),s};import{ModuleNames as Q}from"@ag-grid-community/core";import{EnterpriseCoreModule as X}from"@ag-grid-enterprise/core";import{Autowired as ee,Component as te,PostConstruct as oe,Events as se}from"@ag-grid-community/core";var B=class extends te{constructor(){super('<div class="ag-tool-panel-horizontal-resize"></div>'),this.minWidth=100,this.maxWidth=null}setElementToResize(r){this.elementToResize=r}postConstruct(){const r=this.horizontalResizeService.addResizeBar({eResizeBar:this.getGui(),dragStartPixels:1,onResizeStart:this.onResizeStart.bind(this),onResizing:this.onResizing.bind(this),onResizeEnd:this.onResizeEnd.bind(this)});this.addDestroyFunc(r),this.setInverted(this.gos.get("enableRtl"))}dispatchResizeEvent(r,e,t){const o={type:se.EVENT_TOOL_PANEL_SIZE_CHANGED,width:t,started:r,ended:e};this.eventService.dispatchEvent(o)}onResizeStart(){this.startingWidth=this.elementToResize.offsetWidth,this.dispatchResizeEvent(!0,!1,this.startingWidth)}onResizeEnd(r){return this.onResizing(r,!0)}onResizing(r,e=!1){const t=this.inverted?-1:1;let o=Math.max(this.minWidth,Math.floor(this.startingWidth-r*t));this.maxWidth!=null&&(o=Math.min(this.maxWidth,o)),this.elementToResize.style.width=`${o}px`,this.dispatchResizeEvent(!1,e,o)}setInverted(r){this.inverted=r}setMaxWidth(r){this.maxWidth=r}setMinWidth(r){r!=null?this.minWidth=r:this.minWidth=100}};d([ee("horizontalResizeService")],B.prototype,"horizontalResizeService",2),d([oe],B.prototype,"postConstruct",1);import{_ as E,Component as ne,Events as g,ModuleNames as L,ModuleRegistry as M,PostConstruct as ie,RefSelector as re,Autowired as _,ManagedFocusFeature as ae,KeyCode as y}from"@ag-grid-community/core";import{Autowired as O,Component as le,PostConstruct as de,PreDestroy as ue,_ as z,KeyCode as ce}from"@ag-grid-community/core";import{Component as pe,PostConstruct as he,RefSelector as b,_ as W}from"@ag-grid-community/core";var m=class U extends pe{constructor(e){super(),this.toolPanelDef=e}getToolPanelId(){return this.toolPanelDef.id}postConstruct(){const e=this.createTemplate();this.setTemplate(e),this.setLabel(),this.setIcon(),this.addManagedListener(this.eToggleButton,"click",this.onButtonPressed.bind(this)),this.eToggleButton.setAttribute("id",`ag-${this.getCompId()}-button`)}createTemplate(){return`<div class="ag-side-button" role="presentation">
                <button type="button" ref="eToggleButton" tabindex="-1" role="tab" aria-expanded="false" class="ag-button ag-side-button-button">
                    <div ref="eIconWrapper" class="ag-side-button-icon-wrapper" aria-hidden="true"></div>
                    <span ref ="eLabel" class="ag-side-button-label"></span>
                </button>
            </div>`}setLabel(){const e=this.localeService.getLocaleTextFunc(),t=this.toolPanelDef,o=e(t.labelKey,t.labelDefault);this.eLabel.innerText=o}setIcon(){this.eIconWrapper.insertAdjacentElement("afterbegin",W.createIconNoSpan(this.toolPanelDef.iconKey,this.gos))}onButtonPressed(){this.dispatchEvent({type:U.EVENT_TOGGLE_BUTTON_CLICKED})}setSelected(e){this.addOrRemoveCssClass("ag-selected",e),W.setAriaExpanded(this.eToggleButton,e)}getButtonElement(){return this.eToggleButton}};m.EVENT_TOGGLE_BUTTON_CLICKED="toggleButtonClicked",d([b("eToggleButton")],m.prototype,"eToggleButton",2),d([b("eIconWrapper")],m.prototype,"eIconWrapper",2),d([b("eLabel")],m.prototype,"eLabel",2),d([he],m.prototype,"postConstruct",1);var N=m,p=class A extends le{constructor(){super(A.TEMPLATE),this.buttonComps=[]}postConstruct(){this.addManagedListener(this.getFocusableElement(),"keydown",this.handleKeyDown.bind(this))}handleKeyDown(e){if(e.key!==ce.TAB||!e.shiftKey)return;const t=z.last(this.columnModel.getAllDisplayedColumns());this.focusService.focusGridView(t,!0)&&e.preventDefault()}setActiveButton(e){this.buttonComps.forEach(t=>{t.setSelected(e===t.getToolPanelId())})}addButtonComp(e){const t=this.createBean(new N(e));return this.buttonComps.push(t),this.appendChild(t),t.addEventListener(N.EVENT_TOGGLE_BUTTON_CLICKED,()=>{this.dispatchEvent({type:A.EVENT_SIDE_BAR_BUTTON_CLICKED,toolPanelId:e.id})}),t}clearButtons(){this.buttonComps=this.destroyBeans(this.buttonComps),z.clearElement(this.getGui())}};p.EVENT_SIDE_BAR_BUTTON_CLICKED="sideBarButtonClicked",p.TEMPLATE='<div class="ag-side-buttons" role="tablist"></div>',d([O("focusService")],p.prototype,"focusService",2),d([O("columnModel")],p.prototype,"columnModel",2),d([de],p.prototype,"postConstruct",1),d([ue],p.prototype,"clearButtons",1);var F=p,P=class c{static parse(e){if(!e)return;if(e===!0)return{toolPanels:[c.DEFAULT_COLUMN_COMP,c.DEFAULT_FILTER_COMP],defaultToolPanel:"columns"};if(typeof e=="string")return c.parse([e]);if(Array.isArray(e)){const o=[];return e.forEach(s=>{const n=c.DEFAULT_BY_KEY[s];if(!n){console.warn(`AG Grid: the key ${s} is not a valid key for specifying a tool panel, valid keys are: ${Object.keys(c.DEFAULT_BY_KEY).join(",")}`);return}o.push(n)}),o.length===0?void 0:{toolPanels:o,defaultToolPanel:o[0].id}}return{toolPanels:c.parseComponents(e.toolPanels),defaultToolPanel:e.defaultToolPanel,hiddenByDefault:e.hiddenByDefault,position:e.position}}static parseComponents(e){const t=[];return e&&e.forEach(o=>{let s=null;if(typeof o=="string"){const n=c.DEFAULT_BY_KEY[o];if(!n){console.warn(`AG Grid: the key ${o} is not a valid key for specifying a tool panel, valid keys are: ${Object.keys(c.DEFAULT_BY_KEY).join(",")}`);return}s=n}else s=o;t.push(s)}),t}};P.DEFAULT_COLUMN_COMP={id:"columns",labelDefault:"Columns",labelKey:"columns",iconKey:"columns",toolPanel:"agColumnsToolPanel"},P.DEFAULT_FILTER_COMP={id:"filters",labelDefault:"Filters",labelKey:"filters",iconKey:"filter",toolPanel:"agFiltersToolPanel"},P.DEFAULT_BY_KEY={columns:P.DEFAULT_COLUMN_COMP,filters:P.DEFAULT_FILTER_COMP};var x=P;import{Autowired as fe,Component as ge,PostConstruct as me}from"@ag-grid-community/core";var D=class V extends ge{constructor(){super(V.TEMPLATE)}setupResize(){const e=this.getGui(),t=this.resizeBar=this.createManagedBean(new B);e.setAttribute("id",`ag-${this.getCompId()}`),t.setElementToResize(e),this.appendChild(t)}getToolPanelId(){return this.toolPanelId}setToolPanelDef(e,t){const{id:o,minWidth:s,maxWidth:n,width:i}=e;this.toolPanelId=o,this.width=i;const a=this.userComponentFactory.getToolPanelCompDetails(e,t),l=a.newAgStackInstance();if(this.params=a.params,l==null){console.warn(`AG Grid: error processing tool panel component ${o}. You need to specify 'toolPanel'`);return}l.then(this.setToolPanelComponent.bind(this)),s!=null&&this.resizeBar.setMinWidth(s),n!=null&&this.resizeBar.setMaxWidth(n)}setToolPanelComponent(e){this.toolPanelCompInstance=e,this.appendChild(e.getGui()),this.addDestroyFunc(()=>{this.destroyBean(e)}),this.width&&(this.getGui().style.width=`${this.width}px`)}getToolPanelInstance(){return this.toolPanelCompInstance}setResizerSizerSide(e){const t=this.gos.get("enableRtl"),o=e==="left",s=t?o:!o;this.resizeBar.setInverted(s)}refresh(){this.toolPanelCompInstance.refresh(this.params)}};D.TEMPLATE='<div class="ag-tool-panel-wrapper" role="tabpanel"/>',d([fe("userComponentFactory")],D.prototype,"userComponentFactory",2),d([me],D.prototype,"setupResize",1);var Pe=D,h=class k extends ne{constructor(){super(k.TEMPLATE),this.toolPanelWrappers=[]}postConstruct(){var e;this.sideBarButtonsComp.addEventListener(F.EVENT_SIDE_BAR_BUTTON_CLICKED,this.onToolPanelButtonClicked.bind(this));const{sideBar:t}=(e=this.gos.get("initialState"))!=null?e:{};this.setSideBarDef({sideBarDef:x.parse(this.gos.get("sideBar")),sideBarState:t}),this.addManagedPropertyListener("sideBar",this.onSideBarUpdated.bind(this)),this.sideBarService.registerSideBarComp(this),this.createManagedBean(new ae(this.getFocusableElement(),{onTabKeyDown:this.onTabKeyDown.bind(this),handleKeyDown:this.handleKeyDown.bind(this)}))}onTabKeyDown(e){if(e.defaultPrevented)return;const{focusService:t,sideBarButtonsComp:o}=this,s=this.getGui(),n=o.getGui(),i=this.gos.getActiveDomElement(),a=s.querySelector(".ag-tool-panel-wrapper:not(.ag-hidden)"),l=e.target;if(!a)return;if(n.contains(i)){t.focusInto(a,e.shiftKey)&&e.preventDefault();return}if(!e.shiftKey)return;let u=null;a.contains(i)?u=this.focusService.findNextFocusableElement(a,void 0,!0):t.isTargetUnderManagedComponent(a,l)&&e.shiftKey&&(u=this.focusService.findFocusableElementBeforeTabGuard(a,l)),u||(u=n.querySelector(".ag-selected button")),u&&u!==e.target&&(e.preventDefault(),u.focus())}handleKeyDown(e){const t=this.gos.getActiveDomElement();if(!this.sideBarButtonsComp.getGui().contains(t))return;const o=this.sideBarButtonsComp.getGui(),s=Array.prototype.slice.call(o.querySelectorAll(".ag-side-button")),n=s.findIndex(l=>l.contains(t));let i=null;switch(e.key){case y.LEFT:case y.UP:i=Math.max(0,n-1);break;case y.RIGHT:case y.DOWN:i=Math.min(n+1,s.length-1);break}if(i===null)return;const a=s[i].querySelector("button");a&&(a.focus(),e.preventDefault())}onToolPanelButtonClicked(e){const t=e.toolPanelId;this.openedItem()===t?this.openToolPanel(void 0,"sideBarButtonClicked"):this.openToolPanel(t,"sideBarButtonClicked")}clearDownUi(){this.sideBarButtonsComp.clearButtons(),this.destroyToolPanelWrappers()}setSideBarDef({sideBarDef:e,sideBarState:t,existingToolPanelWrappers:o}){if(this.setDisplayed(!1),this.sideBar=e,this.sideBar&&this.sideBar.toolPanels){const s=this.sideBar.toolPanels;if(this.createToolPanelsAndSideButtons(s,t,o),!this.toolPanelWrappers.length)return;const n=t?t.visible:!this.sideBar.hiddenByDefault;if(this.setDisplayed(n),this.setSideBarPosition(t?t.position:this.sideBar.position),n)if(t){const{openToolPanel:i}=t;i&&this.openToolPanel(i,"sideBarInitializing")}else this.openToolPanel(this.sideBar.defaultToolPanel,"sideBarInitializing")}}getDef(){return this.sideBar}setSideBarPosition(e){e||(e="right"),this.position=e;const t=e==="left",o=t?"right":"left";return this.addOrRemoveCssClass("ag-side-bar-left",t),this.addOrRemoveCssClass("ag-side-bar-right",!t),this.toolPanelWrappers.forEach(s=>{s.setResizerSizerSide(o)}),this.eventService.dispatchEvent({type:g.EVENT_SIDE_BAR_UPDATED}),this}setDisplayed(e,t){super.setDisplayed(e,t),this.eventService.dispatchEvent({type:g.EVENT_SIDE_BAR_UPDATED})}getState(){const e={};return this.toolPanelWrappers.forEach(t=>{var o,s;e[t.getToolPanelId()]=(s=(o=t.getToolPanelInstance())==null?void 0:o.getState)==null?void 0:s.call(o)}),{visible:this.isDisplayed(),position:this.position,openToolPanel:this.openedItem(),toolPanels:e}}createToolPanelsAndSideButtons(e,t,o){var s;for(const n of e)this.createToolPanelAndSideButton(n,(s=t?.toolPanels)==null?void 0:s[n.id],o?.[n.id])}validateDef(e){if(e.id==null)return console.warn("AG Grid: please review all your toolPanel components, it seems like at least one of them doesn't have an id"),!1;if(e.toolPanel==="agColumnsToolPanel"&&!M.__assertRegistered(L.ColumnsToolPanelModule,"Column Tool Panel",this.context.getGridId()))return!1;if(e.toolPanel==="agFiltersToolPanel"){if(!M.__assertRegistered(L.FiltersToolPanelModule,"Filters Tool Panel",this.context.getGridId()))return!1;if(this.filterManager.isAdvancedFilterEnabled())return E.warnOnce("Advanced Filter does not work with Filters Tool Panel. Filters Tool Panel has been disabled."),!1}return!0}createToolPanelAndSideButton(e,t,o){if(!this.validateDef(e))return;const s=this.sideBarButtonsComp.addButtonComp(e);let n;o?n=o:(n=this.getContext().createBean(new Pe),n.setToolPanelDef(e,{initialState:t,onStateUpdated:()=>this.eventService.dispatchEvent({type:g.EVENT_SIDE_BAR_UPDATED})})),n.setDisplayed(!1);const i=n.getGui();this.appendChild(i),this.toolPanelWrappers.push(n),E.setAriaControls(s.getButtonElement(),i)}refresh(){this.toolPanelWrappers.forEach(e=>e.refresh())}openToolPanel(e,t="api"){const o=this.openedItem();if(o===e)return;this.toolPanelWrappers.forEach(i=>{const a=e===i.getToolPanelId();i.setDisplayed(a)});const s=this.openedItem();o!==s&&(this.sideBarButtonsComp.setActiveButton(e),this.raiseToolPanelVisibleEvent(e,o??void 0,t))}getToolPanelInstance(e){const t=this.toolPanelWrappers.filter(o=>o.getToolPanelId()===e)[0];if(!t){console.warn(`AG Grid: unable to lookup Tool Panel as invalid key supplied: ${e}`);return}return t.getToolPanelInstance()}raiseToolPanelVisibleEvent(e,t,o){const s=!!e&&!!t;if(t){const n={type:g.EVENT_TOOL_PANEL_VISIBLE_CHANGED,source:o,key:t,visible:!1,switchingToolPanel:s};this.eventService.dispatchEvent(n)}if(e){const n={type:g.EVENT_TOOL_PANEL_VISIBLE_CHANGED,source:o,key:e,visible:!0,switchingToolPanel:s};this.eventService.dispatchEvent(n)}}close(e="api"){this.openToolPanel(void 0,e)}isToolPanelShowing(){return!!this.openedItem()}openedItem(){let e=null;return this.toolPanelWrappers.forEach(t=>{t.isDisplayed()&&(e=t.getToolPanelId())}),e}onSideBarUpdated(){var e;const t=x.parse(this.gos.get("sideBar"));let o={};t&&this.sideBar&&((e=t.toolPanels)==null||e.forEach(s=>{var n,i;const{id:a}=s;if(!a)return;const l=(n=this.sideBar.toolPanels)==null?void 0:n.find(T=>T.id===a);if(!l||s.toolPanel!==l.toolPanel)return;const u=this.toolPanelWrappers.find(T=>T.getToolPanelId()===a);if(!u)return;const f=this.gos.addGridCommonParams(J(Z({},(i=s.toolPanelParams)!=null?i:{}),{onStateUpdated:()=>this.eventService.dispatchEvent({type:g.EVENT_SIDE_BAR_UPDATED})}));u.getToolPanelInstance().refresh(f)===!0&&(this.toolPanelWrappers=this.toolPanelWrappers.filter(T=>T!==u),E.removeFromParent(u.getGui()),o[a]=u)})),this.clearDownUi(),this.setSideBarDef({sideBarDef:t,existingToolPanelWrappers:o})}destroyToolPanelWrappers(){this.toolPanelWrappers.forEach(e=>{E.removeFromParent(e.getGui()),this.destroyBean(e)}),this.toolPanelWrappers.length=0}destroy(){this.destroyToolPanelWrappers(),super.destroy()}};h.TEMPLATE=`<div class="ag-side-bar ag-unselectable">
            <ag-side-bar-buttons ref="sideBarButtons"></ag-side-bar-buttons>
        </div>`,d([_("focusService")],h.prototype,"focusService",2),d([_("filterManager")],h.prototype,"filterManager",2),d([_("sideBarService")],h.prototype,"sideBarService",2),d([re("sideBarButtons")],h.prototype,"sideBarButtonsComp",2),d([ie],h.prototype,"postConstruct",1);var Ce=h;import{_ as I,Autowired as Te,Bean as ve,BeanStub as Be,ProvidedColumnGroup as K}from"@ag-grid-community/core";var v=class extends Be{constructor(){super(...arguments),this.isColGroupDef=r=>r&&typeof r.children<"u",this.getId=r=>this.isColGroupDef(r)?r.groupId:r.colId}createColumnTree(r){const e=[],t=(s,n)=>{if(this.isColGroupDef(s)){const i=s,a=typeof i.groupId<"u"?i.groupId:i.headerName,l=new K(i,a,!1,n),u=[];return i.children.forEach(f=>{const C=t(f,n+1);C&&u.push(C)}),l.setChildren(u),l}else{const i=s,a=i.colId?i.colId:i.field,l=this.columnModel.getPrimaryColumn(a);return l||e.push(i),l}},o=[];return r.forEach(s=>{const n=t(s,0);n&&o.push(n)}),e.length>0&&console.warn("AG Grid: unable to find grid columns for the supplied colDef(s):",e),o}syncLayoutWithGrid(r){const e=this.getLeafPathTrees(),t=this.mergeLeafPathTrees(e);r(t)}getLeafPathTrees(){const r=(o,s)=>{let n;if(o instanceof K)if(o.isPadding())n=s;else{const a=Object.assign({},o.getColGroupDef());a.groupId=o.getGroupId(),a.children=[s],n=a}else{const a=Object.assign({},o.getColDef());a.colId=o.getColId(),n=a}const i=o.getOriginalParent();return i?r(i,n):n};return this.columnModel.getAllGridColumns().filter(o=>{const s=o.getColDef();return o.isPrimary()&&!s.showRowGroup}).map(o=>r(o,o.getColDef()))}mergeLeafPathTrees(r){const e=(s,n)=>this.isColGroupDef(s)&&this.isColGroupDef(n)&&this.getId(s)===this.getId(n),t=(s,n)=>{if(!this.isColGroupDef(n))return s;const i=s,a=n;return a.children&&a.groupId&&this.addChildrenToGroup(i,a.groupId,a.children[0])||a.children.forEach(l=>t(i,l)),i},o=[];for(let s=1;s<=r.length;s++){const n=r[s-1],i=r[s];e(n,i)?r[s]=t(n,i):o.push(n)}return o}addChildrenToGroup(r,e,t){const o=(i,a)=>{const l=i.children.map(this.getId),u=I.includes(l,this.getId(a)),f=I.last(i.children),C=f&&this.getId(f)!==this.getId(a);return u&&C};if(!this.isColGroupDef(r))return!0;const s=r,n=t;if(o(s,n))return s.children.push(n),!0;if(s.groupId===e){const i=s.children.map(this.getId);if(!I.includes(i,this.getId(n)))return s.children.push(n),!0}return s.children.forEach(i=>this.addChildrenToGroup(i,e,t)),!1}};d([Te("columnModel")],v.prototype,"columnModel",2),v=d([ve("toolPanelColDefService")],v);var Ee="31.3.2";import{Bean as ye,BeanStub as De}from"@ag-grid-community/core";var S=class extends De{registerSideBarComp(r){this.sideBarComp=r}getSideBarComp(){return this.sideBarComp}};S=d([ye("sideBarService")],S);var _e={version:Ee,moduleName:Q.SideBarModule,beans:[v,S],agStackComponents:[{componentName:"AgHorizontalResize",componentClass:B},{componentName:"AgSideBar",componentClass:Ce},{componentName:"AgSideBarButtons",componentClass:F}],dependantModules:[X]};export{_e as SideBarModule,v as ToolPanelColDefService};
