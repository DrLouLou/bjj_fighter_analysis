var x=Object.defineProperty,D=Object.getOwnPropertyDescriptor,g=(t,e,s,o)=>{for(var l=o>1?void 0:o?D(e,s):e,i=t.length-1,r;i>=0;i--)(r=t[i])&&(l=(o?r(e,s,l):r(l))||l);return o&&l&&x(e,s,l),l};import{ModuleNames as O}from"@ag-grid-community/core";import{EnterpriseCoreModule as _}from"@ag-grid-enterprise/core";import{CsvExportModule as G}from"@ag-grid-community/csv-export";import{_ as b,Autowired as f,Bean as M,BeanStub as H,ChangedPath as L,Events as m,PostConstruct as k,Optional as U}from"@ag-grid-community/core";var y="paste",E="dragCopy",T="clipboard",P=t=>`AG Grid: Unable to use the Clipboard API (navigator.clipboard.${t}()). The reason why it could not be used has been logged in the previous line. For this reason the grid has defaulted to using a workaround which doesn't perform as well. Either fix why Clipboard API is blocked, OR stop this message from appearing by setting grid property suppressClipboardApi=true (which will default the grid to using the workaround rather than the API.`,d=class extends H{constructor(){super(...arguments),this.lastPasteOperationTime=0,this.navigatorApiFailed=!1}init(){this.logger=this.loggerFactory.create("ClipboardService"),this.rowModel.getType()==="clientSide"&&(this.clientSideRowModel=this.rowModel),this.ctrlsService.whenReady(t=>{this.gridCtrl=t.gridCtrl})}pasteFromClipboard(){this.logger.log("pasteFromClipboard"),!this.gos.get("suppressClipboardApi")&&!this.navigatorApiFailed&&navigator.clipboard&&navigator.clipboard.readText?navigator.clipboard.readText().then(this.processClipboardData.bind(this)).catch(e=>{b.doOnce(()=>{console.warn(e),console.warn(P("readText"))},"clipboardApiError"),this.navigatorApiFailed=!0,this.pasteFromClipboardLegacy()}):this.pasteFromClipboardLegacy()}pasteFromClipboardLegacy(){let t=!1;const e=s=>{const o=new Date().getTime();o-this.lastPasteOperationTime<50&&(t=!0,s.preventDefault()),this.lastPasteOperationTime=o};this.executeOnTempElement(s=>{s.addEventListener("paste",e),s.focus({preventScroll:!0})},s=>{const o=s.value;t?this.refocusLastFocusedCell():this.processClipboardData(o),s.removeEventListener("paste",e)})}refocusLastFocusedCell(){const t=this.focusService.getFocusedCell();t&&this.focusService.setFocusedCell({rowIndex:t.rowIndex,column:t.column,rowPinned:t.rowPinned,forceBrowserFocus:!0})}getClipboardDelimiter(){const t=this.gos.get("clipboardDelimiter");return b.exists(t)?t:"	"}processClipboardData(t){if(t==null)return;let e=d.stringToArray(t,this.getClipboardDelimiter());const s=this.gos.getCallback("processDataFromClipboard");if(s&&(e=s({data:e})),e==null)return;this.gos.get("suppressLastEmptyLineOnPaste")&&this.removeLastLineIfBlank(e);const o=(l,i,r,a)=>{var c;((c=this.rangeService)==null?void 0:c.isMoreThanOneCell())&&!this.hasOnlyOneValueToPaste(e)?this.pasteIntoActiveRange(this.rangeService,e,l,i,a):this.pasteStartingFromFocusedCell(e,l,i,r,a)};this.doPasteOperation(o)}static stringToArray(t,e=","){const s=[],o=i=>i==="\r"||i===`
`;let l=!1;if(t==="")return[[""]];for(let i=0,r=0,a=0;a<t.length;a++){const c=t[a-1],u=t[a],n=t[a+1],h=()=>{s[i]||(s[i]=[]),s[i][r]||(s[i][r]="")};if(h(),u==='"'&&(l?n==='"'?(s[i][r]+='"',a++):l=!1:(c===void 0||c===e||o(c))&&(l=!0)),!l&&u!=='"'){if(u===e){r++,h();continue}else if(o(u)){r=0,i++,h(),u==="\r"&&n===`
`&&a++;continue}}s[i][r]+=u}return s}doPasteOperation(t){const e="clipboard";this.eventService.dispatchEvent({type:m.EVENT_PASTE_START,source:e});let s;if(this.clientSideRowModel){const c=this.gos.get("aggregateOnlyChangedColumns");s=new L(c,this.clientSideRowModel.getRootNode())}const o={},l=[],i=this.focusService.getFocusedCell();t(o,l,i,s);const r=[...l];s&&(this.clientSideRowModel.doAggregate(s),s.forEachChangedNodeDepthFirst(c=>{r.push(c)})),this.rowRenderer.refreshCells({rowNodes:r}),this.dispatchFlashCells(o),this.fireRowChanged(l),this.refocusLastFocusedCell();const a={type:m.EVENT_PASTE_END,source:e};this.eventService.dispatchEvent(a)}pasteIntoActiveRange(t,e,s,o,l){const i=this.getRangeSize(t)%e.length!=0;let r=0,a=0;const c=(u,n,h,p)=>{if(p-r>=e.length){if(i)return;r+=a,a=0}const v=e[p-r];o.push(n);const R=this.gos.getCallback("processCellFromClipboard");h.forEach((w,S)=>{if(!w.isCellEditable(n)||w.isSuppressPaste(n))return;S>=v.length&&(S=S%v.length);const F=this.processCell(n,w,v[S],E,R,!0);n.setDataValue(w,F,y),l&&l.addParentNode(n.parent,[w]);const{rowIndex:V,rowPinned:A}=u,I=this.cellPositionUtils.createIdFromValues({rowIndex:V,column:w,rowPinned:A});s[I]=!0}),a++};this.iterateActiveRanges(!1,c)}getDisplayedColumnsStartingAt(t){let e=t;const s=[];for(;e!=null;)s.push(e),e=this.columnModel.getDisplayedColAfter(e);return s}pasteStartingFromFocusedCell(t,e,s,o,l){if(!o)return;const i={rowIndex:o.rowIndex,rowPinned:o.rowPinned},r=this.getDisplayedColumnsStartingAt(o.column);this.isPasteSingleValueIntoRange(t)?this.pasteSingleValueIntoRange(t,s,e,l):this.pasteMultipleValues(t,i,s,r,e,T,l)}isPasteSingleValueIntoRange(t){return this.hasOnlyOneValueToPaste(t)&&this.rangeService!=null&&!this.rangeService.isEmpty()}pasteSingleValueIntoRange(t,e,s,o){const l=t[0][0],i=(r,a,c)=>{e.push(a),c.forEach(u=>this.updateCellValue(a,u,l,s,T,o))};this.iterateActiveRanges(!1,i)}hasOnlyOneValueToPaste(t){return t.length===1&&t[0].length===1}copyRangeDown(){if(!this.rangeService||this.rangeService.isEmpty())return;const t=[],e=(s,o,l,i)=>{const r=this.gos.getCallback("processCellForClipboard"),a=this.gos.getCallback("processCellFromClipboard"),c=(u,n,h)=>{t.length?(o.push(n),h.forEach((p,C)=>{if(!p.isCellEditable(n)||p.isSuppressPaste(n))return;const v=this.processCell(n,p,t[C],E,a,!0);n.setDataValue(p,v,y),i&&i.addParentNode(n.parent,[p]);const{rowIndex:R,rowPinned:w}=u,S=this.cellPositionUtils.createIdFromValues({rowIndex:R,column:p,rowPinned:w});s[S]=!0})):h.forEach(p=>{const C=this.processCell(n,p,this.valueService.getValue(p,n),E,r,!1,!0);t.push(C)})};this.iterateActiveRanges(!0,c)};this.doPasteOperation(e)}removeLastLineIfBlank(t){const e=b.last(t);if(e&&e.length===1&&e[0]===""){if(t.length===1)return;b.removeFromArray(t,e)}}fireRowChanged(t){this.gos.get("editType")==="fullRow"&&t.forEach(e=>{const s={type:m.EVENT_ROW_VALUE_CHANGED,node:e,data:e.data,rowIndex:e.rowIndex,rowPinned:e.rowPinned};this.eventService.dispatchEvent(s)})}pasteMultipleValues(t,e,s,o,l,i,r){let a=e;const c=this.clientSideRowModel!=null&&!this.gos.get("enableGroupEdit")&&!this.gos.get("treeData"),u=()=>{for(;;){if(!a)return null;const n=this.rowPositionUtils.getRowNode(a);if(a=this.cellNavigationService.getRowBelow({rowPinned:a.rowPinned,rowIndex:a.rowIndex}),n==null)return null;if(!(n.detail||n.footer||c&&n.group))return n}};t.forEach(n=>{const h=u();h&&(n.forEach((p,C)=>this.updateCellValue(h,o[C],p,l,i,r)),s.push(h))})}updateCellValue(t,e,s,o,l,i){if(!t||!e||!e.isCellEditable(t)||e.isSuppressPaste(t)||t.group&&e.isValueActive())return;const r=this.processCell(t,e,s,l,this.gos.getCallback("processCellFromClipboard"),!0);t.setDataValue(e,r,y);const{rowIndex:a,rowPinned:c}=t,u=this.cellPositionUtils.createIdFromValues({rowIndex:a,column:e,rowPinned:c});o[u]=!0,i&&i.addParentNode(t.parent,[e])}copyToClipboard(t={}){this.copyOrCutToClipboard(t)}cutToClipboard(t={},e="api"){if(this.gos.get("suppressCutToClipboard"))return;const s={type:m.EVENT_CUT_START,source:e};this.eventService.dispatchEvent(s),this.copyOrCutToClipboard(t,!0);const o={type:m.EVENT_CUT_END,source:e};this.eventService.dispatchEvent(o)}copyOrCutToClipboard(t,e){let{includeHeaders:s,includeGroupHeaders:o}=t;this.logger.log(`copyToClipboard: includeHeaders = ${s}`),s==null&&(s=this.gos.get("copyHeadersToClipboard")),o==null&&(o=this.gos.get("copyGroupHeadersToClipboard"));const l={includeHeaders:s,includeGroupHeaders:o},i=!this.gos.get("suppressCopyRowsToClipboard");let r=null;this.rangeService&&!this.rangeService.isEmpty()&&!this.shouldSkipSingleCellRange(this.rangeService)?(this.copySelectedRangeToClipboard(l),r=0):i&&!this.selectionService.isEmpty()?(this.copySelectedRowsToClipboard(l),r=1):this.focusService.isAnyCellFocused()&&(this.copyFocusedCellToClipboard(l),r=2),e&&r!==null&&this.clearCellsAfterCopy(r)}clearCellsAfterCopy(t){if(this.eventService.dispatchEvent({type:m.EVENT_KEY_SHORTCUT_CHANGED_CELL_START}),t===0)this.rangeService.clearCellRangeCellValues({cellEventSource:"clipboardService"});else if(t===1)this.clearSelectedRows();else{const e=this.focusService.getFocusedCell();if(e==null)return;const s=this.rowPositionUtils.getRowNode(e);s&&this.clearCellValue(s,e.column)}this.eventService.dispatchEvent({type:m.EVENT_KEY_SHORTCUT_CHANGED_CELL_END})}clearSelectedRows(){const t=this.selectionService.getSelectedNodes(),e=this.columnModel.getAllDisplayedColumns();for(const s of t)for(const o of e)this.clearCellValue(s,o)}clearCellValue(t,e){var s;if(!e.isCellEditable(t))return;const o=(s=this.valueService.parseValue(e,t,"",t.getValueFromValueService(e)))!=null?s:null;t.setDataValue(e,o,"clipboardService")}shouldSkipSingleCellRange(t){return this.gos.get("suppressCopySingleCellRanges")&&!t.isMoreThanOneCell()}iterateActiveRanges(t,e,s){if(!this.rangeService||this.rangeService.isEmpty())return;const o=this.rangeService.getCellRanges();t?this.iterateActiveRange(o[0],e,s,!0):o.forEach((l,i)=>this.iterateActiveRange(l,e,s,i===o.length-1))}iterateActiveRange(t,e,s,o){if(!this.rangeService)return;let l=this.rangeService.getRangeStartRow(t);const i=this.rangeService.getRangeEndRow(t);s&&t.columns&&s(t.columns);let r=0,a=!1;for(;!a&&l!=null;){const c=this.rowPositionUtils.getRowNode(l);a=this.rowPositionUtils.sameRow(l,i),e(l,c,t.columns,r++,a&&o),l=this.cellNavigationService.getRowBelow(l)}}copySelectedRangeToClipboard(t={}){if(!this.rangeService||this.rangeService.isEmpty())return;const e=this.rangeService.areAllRangesAbleToMerge(),{data:s,cellsToFlash:o}=e?this.buildDataFromMergedRanges(this.rangeService,t):this.buildDataFromRanges(this.rangeService,t);this.copyDataToClipboard(s),this.dispatchFlashCells(o)}buildDataFromMergedRanges(t,e){const s=new Set,o=t.getCellRanges(),l=new Map,i=[],r={};o.forEach(n=>{n.columns.forEach(C=>s.add(C));const{rowPositions:h,cellsToFlash:p}=this.getRangeRowPositionsAndCellsToFlash(t,n);h.forEach(C=>{const v=`${C.rowIndex}-${C.rowPinned||"null"}`;l.get(v)||(l.set(v,!0),i.push(C))}),Object.assign(r,p)});const a=this.columnModel.getAllDisplayedColumns(),c=Array.from(s);return c.sort((n,h)=>{const p=a.indexOf(n),C=a.indexOf(h);return p-C}),{data:this.buildExportParams({columns:c,rowPositions:i,includeHeaders:e.includeHeaders,includeGroupHeaders:e.includeGroupHeaders}),cellsToFlash:r}}buildDataFromRanges(t,e){const s=t.getCellRanges(),o=[],l={};return s.forEach(i=>{const{rowPositions:r,cellsToFlash:a}=this.getRangeRowPositionsAndCellsToFlash(t,i);Object.assign(l,a),o.push(this.buildExportParams({columns:i.columns,rowPositions:r,includeHeaders:e.includeHeaders,includeGroupHeaders:e.includeGroupHeaders}))}),{data:o.join(`
`),cellsToFlash:l}}getRangeRowPositionsAndCellsToFlash(t,e){const s=[],o={},l=t.getRangeStartRow(e),i=t.getRangeEndRow(e);let r=l;for(;r&&(s.push(r),e.columns.forEach(a=>{const{rowIndex:c,rowPinned:u}=r,n=this.cellPositionUtils.createIdFromValues({rowIndex:c,column:a,rowPinned:u});o[n]=!0}),!this.rowPositionUtils.sameRow(r,i));)r=this.cellNavigationService.getRowBelow(r);return{rowPositions:s,cellsToFlash:o}}getCellsToFlashFromRowNodes(t){const e=this.columnModel.getAllDisplayedColumns(),s={};for(let o=0;o<t.length;o++){const{rowIndex:l,rowPinned:i}=t[o];if(l!=null)for(let r=0;r<e.length;r++){const a=e[r],c=this.cellPositionUtils.createIdFromValues({rowIndex:l,column:a,rowPinned:i});s[c]=!0}}return s}copyFocusedCellToClipboard(t={}){const e=this.focusService.getFocusedCell();if(e==null)return;const s=this.cellPositionUtils.createId(e),o={rowPinned:e.rowPinned,rowIndex:e.rowIndex},l=e.column,i=this.buildExportParams({columns:[l],rowPositions:[o],includeHeaders:t.includeHeaders,includeGroupHeaders:t.includeGroupHeaders});this.copyDataToClipboard(i),this.dispatchFlashCells({[s]:!0})}copySelectedRowsToClipboard(t={}){const{columnKeys:e,includeHeaders:s,includeGroupHeaders:o}=t,l=this.buildExportParams({columns:e,includeHeaders:s,includeGroupHeaders:o});this.copyDataToClipboard(l);const i=this.selectionService.getSelectedNodes()||[];this.dispatchFlashCells(this.getCellsToFlashFromRowNodes(i))}buildExportParams(t){const{columns:e,rowPositions:s,includeHeaders:o=!1,includeGroupHeaders:l=!1}=t,i={columnKeys:e,rowPositions:s,skipColumnHeaders:!o,skipColumnGroupHeaders:!l,suppressQuotes:!0,columnSeparator:this.getClipboardDelimiter(),onlySelected:!s,processCellCallback:this.gos.getCallback("processCellForClipboard"),processRowGroupCallback:r=>this.processRowGroupCallback(r),processHeaderCallback:this.gos.getCallback("processHeaderForClipboard"),processGroupHeaderCallback:this.gos.getCallback("processGroupHeaderForClipboard")};return this.csvCreator.getDataAsCsv(i,!0)}processRowGroupCallback(t){const{node:e,column:s}=t,o=this.gos.get("treeData"),l=this.gos.get("suppressGroupMaintainValueType");let r=(()=>{var c,u;if(o||l||!s)return e.key;const n=(c=e.groupData)==null?void 0:c[s.getId()];return!n||!e.rowGroupColumn||e.rowGroupColumn.getColDef().useValueFormatterForExport===!1?n:(u=this.valueService.formatValue(e.rowGroupColumn,e,n))!=null?u:n})();if(t.node.footer){let c="";r&&r.length&&(c=` ${r}`),r=`Total${c}`}const a=this.gos.getCallback("processCellForClipboard");if(a){let c=e.rowGroupColumn;return!c&&e.footer&&e.level===-1&&(c=this.columnModel.getRowGroupColumns()[0]),a({value:r,node:e,column:c,type:"clipboard",formatValue:u=>{var n;return(n=this.valueService.formatValue(c,e,u))!=null?n:u},parseValue:u=>this.valueService.parseValue(c,e,u,this.valueService.getValue(c,e))})}return r}dispatchFlashCells(t){window.setTimeout(()=>{const e={type:m.EVENT_FLASH_CELLS,cells:t};this.eventService.dispatchEvent(e)},0)}processCell(t,e,s,o,l,i,r){var a;return l?l({column:e,node:t,value:s,type:o,formatValue:u=>{var n;return(n=this.valueService.formatValue(e,t??null,u))!=null?n:u},parseValue:u=>this.valueService.parseValue(e,t??null,u,this.valueService.getValue(e,t))}):i&&e.getColDef().useValueParserForImport!==!1?this.valueService.parseValue(e,t??null,s,this.valueService.getValue(e,t)):r&&e.getColDef().useValueFormatterForExport!==!1&&(a=this.valueService.formatValue(e,t??null,s))!=null?a:s}copyDataToClipboard(t){const e=this.gos.getCallback("sendToClipboard");if(e){e({data:t});return}if(!this.gos.get("suppressClipboardApi")&&navigator.clipboard){navigator.clipboard.writeText(t).catch(o=>{b.doOnce(()=>{console.warn(o),console.warn(P("writeText"))},"clipboardApiError"),this.copyDataToClipboardLegacy(t)});return}this.copyDataToClipboardLegacy(t)}copyDataToClipboardLegacy(t){this.executeOnTempElement(e=>{const s=this.gos.getDocument(),o=this.gos.getActiveDomElement();e.value=t||" ",e.select(),e.focus({preventScroll:!0}),s.execCommand("copy")||console.warn("AG Grid: Browser did not allow document.execCommand('copy'). Ensure api.copySelectedRowsToClipboard() is invoked via a user event, i.e. button click, otherwise the browser will prevent it for security reasons."),o!=null&&o.focus!=null&&o.focus({preventScroll:!0})})}executeOnTempElement(t,e){const s=this.gos.getDocument(),o=s.createElement("textarea");o.style.width="1px",o.style.height="1px",o.style.top=s.documentElement.scrollTop+"px",o.style.left=s.documentElement.scrollLeft+"px",o.style.position="absolute",o.style.opacity="0";const l=this.gridCtrl.getGui();l.appendChild(o);try{t(o)}catch{console.warn("AG Grid: Browser does not support document.execCommand('copy') for clipboard operations")}e?window.setTimeout(()=>{e(o),l.removeChild(o)},100):l.removeChild(o)}getRangeSize(t){const e=t.getCellRanges();let s=0,o=0;return e.length>0&&(s=t.getRangeStartRow(e[0]).rowIndex,o=t.getRangeEndRow(e[0]).rowIndex),s-o+1}};g([f("csvCreator")],d.prototype,"csvCreator",2),g([f("loggerFactory")],d.prototype,"loggerFactory",2),g([f("selectionService")],d.prototype,"selectionService",2),g([f("rowModel")],d.prototype,"rowModel",2),g([f("ctrlsService")],d.prototype,"ctrlsService",2),g([f("valueService")],d.prototype,"valueService",2),g([f("focusService")],d.prototype,"focusService",2),g([f("rowRenderer")],d.prototype,"rowRenderer",2),g([f("columnModel")],d.prototype,"columnModel",2),g([f("cellNavigationService")],d.prototype,"cellNavigationService",2),g([f("cellPositionUtils")],d.prototype,"cellPositionUtils",2),g([f("rowPositionUtils")],d.prototype,"rowPositionUtils",2),g([U("rangeService")],d.prototype,"rangeService",2),g([k],d.prototype,"init",1),d=g([M("clipboardService")],d);var B="31.3.2",N={version:B,moduleName:O.ClipboardModule,beans:[d],dependantModules:[_,G]};export{N as ClipboardModule};
